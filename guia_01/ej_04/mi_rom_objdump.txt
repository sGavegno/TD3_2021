
mi_rom.elf:     formato del fichero elf32-i386
mi_rom.elf
arquitectura: i386, opciones 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
dirección de inicio 0xfffffff0

Encabezado del Programa:
    LOAD off    0x00001000 vaddr 0xffff0000 paddr 0xffff0000 align 2**12
         filesz 0x000000db memsz 0x000000db flags rwx
    LOAD off    0x00002000 vaddr 0x00010000 paddr 0xffff00db align 2**12
         filesz 0x0000000e memsz 0x0000000e flags r--
    LOAD off    0x00002200 vaddr 0x00020200 paddr 0xffff00e9 align 2**12
         filesz 0x0000000a memsz 0x0000000a flags r--
    LOAD off    0x00002ff0 vaddr 0xfffffff0 paddr 0xfffffff0 align 2**12
         filesz 0x00000010 memsz 0x00000010 flags r--

Secciones:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .init         000000bd  ffff0000  ffff0000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001e  ffff00bd  ffff00bd  000010bd  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .rutinas      0000000e  00010000  ffff00db  00002000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .kernel       0000000a  00020200  ffff00e9  00002200  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .reset        00000010  fffffff0  fffffff0  00002ff0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
SYMBOL TABLE:
ffff0000 l    d  .init	00000000 .init
ffff00bd l    d  .data	00000000 .data
00010000 l    d  .rutinas	00000000 .rutinas
00020200 l    d  .kernel	00000000 .kernel
fffffff0 l    d  .reset	00000000 .reset
00000000 l    df *ABS*	00000000 init32.asm
ffff00ba l       .init	00000000 init32.guard
00000000 l    df *ABS*	00000000 sys_tables.asm
ffff00bd l       .data	00000000 GDT_32
00000000 l       *ABS*	00000000 NULL_SEL
00000018 l       *ABS*	00000000 GDT_SIZE_32
00000000 l    df *ABS*	00000000 main.asm
00020207 l       .kernel	00000000 main32_init.guard
0002020a l       .kernel	00000000 main32_end
00010000 l       .rutinas	00000000 func
0001000e l       .rutinas	00000000 end_func
00000000 l    df *ABS*	00000000 reset.asm
ffff00bd g       .init	00000000 __INIT_size
00000010 g       *ABS*	00000000 DS_SEL
0001000e g       .rutinas	00000000 __RUTINAS_size
0002020a g       .kernel	00000000 __KERNEL_VMA_END
0002020a g       .kernel	00000000 __KERNEL_size
ffff00bd g       .init	00000000 __SYS_TABLES_VMA
ffff00db g       *ABS*	00000000 __RUTINAS_LMA
00020200 g       *ABS*	00000000 __KERNEL_VMA
ffff00d5 g       .data	00000000 _gdtr32
fffffff0 g       .reset	00000000 reset_vector
ffff0000 g       .init	00000000 init32
00020200 g       .kernel	00000000 main32_init
00004004 g       *ABS*	00000000 __STACK_SIZE
00010000 g       *ABS*	00000000 __RUTINAS_VMA
ffff0000 g       *ABS*	00000000 __INIT_LMA
00000008 g       *ABS*	00000000 CS_SEL
2fff4000 g       *ABS*	00000000 __STACK_START
0001000e g       .rutinas	00000000 __RUTINAS_VMA_END
ffff00e9 g       *ABS*	00000000 __KERNEL_LMA
ffff00bd g       *ABS*	00000000 __SYS_TABLES_LMA
ffff00db g       .data	00000000 __SYS_TABLES_size
ffff0000 g       *ABS*	00000000 __INIT_ROM
fffffff0 g       *ABS*	00000000 __RESET
2fff8004 g       *ABS*	00000000 __STACK_END


Contenido de la sección .init:
 ffff0000 eb1e0000 00000000 0000ffff 0000009a  ................
 ffff0010 cf00ffff 00000092 cf001700 0200ffff  ................
 ffff0020 66a90000 0000751f 87db6631 c0fa2e66  f.....u...f1...f
 ffff0030 0f01161a 000f20c0 6683c801 0f22c066  ...... .f....".f
 ffff0040 ea4900ff ff0800eb fe66b810 008ed88e  .I.......f......
 ffff0050 c08ee08e e86687db bedb00ff ffbf0000  .....f..........
 ffff0060 0100b90e 00010081 e9000001 00f3a4be  ................
 ffff0070 e900ffff bf000202 00b90a02 020081e9  ................
 ffff0080 00020200 f3a40f01 15d500ff ff66b810  .............f..
 ffff0090 008ed0bc 0480ff2f 89e531c0 bf0040ff  ......./..1...@.
 ffff00a0 2fb90480 ff2f81e9 0040ff2f f3aa31c0  /..../...@./..1.
 ffff00b0 6687dbea 00020200 0800f4eb fd        f............   
Contenido de la sección .data:
 ffff00bd 00000000 00000000 ffff0000 009acf00  ................
 ffff00cd ffff0000 0092cf00 1700bd00 ffff      ..............  
Contenido de la sección .rutinas:
 10000 5589e550 b8040000 005889ec 5dcb      U..P.....X..].  
Contenido de la sección .kernel:
 20200 9a000001 000800f4 ebfd               ..........      
Contenido de la sección .reset:
 fffffff0 fafc66e9 0800ffff 90909090 90909090  ..f.............

Desensamblado de la sección .init:
ffff0000 <init32> jmp    ffff0020 <init32+0x20>
	...
ffff000a <init32+0xa> (bad)  
ffff000b <init32+0xb> incl   (%eax)
ffff000d <init32+0xd> add    %al,(%eax)
ffff000f <init32+0xf> lcall  $0x0,$0xffff00cf
ffff0016 <init32+0x16> add    %dl,0x1700cf(%edx)
ffff001c <init32+0x1c> add    (%eax),%al
ffff001e <init32+0x1e> (bad)  
ffff001f <init32+0x1f> jmp    *-0x57(%esi)
ffff0022 <init32+0x22> add    %al,(%eax)
ffff0024 <init32+0x24> add    %al,(%eax)
ffff0026 <init32+0x26> jne    ffff0047 <init32+0x47>
ffff0028 <init32+0x28> xchg   %ebx,%ebx
ffff002a <init32+0x2a> xor    %ax,%ax
ffff002d <init32+0x2d> cli    
ffff002e <init32+0x2e> lgdtw  %cs:(%esi)
ffff0033 <init32+0x33> sbb    (%eax),%al
ffff0035 <init32+0x35> mov    %cr0,%eax
ffff0038 <init32+0x38> or     $0x1,%ax
ffff003c <init32+0x3c> mov    %eax,%cr0
ffff003f <init32+0x3f> ljmpw  $0xffff,$0x49
ffff0045 <init32+0x45> or     %al,(%eax)
ffff0047 <init32+0x47> jmp    ffff0047 <init32+0x47>
ffff0049 <init32+0x49> mov    $0x10,%ax
ffff004d <init32+0x4d> mov    %eax,%ds
ffff004f <init32+0x4f> mov    %eax,%es
ffff0051 <init32+0x51> mov    %eax,%fs
ffff0053 <init32+0x53> mov    %eax,%gs
ffff0055 <init32+0x55> xchg   %bx,%bx
ffff0058 <init32+0x58> mov    $0xffff00db,%esi
ffff005d <init32+0x5d> mov    $0x10000,%edi
ffff0062 <init32+0x62> mov    $0x1000e,%ecx
ffff0067 <init32+0x67> sub    $0x10000,%ecx
ffff006d <init32+0x6d> rep movsb %ds:(%esi),%es:(%edi)
ffff006f <init32+0x6f> mov    $0xffff00e9,%esi
ffff0074 <init32+0x74> mov    $0x20200,%edi
ffff0079 <init32+0x79> mov    $0x2020a,%ecx
ffff007e <init32+0x7e> sub    $0x20200,%ecx
ffff0084 <init32+0x84> rep movsb %ds:(%esi),%es:(%edi)
ffff0086 <init32+0x86> lgdtl  0xffff00d5
ffff008d <init32+0x8d> mov    $0x10,%ax
ffff0091 <init32+0x91> mov    %eax,%ss
ffff0093 <init32+0x93> mov    $0x2fff8004,%esp
ffff0098 <init32+0x98> mov    %esp,%ebp
ffff009a <init32+0x9a> xor    %eax,%eax
ffff009c <init32+0x9c> mov    $0x2fff4000,%edi
ffff00a1 <init32+0xa1> mov    $0x2fff8004,%ecx
ffff00a6 <init32+0xa6> sub    $0x2fff4000,%ecx
ffff00ac <init32+0xac> rep stos %al,%es:(%edi)
ffff00ae <init32+0xae> xor    %eax,%eax
ffff00b0 <init32+0xb0> xchg   %bx,%bx
ffff00b3 <init32+0xb3> ljmp   $0x8,$0x20200
ffff00ba <init32.guard> hlt    
ffff00bb <init32.guard+0x1> jmp    ffff00ba <init32.guard>
