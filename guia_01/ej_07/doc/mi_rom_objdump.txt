
./bin/mi_rom.elf:     formato del fichero elf32-i386
./bin/mi_rom.elf
arquitectura: i386, opciones 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
direcci√≥n de inicio 0xfffffff0

Encabezado del Programa:
    LOAD off    0x00001000 vaddr 0xffff0000 paddr 0xffff0000 align 2**12
         filesz 0x000014a8 memsz 0x000014a8 flags r-x
    LOAD off    0x00003000 vaddr 0x00000000 paddr 0xffff14a8 align 2**12
         filesz 0x0000019c memsz 0x0000019c flags r--
    LOAD off    0x00004000 vaddr 0x00100000 paddr 0xffff1644 align 2**12
         filesz 0x00000189 memsz 0x00000189 flags r--
    LOAD off    0x00005000 vaddr 0x00200000 paddr 0xffff17cd align 2**12
         filesz 0x000000a0 memsz 0x000000a0 flags r--
    LOAD off    0x00006000 vaddr 0x00210000 paddr 0xffff186d align 2**12
         filesz 0x00000059 memsz 0x00000059 flags rw-
    LOAD off    0x00007000 vaddr 0x00202000 paddr 0xffff18c6 align 2**12
         filesz 0x00000484 memsz 0x00000484 flags r-x
    LOAD off    0x00008000 vaddr 0x00300000 paddr 0xffff1d4a align 2**12
         filesz 0x0000003a memsz 0x0000003a flags r--
    LOAD off    0x00008ff0 vaddr 0xfffffff0 paddr 0xfffffff0 align 2**12
         filesz 0x00000010 memsz 0x00000010 flags r--
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rwx

Secciones:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .init         000014a8  ffff0000  ffff0000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .sys_tables   0000019c  00000000  ffff14a8  00003000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .rutinas_handler 00000189  00100000  ffff1644  00004000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .tables_digito 000000a0  00200000  ffff17cd  00005000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .data         00000059  00210000  ffff186d  00006000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .kernel       00000484  00202000  ffff18c6  00007000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 .tareas       0000003a  00300000  ffff1d4a  00008000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .reset        00000010  fffffff0  fffffff0  00008ff0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .comment      0000002a  00000000  00000000  00009000  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
ffff0000 l    d  .init	00000000 .init
00000000 l    d  .sys_tables	00000000 .sys_tables
00100000 l    d  .rutinas_handler	00000000 .rutinas_handler
00200000 l    d  .tables_digito	00000000 .tables_digito
00210000 l    d  .data	00000000 .data
00202000 l    d  .kernel	00000000 .kernel
00300000 l    d  .tareas	00000000 .tareas
fffffff0 l    d  .reset	00000000 .reset
00000000 l    d  .comment	00000000 .comment
00000000 l    df *ABS*	00000000 src/init32.asm
ffff1456 l       .init	00000000 ciclo1
ffff1465 l       .init	00000000 ciclo2
ffff14a5 l       .init	00000000 ciclo2.guard
00000000 l    df *ABS*	00000000 funciones.c
00210054 l     O .data	00000004 i.1550
00210058 l     O .data	00000001 indice.1558
00000000 l    df *ABS*	00000000 src/sys_tables.asm
00000000 l       .sys_tables	00000000 GDT_32
00000000 l       *ABS*	00000000 NULL_SEL
00000018 l       *ABS*	00000000 GDT_SIZE_32
00000010 l       *ABS*	00000000 H_ALTA
0000001e l       .sys_tables	00000000 IDT_32
00000000 l       *ABS*	00000000 ISR00_idt
00000008 l       *ABS*	00000000 ISR01_idt
00000010 l       *ABS*	00000000 ISR02_idt
00000018 l       *ABS*	00000000 ISR03_idt
00000020 l       *ABS*	00000000 ISR04_idt
00000028 l       *ABS*	00000000 ISR05_idt
00000030 l       *ABS*	00000000 ISR06_idt
00000038 l       *ABS*	00000000 ISR07_idt
00000040 l       *ABS*	00000000 ISR08_idt
00000048 l       *ABS*	00000000 ISR09_idt
00000050 l       *ABS*	00000000 ISR10_idt
00000058 l       *ABS*	00000000 ISR11_idt
00000060 l       *ABS*	00000000 ISR12_idt
00000068 l       *ABS*	00000000 ISR13_idt
00000070 l       *ABS*	00000000 ISR14_idt
00000078 l       *ABS*	00000000 ISR15_idt
00000080 l       *ABS*	00000000 ISR16_idt
00000088 l       *ABS*	00000000 ISR17_idt
00000090 l       *ABS*	00000000 ISR18_idt
00000098 l       *ABS*	00000000 ISR19_idt
000000a0 l       *ABS*	00000000 ISR20to31_idt
00000100 l       *ABS*	00000000 ISR32_idt
00000108 l       *ABS*	00000000 ISR33_idt
00000110 l       *ABS*	00000000 ISR34to46_idt
00000178 l       *ABS*	00000000 IDT_SIZE_32
00000000 l    df *ABS*	00000000 src/handler.asm
00100000 l       *ABS*	00000000 OFFSET_HANDLER
00100000 l       .rutinas_handler	00000000 Handler_Timer
00100023 l       .rutinas_handler	00000000 Timer_fin
00100029 l       .rutinas_handler	00000000 Handler_Teclado
00100089 l       .rutinas_handler	00000000 T_1
0010009d l       .rutinas_handler	00000000 T_2
001000b1 l       .rutinas_handler	00000000 T_3
001000c5 l       .rutinas_handler	00000000 T_4
001000d6 l       .rutinas_handler	00000000 T_5
001000e7 l       .rutinas_handler	00000000 T_6
001000f8 l       .rutinas_handler	00000000 T_7
00100109 l       .rutinas_handler	00000000 T_8
0010011a l       .rutinas_handler	00000000 T_9
0010012b l       .rutinas_handler	00000000 T_0
0010013c l       .rutinas_handler	00000000 T_ENTER
00100150 l       .rutinas_handler	00000000 Teclado_fin
00100156 l       .rutinas_handler	00000000 Handler_Teclado_END
00100156 l       .rutinas_handler	00000000 Handler_DE
00100159 l       .rutinas_handler	00000000 Handler_NMI
0010015c l       .rutinas_handler	00000000 Handler_BP
0010015f l       .rutinas_handler	00000000 Handler_OF
00100162 l       .rutinas_handler	00000000 Handler_BR
00100165 l       .rutinas_handler	00000000 Handler_UD
00100168 l       .rutinas_handler	00000000 Handler_NM
0010016b l       .rutinas_handler	00000000 Handler_DF
0010016e l       .rutinas_handler	00000000 Handler_TS
00100171 l       .rutinas_handler	00000000 Handler_NP
00100174 l       .rutinas_handler	00000000 Handler_SS
00100177 l       .rutinas_handler	00000000 Handler_GP
0010017a l       .rutinas_handler	00000000 Handler_PF
0010017d l       .rutinas_handler	00000000 Handler_MF
00100180 l       .rutinas_handler	00000000 Handler_AC
00100183 l       .rutinas_handler	00000000 Handler_MC
00100186 l       .rutinas_handler	00000000 Handler_XM
00000000 l    df *ABS*	00000000 src/sys_datos.asm
00000000 l    df *ABS*	00000000 src/main.asm
00202003 l       .kernel	00000000 kernel_init.halted
0020200d l       .kernel	00000000 kernel_init.guard
00202010 l       .kernel	00000000 kernel_end
00202010 l       .kernel	00000000 borrar_pantalla
0020201e l       .kernel	00000000 ciclo_borrar_pantalla
00000000 l    df *ABS*	00000000 src/tareas.asm
00300039 l       .tareas	00000000 tarea_end
00000000 l    df *ABS*	00000000 src/reset.asm
00100189 g       .rutinas_handler	00000000 __HANDLER_VMA_END
00210041 g       .data	00000000 PUNTERO_PANTALLA
00000196 g       .sys_tables	00000000 _idtr32
ffff14a8 g       .init	00000000 __INIT_VMA_END
0000015f g       .rutinas_handler	00000000 L_Handler_OF
00000159 g       .rutinas_handler	00000000 L_Handler_NMI
0000019c g       .sys_tables	00000000 __SYS_TABLES_VMA_END
ffff14a8 g       .init	00000000 __INIT_size
0020214a g     F .kernel	000000e1 cargar_tabla
0030003a g       .tareas	00000000 __TAREA_1_VMA_END
00000168 g       .rutinas_handler	00000000 L_Handler_NM
00000010 g       *ABS*	00000000 DS_SEL
002020fc g     F .kernel	0000004e buffer_Clear
00202484 g       .kernel	00000000 __KERNEL_VMA_END
ffff17cd g       *ABS*	00000000 __TABLES_DIGITOS_LMA
00000171 g       .rutinas_handler	00000000 L_Handler_NP
00202091 g     F .kernel	0000006b buffer_Pop
ffff186d g       *ABS*	00000000 __DATOS_LMA
00202484 g       .kernel	00000000 __KERNEL_size
00000180 g       .rutinas_handler	00000000 L_Handler_AC
00210000 g       *ABS*	00000000 __DATOS_VMA
002000a0 g       .tables_digito	00000000 __TABLES_DIGITOS_VMA_END
ffff1d4a g       *ABS*	00000000 __TAREA_1_LMA
00000000 g       *ABS*	00000000 __SYS_TABLES_VMA
0000017a g       .rutinas_handler	00000000 L_Handler_PF
ffff1644 g       *ABS*	00000000 __HANDLER_LMA
0000015c g       .rutinas_handler	00000000 L_Handler_BP
00202000 g       *ABS*	00000000 __KERNEL_VMA
00000018 g       .sys_tables	00000000 _gdtr32
fffffff0 g       .reset	00000000 reset_vector
ffff0000 g       .init	00000000 init32
00210002 g       .data	00000000 FLAG_TAREA_1
00001000 g       *ABS*	00000000 __STACK_SIZE
00202000 g       .kernel	00000000 kernel_init
0000016e g       .rutinas_handler	00000000 L_Handler_TS
ffff0000 g       *ABS*	00000000 __INIT_VMA
00210003 g       .data	00000000 CANTIDAD_TECLAS
00200000 g       .tables_digito	00000000 PUNTERO_TABLA_DIGITO
ffff0000 g       *ABS*	00000000 __INIT_LMA
00100189 g       .rutinas_handler	00000000 __HANDLER_size
00000162 g       .rutinas_handler	00000000 L_Handler_BR
002000a0 g       .tables_digito	00000000 __TABLES_DIGITOS_size
00210059 g       .data	00000000 __DATOS_size
00210059 g       .data	00000000 __DATOS_VMA_END
00000186 g       .rutinas_handler	00000000 L_Handler_XM
00000008 g       *ABS*	00000000 CS_SEL
00000177 g       .rutinas_handler	00000000 L_Handler_GP
0020222b g     F .kernel	0000012f calcular_Promedio
00100000 g       *ABS*	00000000 __HANDLER_VMA
2fff4000 g       *ABS*	00000000 __STACK_START
00000165 g       .rutinas_handler	00000000 L_Handler_UD
00202027 g     F .kernel	0000006a buffer_Push
00200000 g       *ABS*	00000000 __TABLES_DIGITOS_VMA
000b8000 g       *ABS*	00000000 BUFFER_VIDEO
00210011 g       .data	00000000 BUFFER_TECLADO
0000017d g       .rutinas_handler	00000000 L_Handler_MF
00000183 g       .rutinas_handler	00000000 L_Handler_MC
0020235a g     F .kernel	0000012a escribir_Pantalla
00210000 g       .data	00000000 CONTADOR_TIMER
0030003a g       .tareas	00000000 __TAREA_1_size
00000156 g       .rutinas_handler	00000000 L_Handler_DE
00000000 g       .rutinas_handler	00000000 L_Handler_Timer
00210031 g       .data	00000000 PROMEDIO_TABLA_DIGITOS
00300000 g       .tareas	00000000 tarea_promedio
ffff18c6 g       *ABS*	00000000 __KERNEL_LMA
00300000 g       *ABS*	00000000 __TAREA_1_VMA
ffff14a8 g       *ABS*	00000000 __SYS_TABLES_LMA
0000019c g       .sys_tables	00000000 __SYS_TABLES_size
0000016b g       .rutinas_handler	00000000 L_Handler_DF
ffff0000 g       *ABS*	00000000 __INIT_ROM
fffffff0 g       *ABS*	00000000 __RESET
00000174 g       .rutinas_handler	00000000 L_Handler_SS
2fff8000 g       *ABS*	00000000 __STACK_END
00000029 g       .rutinas_handler	00000000 L_Handler_Teclado


Contenido de la secci√≥n .init:
 ffff0000 eb1e0000 00000000 0000ffff 0000009a  ................
 ffff0010 cf00ffff 00000092 cf001700 0200ffff  ................
 ffff0020 66a90000 00000f85 411387db 6631c0fa  f.......A...f1..
 ffff0030 e9fc1003 00030002 5f4f5082 5581bf1f  ........_OP.U...
 ffff0040 004f0d0e 00000550 9c8e8f28 1f96b9a3  .O.....P...(....
 ffff0050 ff000000 0000100e 00ff0001 02030405  ................
 ffff0060 14073839 3a3b3c3d 3e3f0c00 0f080000  ..89:;<=>?......
 ffff0070 00000000 2a002a00 002a2a2a 00002a00  ....*.*..***..*.
 ffff0080 2a2a2a00 2a2a2a00 00150000 3f002a15  ***.***.....?.*.
 ffff0090 002a3f2a 00152a00 3f2a2a15 2a2a3f00  .*?*..*.?**.**?.
 ffff00a0 15000015 2a003f00 003f2a2a 15002a15  ....*.?..?**..*.
 ffff00b0 2a2a3f00 2a3f2a00 15150015 3f003f15  **?.*?*.....?.?.
 ffff00c0 003f3f2a 15152a15 3f2a3f15 2a3f3f15  .??*..*.?*?.*??.
 ffff00d0 00001500 2a152a00 152a2a3f 00003f00  ....*.*..**?..?.
 ffff00e0 2a3f2a00 3f2a2a15 00151500 3f152a15  *?*.?**.....?.*.
 ffff00f0 152a3f3f 00153f00 3f3f2a15 3f2a3f15  .*??..?.??*.?*?.
 ffff0100 15001515 2a153f00 153f2a3f 15003f15  ....*.?..?*?..?.
 ffff0110 2a3f3f00 3f3f2a15 15151515 3f153f15  *??.??*.....?.?.
 ffff0120 153f3f3f 15153f15 3f3f3f15 3f3f3f00  .???..?.???.???.
 ffff0130 00000000 00000000 00000000 00000000  ................
 ffff0140 007e81a5 8181bd99 81817e00 00000000  .~........~.....
 ffff0150 007effdb ffffc3e7 ffff7e00 00000000  .~........~.....
 ffff0160 0000006c fefefefe 7c381000 00000000  ...l....|8......
 ffff0170 00000010 387cfe7c 38100000 00000000  ....8|.|8.......
 ffff0180 0000183c 3ce7e7e7 18183c00 00000000  ...<<.....<.....
 ffff0190 0000183c 7effff7e 18183c00 00000000  ...<~..~..<.....
 ffff01a0 00000000 00183c3c 18000000 000000ff  ......<<........
 ffff01b0 ffffffff ffe7c3c3 e7ffffff ffffff00  ................
 ffff01c0 00000000 3c664242 663c0000 000000ff  ....<fBBf<......
 ffff01d0 ffffffff c399bdbd 99c3ffff ffffff00  ................
 ffff01e0 001e0e1a 3278cccc cccc7800 00000000  ....2x....x.....
 ffff01f0 003c6666 66663c18 7e181800 00000000  .<ffff<.~.......
 ffff0200 003f333f 30303030 70f0e000 00000000  .?3?0000p.......
 ffff0210 007f637f 63636363 67e7e6c0 00000000  ..c.ccccg.......
 ffff0220 00001818 db3ce73c db181800 00000000  .....<.<........
 ffff0230 80c0e0f0 f8fef8f0 e0c08000 00000000  ................
 ffff0240 02060e1e 3efe3e1e 0e060200 00000000  ....>.>.........
 ffff0250 00183c7e 1818187e 3c180000 00000000  ..<~...~<.......
 ffff0260 00666666 66666666 00666600 00000000  .fffffff.ff.....
 ffff0270 007fdbdb db7b1b1b 1b1b1b00 00000000  .....{..........
 ffff0280 7cc66038 6cc6c66c 380cc67c 00000000  |.`8l..l8..|....
 ffff0290 00000000 000000fe fefefe00 00000000  ................
 ffff02a0 00183c7e 1818187e 3c187e00 00000000  ..<~...~<.~.....
 ffff02b0 00183c7e 18181818 18181800 00000000  ..<~............
 ffff02c0 00181818 18181818 7e3c1800 00000000  ........~<......
 ffff02d0 00000000 180cfe0c 18000000 00000000  ................
 ffff02e0 00000000 3060fe60 30000000 00000000  ....0`.`0.......
 ffff02f0 00000000 00c0c0c0 fe000000 00000000  ................
 ffff0300 00000000 2466ff66 24000000 00000000  ....$f.f$.......
 ffff0310 00000010 38387c7c fefe0000 00000000  ....88||........
 ffff0320 000000fe fe7c7c38 38100000 00000000  .....||88.......
 ffff0330 00000000 00000000 00000000 00000000  ................
 ffff0340 00183c3c 3c181818 00181800 00000000  ..<<<...........
 ffff0350 66666624 00000000 00000000 00000000  fff$............
 ffff0360 00006c6c fe6c6c6c fe6c6c00 00000018  ..ll.lll.ll.....
 ffff0370 187cc6c2 c07c0606 86c67c18 18000000  .|...|....|.....
 ffff0380 000000c2 c60c1830 60c68600 00000000  .......0`.......
 ffff0390 00386c6c 3876dccc cccc7600 00000000  .8ll8v....v.....
 ffff03a0 30303060 00000000 00000000 00000000  000`............
 ffff03b0 000c1830 30303030 30180c00 00000000  ...000000.......
 ffff03c0 0030180c 0c0c0c0c 0c183000 00000000  .0........0.....
 ffff03d0 00000000 663cff3c 66000000 00000000  ....f<.<f.......
 ffff03e0 00000000 18187e18 18000000 00000000  ......~.........
 ffff03f0 00000000 00000000 18181830 00000000  ...........0....
 ffff0400 00000000 0000fe00 00000000 00000000  ................
 ffff0410 00000000 00000000 00181800 00000000  ................
 ffff0420 00000002 060c1830 60c08000 00000000  .......0`.......
 ffff0430 003c66c3 c3dbdbc3 c3663c00 00000000  .<f......f<.....
 ffff0440 00183878 18181818 18187e00 00000000  ..8x......~.....
 ffff0450 007cc606 0c183060 c0c6fe00 00000000  .|....0`........
 ffff0460 007cc606 063c0606 06c67c00 00000000  .|...<....|.....
 ffff0470 000c1c3c 6cccfe0c 0c0c1e00 00000000  ...<l...........
 ffff0480 00fec0c0 c0fc0606 06c67c00 00000000  ..........|.....
 ffff0490 003860c0 c0fcc6c6 c6c67c00 00000000  .8`.......|.....
 ffff04a0 00fec606 060c1830 30303000 00000000  .......0000.....
 ffff04b0 007cc6c6 c67cc6c6 c6c67c00 00000000  .|...|....|.....
 ffff04c0 007cc6c6 c67e0606 060c7800 00000000  .|...~....x.....
 ffff04d0 00000018 18000000 18180000 00000000  ................
 ffff04e0 00000018 18000000 18183000 00000000  ..........0.....
 ffff04f0 0000060c 18306030 180c0600 00000000  .....0`0........
 ffff0500 00000000 7e00007e 00000000 00000000  ....~..~........
 ffff0510 00006030 180c060c 18306000 00000000  ..`0.....0`.....
 ffff0520 007cc6c6 0c181818 00181800 00000000  .|..............
 ffff0530 00007cc6 c6dedede dcc07c00 00000000  ..|.......|.....
 ffff0540 0010386c c6c6fec6 c6c6c600 00000000  ..8l............
 ffff0550 00fc6666 667c6666 6666fc00 00000000  ..fff|ffff......
 ffff0560 003c66c2 c0c0c0c0 c2663c00 00000000  .<f......f<.....
 ffff0570 00f86c66 66666666 666cf800 00000000  ..lffffffl......
 ffff0580 00fe6662 68786860 6266fe00 00000000  ..fbhxh`bf......
 ffff0590 00fe6662 68786860 6060f000 00000000  ..fbhxh```......
 ffff05a0 003c66c2 c0c0dec6 c6663a00 00000000  .<f......f:.....
 ffff05b0 00c6c6c6 c6fec6c6 c6c6c600 00000000  ................
 ffff05c0 003c1818 18181818 18183c00 00000000  .<........<.....
 ffff05d0 001e0c0c 0c0c0ccc cccc7800 00000000  ..........x.....
 ffff05e0 00e66666 6c78786c 6666e600 00000000  ..fflxxlff......
 ffff05f0 00f06060 60606060 6266fe00 00000000  ..``````bf......
 ffff0600 00c3e7ff ffdbc3c3 c3c3c300 00000000  ................
 ffff0610 00c6e6f6 fedecec6 c6c6c600 00000000  ................
 ffff0620 007cc6c6 c6c6c6c6 c6c67c00 00000000  .|........|.....
 ffff0630 00fc6666 667c6060 6060f000 00000000  ..fff|````......
 ffff0640 007cc6c6 c6c6c6c6 d6de7c0c 0e000000  .|........|.....
 ffff0650 00fc6666 667c6c66 6666e600 00000000  ..fff|lfff......
 ffff0660 007cc6c6 60380c06 c6c67c00 00000000  .|..`8....|.....
 ffff0670 00ffdb99 18181818 18183c00 00000000  ..........<.....
 ffff0680 00c6c6c6 c6c6c6c6 c6c67c00 00000000  ..........|.....
 ffff0690 00c3c3c3 c3c3c3c3 663c1800 00000000  ........f<......
 ffff06a0 00c3c3c3 c3c3dbdb ff666600 00000000  .........ff.....
 ffff06b0 00c3c366 3c18183c 66c3c300 00000000  ...f<..<f.......
 ffff06c0 00c3c3c3 663c1818 18183c00 00000000  ....f<....<.....
 ffff06d0 00ffc386 0c183060 c1c3ff00 00000000  ......0`........
 ffff06e0 003c3030 30303030 30303c00 00000000  .<00000000<.....
 ffff06f0 000080c0 e070381c 0e060200 00000000  .....p8.........
 ffff0700 003c0c0c 0c0c0c0c 0c0c3c00 00000010  .<........<.....
 ffff0710 386cc600 00000000 00000000 00000000  8l..............
 ffff0720 00000000 00000000 00000000 ff000030  ...............0
 ffff0730 30180000 00000000 00000000 00000000  0...............
 ffff0740 00000000 780c7ccc cccc7600 00000000  ....x.|...v.....
 ffff0750 00e06060 786c6666 66667c00 00000000  ..``xlffff|.....
 ffff0760 00000000 7cc6c0c0 c0c67c00 00000000  ....|.....|.....
 ffff0770 001c0c0c 3c6ccccc cccc7600 00000000  ....<l....v.....
 ffff0780 00000000 7cc6fec0 c0c67c00 00000000  ....|.....|.....
 ffff0790 00386c64 60f06060 6060f000 00000000  .8ld`.````......
 ffff07a0 00000000 76cccccc cccc7c0c cc780000  ....v.....|..x..
 ffff07b0 00e06060 6c766666 6666e600 00000000  ..``lvffff......
 ffff07c0 00181800 38181818 18183c00 00000000  ....8.....<.....
 ffff07d0 00060600 0e060606 06060666 663c0000  ...........ff<..
 ffff07e0 00e06060 666c7878 6c66e600 00000000  ..``flxxlf......
 ffff07f0 00381818 18181818 18183c00 00000000  .8........<.....
 ffff0800 00000000 e6ffdbdb dbdbdb00 00000000  ................
 ffff0810 00000000 dc666666 66666600 00000000  .....ffffff.....
 ffff0820 00000000 7cc6c6c6 c6c67c00 00000000  ....|.....|.....
 ffff0830 00000000 dc666666 66667c60 60f00000  .....fffff|``...
 ffff0840 00000000 76cccccc cccc7c0c 0c1e0000  ....v.....|.....
 ffff0850 00000000 dc766660 6060f000 00000000  .....vf```......
 ffff0860 00000000 7cc66038 0cc67c00 00000000  ....|.`8..|.....
 ffff0870 00103030 fc303030 30361c00 00000000  ..00.00006......
 ffff0880 00000000 cccccccc cccc7600 00000000  ..........v.....
 ffff0890 00000000 c3c3c3c3 663c1800 00000000  ........f<......
 ffff08a0 00000000 c3c3c3db dbff6600 00000000  ..........f.....
 ffff08b0 00000000 c3663c18 3c66c300 00000000  .....f<.<f......
 ffff08c0 00000000 c6c6c6c6 c6c67e06 0cf80000  ..........~.....
 ffff08d0 00000000 fecc1830 60c6fe00 00000000  .......0`.......
 ffff08e0 000e1818 18701818 18180e00 00000000  .....p..........
 ffff08f0 00181818 18001818 18181800 00000000  ................
 ffff0900 00701818 180e1818 18187000 00000000  .p........p.....
 ffff0910 0076dc00 00000000 00000000 00000000  .v..............
 ffff0920 00000010 386cc6c6 c6fe0000 00000000  ....8l..........
 ffff0930 003c66c2 c0c0c0c2 663c0c06 7c000000  .<f.....f<..|...
 ffff0940 00cc0000 cccccccc cccc7600 00000000  ..........v.....
 ffff0950 0c183000 7cc6fec0 c0c67c00 00000000  ..0.|.....|.....
 ffff0960 10386c00 780c7ccc cccc7600 00000000  .8l.x.|...v.....
 ffff0970 00cc0000 780c7ccc cccc7600 00000000  ....x.|...v.....
 ffff0980 60301800 780c7ccc cccc7600 00000000  `0..x.|...v.....
 ffff0990 386c3800 780c7ccc cccc7600 00000000  8l8.x.|...v.....
 ffff09a0 0000003c 66606066 3c0c063c 00000000  ...<f``f<..<....
 ffff09b0 10386c00 7cc6fec0 c0c67c00 00000000  .8l.|.....|.....
 ffff09c0 00c60000 7cc6fec0 c0c67c00 00000000  ....|.....|.....
 ffff09d0 60301800 7cc6fec0 c0c67c00 00000000  `0..|.....|.....
 ffff09e0 00660000 38181818 18183c00 00000000  .f..8.....<.....
 ffff09f0 183c6600 38181818 18183c00 00000000  .<f.8.....<.....
 ffff0a00 60301800 38181818 18183c00 00000000  `0..8.....<.....
 ffff0a10 c6001038 6cc6c6fe c6c6c600 00000038  ...8l..........8
 ffff0a20 6c380038 6cc6c6fe c6c6c600 00000018  l8.8l...........
 ffff0a30 306000fe 66607c60 6066fe00 00000000  0`..f`|``f......
 ffff0a40 00000000 6e3b1b7e d8dc7700 00000000  ....n;.~..w.....
 ffff0a50 003e6ccc ccfecccc ccccce00 00000000  .>l.............
 ffff0a60 10386c00 7cc6c6c6 c6c67c00 00000000  .8l.|.....|.....
 ffff0a70 00c60000 7cc6c6c6 c6c67c00 00000000  ....|.....|.....
 ffff0a80 60301800 7cc6c6c6 c6c67c00 00000000  `0..|.....|.....
 ffff0a90 3078cc00 cccccccc cccc7600 00000000  0x........v.....
 ffff0aa0 60301800 cccccccc cccc7600 00000000  `0........v.....
 ffff0ab0 00c60000 c6c6c6c6 c6c67e06 0c780000  ..........~..x..
 ffff0ac0 c6007cc6 c6c6c6c6 c6c67c00 00000000  ..|.......|.....
 ffff0ad0 c600c6c6 c6c6c6c6 c6c67c00 00000000  ..........|.....
 ffff0ae0 18187ec3 c0c0c0c3 7e181800 00000000  ..~.....~.......
 ffff0af0 386c6460 f0606060 60e6fc00 00000000  8ld`.````.......
 ffff0b00 00c3663c 18ff18ff 18181800 00000000  ..f<............
 ffff0b10 fc66667c 62666f66 6666f300 00000000  .ff|bfofff......
 ffff0b20 0e1b1818 187e1818 181818d8 70000000  .....~......p...
 ffff0b30 18306000 780c7ccc cccc7600 00000000  .0`.x.|...v.....
 ffff0b40 0c183000 38181818 18183c00 00000000  ..0.8.....<.....
 ffff0b50 18306000 7cc6c6c6 c6c67c00 00000000  .0`.|.....|.....
 ffff0b60 18306000 cccccccc cccc7600 00000000  .0`.......v.....
 ffff0b70 0076dc00 dc666666 66666600 00000076  .v...ffffff....v
 ffff0b80 dc00c6e6 f6fedece c6c6c600 00000000  ................
 ffff0b90 3c6c6c3e 007e0000 00000000 00000000  <ll>.~..........
 ffff0ba0 386c6c38 007c0000 00000000 00000000  8ll8.|..........
 ffff0bb0 00303000 303060c0 c6c67c00 00000000  .00.00`...|.....
 ffff0bc0 00000000 00fec0c0 c0c00000 00000000  ................
 ffff0bd0 00000000 00fe0606 06060000 00000000  ................
 ffff0be0 c0c0c2c6 cc183060 ce9b060c 1f000000  ......0`........
 ffff0bf0 c0c0c2c6 cc183066 ce963e06 06000000  ......0f..>.....
 ffff0c00 00181800 1818183c 3c3c1800 00000000  .......<<<......
 ffff0c10 00000000 366cd86c 36000000 00000000  ....6l.l6.......
 ffff0c20 00000000 d86c366c d8000000 00000011  .....l6l........
 ffff0c30 44114411 44114411 44114411 44114455  D.D.D.D.D.D.D.DU
 ffff0c40 aa55aa55 aa55aa55 aa55aa55 aa55aadd  .U.U.U.U.U.U.U..
 ffff0c50 77dd77dd 77dd77dd 77dd77dd 77dd7718  w.w.w.w.w.w.w.w.
 ffff0c60 18181818 18181818 18181818 18181818  ................
 ffff0c70 18181818 1818f818 18181818 18181818  ................
 ffff0c80 18181818 f818f818 18181818 18181836  ...............6
 ffff0c90 36363636 3636f636 36363636 36363600  666666.66666666.
 ffff0ca0 00000000 0000fe36 36363636 36363600  .......66666666.
 ffff0cb0 00000000 f818f818 18181818 18181836  ...............6
 ffff0cc0 36363636 f606f636 36363636 36363636  6666...666666666
 ffff0cd0 36363636 36363636 36363636 36363600  666666666666666.
 ffff0ce0 00000000 fe06f636 36363636 36363636  .......666666666
 ffff0cf0 36363636 f606fe00 00000000 00000036  6666...........6
 ffff0d00 36363636 3636fe00 00000000 00000018  666666..........
 ffff0d10 18181818 f818f800 00000000 00000000  ................
 ffff0d20 00000000 0000f818 18181818 18181818  ................
 ffff0d30 18181818 18181f00 00000000 00000018  ................
 ffff0d40 18181818 1818ff00 00000000 00000000  ................
 ffff0d50 00000000 0000ff18 18181818 18181818  ................
 ffff0d60 18181818 18181f18 18181818 18181800  ................
 ffff0d70 00000000 0000ff00 00000000 00000018  ................
 ffff0d80 18181818 1818ff18 18181818 18181818  ................
 ffff0d90 18181818 1f181f18 18181818 18181836  ...............6
 ffff0da0 36363636 36363736 36363636 36363636  6666667666666666
 ffff0db0 36363636 37303f00 00000000 00000000  666670?.........
 ffff0dc0 00000000 3f303736 36363636 36363636  ....?07666666666
 ffff0dd0 36363636 f700ff00 00000000 00000000  6666............
 ffff0de0 00000000 ff00f736 36363636 36363636  .......666666666
 ffff0df0 36363636 37303736 36363636 36363600  666670766666666.
 ffff0e00 00000000 ff00ff00 00000000 00000036  ...............6
 ffff0e10 36363636 f700f736 36363636 36363618  6666...66666666.
 ffff0e20 18181818 ff00ff00 00000000 00000036  ...............6
 ffff0e30 36363636 3636ff00 00000000 00000000  666666..........
 ffff0e40 00000000 ff00ff18 18181818 18181800  ................
 ffff0e50 00000000 0000ff36 36363636 36363636  .......666666666
 ffff0e60 36363636 36363f00 00000000 00000018  666666?.........
 ffff0e70 18181818 1f181f00 00000000 00000000  ................
 ffff0e80 00000000 1f181f18 18181818 18181800  ................
 ffff0e90 00000000 00003f36 36363636 36363636  ......?666666666
 ffff0ea0 36363636 3636ff36 36363636 36363618  666666.66666666.
 ffff0eb0 18181818 ff18ff18 18181818 18181818  ................
 ffff0ec0 18181818 1818f800 00000000 00000000  ................
 ffff0ed0 00000000 00001f18 18181818 181818ff  ................
 ffff0ee0 ffffffff ffffffff ffffffff ffffff00  ................
 ffff0ef0 00000000 0000ffff ffffffff fffffff0  ................
 ffff0f00 f0f0f0f0 f0f0f0f0 f0f0f0f0 f0f0f00f  ................
 ffff0f10 0f0f0f0f 0f0f0f0f 0f0f0f0f 0f0f0fff  ................
 ffff0f20 ffffffff ffff0000 00000000 00000000  ................
 ffff0f30 00000000 76dcd8d8 d8dc7600 00000000  ....v.....v.....
 ffff0f40 0078cccc ccd8ccc6 c6c6cc00 00000000  .x..............
 ffff0f50 00fec6c6 c0c0c0c0 c0c0c000 00000000  ................
 ffff0f60 000000fe 6c6c6c6c 6c6c6c00 00000000  ....lllllll.....
 ffff0f70 0000fec6 60301830 60c6fe00 00000000  ....`0.0`.......
 ffff0f80 00000000 7ed8d8d8 d8d87000 00000000  ....~.....p.....
 ffff0f90 00000066 66666666 7c6060c0 00000000  ...fffff|``.....
 ffff0fa0 00000076 dc181818 18181800 00000000  ...v............
 ffff0fb0 00007e18 3c666666 3c187e00 00000000  ..~.<fff<.~.....
 ffff0fc0 0000386c c6c6fec6 c66c3800 00000000  ..8l.....l8.....
 ffff0fd0 00386cc6 c6c66c6c 6c6cee00 00000000  .8l...llll......
 ffff0fe0 001e3018 0c3e6666 66663c00 00000000  ..0..>ffff<.....
 ffff0ff0 00000000 7edbdbdb 7e000000 00000000  ....~...~.......
 ffff1000 00000306 7edbdbf3 7e60c000 00000000  ....~...~`......
 ffff1010 001c3060 607c6060 60301c00 00000000  ..0``|```0......
 ffff1020 00007cc6 c6c6c6c6 c6c6c600 00000000  ..|.............
 ffff1030 000000fe 0000fe00 00fe0000 00000000  ................
 ffff1040 00000018 187e1818 0000ff00 00000000  .....~..........
 ffff1050 00003018 0c060c18 30007e00 00000000  ..0.....0.~.....
 ffff1060 00000c18 30603018 0c007e00 00000000  ....0`0...~.....
 ffff1070 000e1b1b 18181818 18181818 18181818  ................
 ffff1080 18181818 181818d8 d8d87000 00000000  ..........p.....
 ffff1090 00000018 18007e00 18180000 00000000  ......~.........
 ffff10a0 00000000 76dc0076 dc000000 00000000  ....v..v........
 ffff10b0 386c6c38 00000000 00000000 00000000  8ll8............
 ffff10c0 00000000 00001818 00000000 00000000  ................
 ffff10d0 00000000 00000018 00000000 00000000  ................
 ffff10e0 0f0c0c0c 0c0cec6c 6c3c1c00 00000000  .......ll<......
 ffff10f0 d86c6c6c 6c6c0000 00000000 00000000  .lllll..........
 ffff1100 70d83060 c8f80000 00000000 00000000  p.0`............
 ffff1110 0000007c 7c7c7c7c 7c7c0000 00000000  ...|||||||......
 ffff1120 00000000 00000000 00000000 00000066  ...............f
 ffff1130 bd004000 0066bf00 0000c066 be000000  ..@..f.....f....
 ffff1140 806681fe 00000180 0f843001 66b80000  .f........0.f...
 ffff1150 00006609 f0baf80c 66efbafc 0c66ed83  ..f.....f....f..
 ffff1160 f8ff7509 6681c600 080000eb d466b80c  ..u.f........f..
 ffff1170 00000066 09f0baf8 0c66efba fc0c66ed  ...f.....f....f.
 ffff1180 b508660f bae01772 02b50166 b8000000  ..f....r...f....
 ffff1190 006609f0 baf80c66 efbafc0c 66ed83f8  .f.....f....f...
 ffff11a0 ff752366 81c60001 0000fecd 75dd6681  .u#f........u.f.
 ffff11b0 ee000100 006681ce 00070000 6681c600  .....f......f...
 ffff11c0 010000e9 7bff66b8 0c000000 6609f0ba  ....{.f.....f...
 ffff11d0 f80c66ef bafc0c66 ed66a900 007f0075  ..f....f.f.....u
 ffff11e0 c266b808 00000066 09f0baf8 0c66efba  .f.....f.....f..
 ffff11f0 fc0c66ed b110660f b6c16609 f0baf80c  ..f...f...f.....
 ffff1200 66ef66b8 ffffffff bafc0c66 ef660fb6  f.f........f.f..
 ffff1210 c16689c0 6609f0ba f80c66ef bafc0c66  .f..f.....f....f
 ffff1220 eda80174 1e83e0fc 744566f7 d06689c3  ...t....tEf..f..
 ffff1230 4d09c545 660fb6c1 6609f0ba f80c6689  M..Ef...f.....f.
 ffff1240 e8eb2266 83e0f074 2666f7d0 6689c366  .."f...t&f..f..f
 ffff1250 4f6609c7 6647660f b6c16609 f0baf80c  Of..fGf...f.....
 ffff1260 66ef6689 f8bafc0c 66ef6601 dd664580  f.f.....f.f..fE.
 ffff1270 c10480f9 280f857d ffe927ff bac203b0  ....(..}..'.....
 ffff1280 67eebada 03b000ee fcb100be 3300bac4  g...........3...
 ffff1290 0388c8ee 422eacee fec180f9 0575efb8  ....B........u..
 ffff12a0 112cbad4 03efb100 be3800ba d40388c8  .,.......8......
 ffff12b0 ee2eac42 eefec180 f91972ef b100be6f  ...B......r....o
 ffff12c0 00bac803 88c8ee42 2eacee2e acee2eac  .......B........
 ffff12d0 eefec180 f94072e9 b100be51 00bace03  .....@r....Q....
 ffff12e0 88c8ee2e ac42eefe c180f909 72efbada  .....B......r...
 ffff12f0 03ecb100 be5a00ba c00388c8 ee2eacee  .....Z..........
 ffff1300 fec180f9 1572f0b0 20eebace 03b80500  .....r.. .......
 ffff1310 efb80604 efbac403 b80204ef b80406ef  ................
 ffff1320 b800a08e c0bf0000 be2f01b9 00012e66  ........./.....f
 ffff1330 a52e66a5 2e66a52e 66a583c7 10e2efb8  ..f..f..f.......
 ffff1340 0203efb8 0402efba ce03b805 10efb806  ................
 ffff1350 0eef2e66 0f01161a 000f20c0 6683c801  ...f...... .f...
 ffff1360 0f22c066 ea6d13ff ff0800eb fe66b810  .".f.m.......f..
 ffff1370 008ed88e c08ee08e e8bea814 ffffbf00  ................
 ffff1380 000000b9 9c010000 81e90000 0000f3a4  ................
 ffff1390 be4416ff ffbf0000 1000b989 01100081  .D..............
 ffff13a0 e9000010 00f3a4be cd17ffff bf000020  ............... 
 ffff13b0 00b9a000 200081e9 00002000 f3a4be6d  .... ..... ....m
 ffff13c0 18ffffbf 00002100 b9590021 0081e900  ......!..Y.!....
 ffff13d0 002100f3 a4bec618 ffffbf00 202000b9  .!..........  ..
 ffff13e0 84242000 81e90020 2000f3a4 be4a1dff  .$ ....  ....J..
 ffff13f0 ffbf0000 3000b93a 00300081 e9000030  ....0..:.0.....0
 ffff1400 00f3a40f 01151800 00000f01 1d960100  ................
 ffff1410 0066b810 008ed0bc 0080ff2f 89e531c0  .f........./..1.
 ffff1420 bf0040ff 2fb90080 ff2f81e9 0040ff2f  ..@./..../...@./
 ffff1430 f3aab800 000000a3 31002100 b800800b  ........1.!.....
 ffff1440 00a34100 2100b0ff e664b900 010000e2  ..A.!....d......
 ffff1450 feb90000 0100e460 a801e1fa b0f4e664  .......`.......d
 ffff1460 b9000001 00e460a8 01e1fae4 60b034e6  ......`.....`.4.
 ffff1470 43b000e6 40e640b0 11e620e6 a0b020e6  C...@.@... ... .
 ffff1480 21b028e6 a1b004e6 21b002e6 a1b001e6  !.(.....!.......
 ffff1490 21e6a1b0 fce621b0 ffe6a1fb 31c0ea00  !.....!.....1...
 ffff14a0 20200008 00f4ebfd                      ......        
Contenido de la secci√≥n .sys_tables:
 0000 00000000 00000000 ffff0000 009acf00  ................
 0010 ffff0000 0092cf00 17000000 00005601  ..............V.
 0020 0800008f 10000000 00000000 00005901  ..............Y.
 0030 0800008f 10005c01 0800008f 10005f01  ......\......._.
 0040 0800008f 10006201 0800008f 10006501  ......b.......e.
 0050 0800008f 10006801 0800008f 10006b01  ......h.......k.
 0060 0800008f 10000000 00000000 00006e01  ..............n.
 0070 0800008f 10007101 0800008f 10007401  ......q.......t.
 0080 0800008f 10007701 0800008f 10007a01  ......w.......z.
 0090 0800008f 10000000 00000000 00007d01  ..............}.
 00a0 0800008f 10008001 0800008f 10008301  ................
 00b0 0800008f 10008601 0800008f 10000000  ................
 00c0 00000000 00000000 00000000 00000000  ................
 00d0 00000000 00000000 00000000 00000000  ................
 00e0 00000000 00000000 00000000 00000000  ................
 00f0 00000000 00000000 00000000 00000000  ................
 0100 00000000 00000000 00000000 00000000  ................
 0110 00000000 00000000 00000000 00000000  ................
 0120 0800008e 10002900 0800008e 10000000  ......).........
 0130 00000000 00000000 00000000 00000000  ................
 0140 00000000 00000000 00000000 00000000  ................
 0150 00000000 00000000 00000000 00000000  ................
 0160 00000000 00000000 00000000 00000000  ................
 0170 00000000 00000000 00000000 00000000  ................
 0180 00000000 00000000 00000000 00000000  ................
 0190 00000000 00007701 1e000000           ......w.....    
Contenido de la secci√≥n .rutinas_handler:
 100000 6031c0a1 00002100 40a30000 21003de8  `1....!.@...!.=.
 100010 03000075 0e31c0a3 00002100 c6050200  ...u.1....!.....
 100020 210001b0 20e62061 cf60e460 88c320c0  !... . a.`.`.. .
 100030 0f881a01 000080fb 02744e80 fb03745d  .........tN...t]
 100040 80fb0474 6c80fb05 747b80fb 060f8483  ...tl...t{......
 100050 00000080 fb070f84 8b000000 80fb080f  ................
 100060 84930000 0080fb09 0f849b00 000080fb  ................
 100070 0a0f84a3 00000080 fb0b0f84 ab000000  ................
 100080 80fb1c0f 84b30000 006a0168 11002100  .........j.h..!.
 100090 e8921f10 0083c408 e9b30000 006a0268  .............j.h
 1000a0 11002100 e87e1f10 0083c408 e99f0000  ..!..~..........
 1000b0 006a0368 11002100 e86a1f10 0083c408  .j.h..!..j......
 1000c0 e98b0000 006a0468 11002100 e8561f10  .....j.h..!..V..
 1000d0 0083c408 eb7a6a05 68110021 00e8451f  .....zj.h..!..E.
 1000e0 100083c4 08eb696a 06681100 2100e834  ......ij.h..!..4
 1000f0 1f100083 c408eb58 6a076811 002100e8  .......Xj.h..!..
 100100 231f1000 83c408eb 476a0868 11002100  #.......Gj.h..!.
 100110 e8121f10 0083c408 eb366a09 68110021  .........6j.h..!
 100120 00e8011f 100083c4 08eb256a 00681100  ..........%j.h..
 100130 2100e8f0 1e100083 c408eb14 68110021  !...........h..!
 100140 00680000 2000e8ff 1f100083 c408eb00  .h.. ...........
 100150 b020e620 61cfb2ff cfb202cf b203cfb2  . . a...........
 100160 04cfb205 cfb206cf b207cfb2 08cfb20a  ................
 100170 cfb20bcf b20ccfb2 0dcfb20e cfb210cf  ................
 100180 b211cfb2 12cfb213 cf                 .........       
Contenido de la secci√≥n .tables_digito:
 200000 00000000 00000000 00000000 00000000  ................
 200010 00000000 00000000 00000000 00000000  ................
 200020 00000000 00000000 00000000 00000000  ................
 200030 00000000 00000000 00000000 00000000  ................
 200040 00000000 00000000 00000000 00000000  ................
 200050 00000000 00000000 00000000 00000000  ................
 200060 00000000 00000000 00000000 00000000  ................
 200070 00000000 00000000 00000000 00000000  ................
 200080 00000000 00000000 00000000 00000000  ................
 200090 00000000 00000000 00000000 00000000  ................
Contenido de la secci√≥n .data:
 210000 00000000 00000000 00000000 00000000  ................
 210010 00000000 00000000 00000000 00000000  ................
 210020 00000000 00000000 00000000 00000000  ................
 210030 00000000 00000000 00000000 00000000  ................
 210040 00000000 00000000 00000000 00000000  ................
 210050 00000000 00000000 01                 .........       
Contenido de la secci√≥n .kernel:
 202000 6687db9a 00003000 0800f4eb f6f4ebfd  f.....0.........
 202010 be00800b 00b9d007 000066b8 20076689  ..........f. .f.
 202020 0683c602 e2f8c3f3 0f1efb55 89e583ec  ...........U....
 202030 048b450c 8845fc80 7dfc1577 518b4508  ..E..E..}..wQ.E.
 202040 0fb64012 3c0f7746 8b45080f b640100f  ..@.<.wF.E...@..
 202050 b6c08b55 080fb64d fc880c02 8b45080f  ...U...M.....E..
 202060 b640128d 50018b45 08885012 8b45080f  .@..P..E..P..E..
 202070 b640108d 50018b45 08885010 8b45080f  .@..P..E..P..E..
 202080 b640103c 1075078b 4508c640 100090c9  .@.<.u..E..@....
 202090 c3f30f1e fb5589e5 83ec10c6 45ffff8b  .....U......E...
 2020a0 45080fb6 401284c0 744c8b45 080fb640  E...@...tL.E...@
 2020b0 110fb6c0 8b55080f b6040288 45ff8b45  .....U......E..E
 2020c0 080fb640 128d50ff 8b450888 50128b45  ...@..P..E..P..E
 2020d0 080fb640 118d5001 8b450888 50118b45  ...@..P..E..P..E
 2020e0 080fb640 113c1075 078b4508 c6401100  ...@.<.u..E..@..
 2020f0 0fb645ff eb040fb6 45ffc9c3 f30f1efb  ..E.....E.......
 202100 5589e58b 4508c640 10008b45 08c64011  U...E..@...E..@.
 202110 00c70554 00210000 000000eb 19a15400  ...T.!........T.
 202120 21008b55 08c60402 00a15400 210083c0  !..U......T.!...
 202130 01a35400 2100a154 00210083 f80f7edd  ..T.!..T.!....~.
 202140 8b4508c6 40120090 5dc3f30f 1efb5589  .E..@...].....U.
 202150 e583ec10 66c745fe 0000c645 f7ffc745  ....f.E....E...E
 202160 f8000000 0066c745 fe0000eb 36ff750c  .....f.E....6.u.
 202170 e81cffff ff83c404 8845f780 7df7ff74  .........E..}..t
 202180 178b55f8 89d0c1e0 0201d001 c089c20f  ..U.............
 202190 b645f701 d08945f8 0fb745fe 83c00166  .E....E...E....f
 2021a0 8945fe66 837dfe0f 76c30fb6 05580021  .E.f.}..v....X.!
 2021b0 003c0a7f 7366c745 fe0000eb 558b4df8  .<..sf.E....U.M.
 2021c0 bacdcccc cc89c8f7 e2c1ea03 89d0c1e0  ................
 2021d0 0201d001 c029c189 ca0fb605 58002100  .....)......X.!.
 2021e0 0fbec0c1 e0048d48 ff0fb745 fe29c18b  .......H...E.)..
 2021f0 45088814 088b45f8 bacdcccc ccf7e289  E.....E.........
 202200 d0c1e803 8945f80f b745fe83 c0016689  .....E...E....f.
 202210 45fe6683 7dfe0f76 a40fb605 58002100  E.f.}..v....X.!.
 202220 83c001a2 58002100 90c9c3f3 0f1efb55  ....X.!........U
 202230 89e583ec 2066c745 ec000066 c745fe00  .... f.E...f.E..
 202240 0066c745 fc0000c7 45f80000 0000c745  .f.E....E......E
 202250 f4000000 00c745f0 00000000 66c745ee  ......E.....f.E.
 202260 010066c7 45fc0000 e9800000 0066c745  ..f.E........f.E
 202270 fe0000eb 378b55f0 89d0c1e0 0201d001  ....7.U.........
 202280 c089c10f b745fcc1 e00489c2 0fb745fe  .....E........E.
 202290 01c28b45 080fb604 100fb6c0 01c88945  ...E...........E
 2022a0 f00fb745 fe83c001 668945fe 66837dfe  ...E....f.E.f.}.
 2022b0 0f76c283 7df00074 228b45f0 0145f80f  .v..}..t".E..E..
 2022c0 b74dee8b 45f8ba00 000000f7 f18945f4  .M..E.........E.
 2022d0 0fb745ee 83c00166 8945eec7 45f00000  ..E....f.E..E...
 2022e0 00000fb7 45fc83c0 01668945 fc66837d  ....E....f.E.f.}
 2022f0 fc090f86 75ffffff 837df400 745966c7  ....u....}..tYf.
 202300 45fe0000 eb4a8b4d f4bacdcc cccc89c8  E....J.M........
 202310 f7e2c1ea 0389d0c1 e00201d0 01c029c1  ..............).
 202320 89ca0fb7 45feb90f 00000029 c18b450c  ....E......)..E.
 202330 8814088b 45f4bacd ccccccf7 e289d0c1  ....E...........
 202340 e8038945 f40fb745 fe83c001 668945fe  ...E...E....f.E.
 202350 66837dfe 0f76af90 c9c3f30f 1efb5589  f.}..v........U.
 202360 e55383ec 288b5510 8b451466 8955d866  .S..(.U..E.f.U.f
 202370 8945d466 c745fa00 00c745e6 53656261  .E.f.E....E.Seba
 202380 c745ea73 746961c7 45ee6e20 4761c745  .E.stia.E.n Ga.E
 202390 f2766567 6e66c745 f66f0066 c745f800  .vegnf.E.o.f.E..
 2023a0 0066c745 f8120066 837dd818 0f96c266  .f.E...f.}.....f
 2023b0 837dd44f 0f96c021 d084c074 7366c745  .}.O...!...tsf.E
 2023c0 fa0000eb 640fb745 fa8b550c 0fb60c02  ....d..E..U.....
 2023d0 0fb755d4 0fb745fa 8d1c020f b755d889  ..U...E......U..
 2023e0 d0c1e002 01d0c1e0 0401d88d 140083c1  ................
 2023f0 308b4508 880c100f b755d40f b745fa01  0.E......U...E..
 202400 d001c08d 48010fb7 55d889d0 c1e00201  ....H...U.......
 202410 d0c1e005 8d14018b 4508c604 10070fb7  ........E.......
 202420 45fa83c0 01668945 fa66837d fa0f7695  E....f.E.f.}..v.
 202430 66c745fa 0000eb3a 0fb745fa 0fb755fa  f.E....:..E...U.
 202440 81c28007 00008d0c 120fb654 05e68b45  ...........T...E
 202450 08881408 0fb745fa 01c08d90 010f0000  ......E.........
 202460 8b4508c6 0410070f b745fa83 c0016689  .E.......E....f.
 202470 45fa0fb7 45fa663b 45f872bc 909083c4  E...E.f;E.r.....
 202480 285b5dc3                             ([].            
Contenido de la secci√≥n .tareas:
 300000 803d0200 21000175 30c60502 00210000  .=..!..u0....!..
 300010 68310021 00680000 2000e80c 22f0ff83  h1.!.h.. ..."...
 300020 c4086a40 6a006831 002100ff 35410021  ..j@j.h1.!..5A.!
 300030 00e82423 f0ff83c4 10cb               ..$#......      
Contenido de la secci√≥n .reset:
 fffffff0 fafc66e9 0800ffff 90909090 90909090  ..f.............
Contenido de la secci√≥n .comment:
 0000 4743433a 20285562 756e7475 20392e33  GCC: (Ubuntu 9.3
 0010 2e302d31 37756275 6e747531 7e32302e  .0-17ubuntu1~20.
 0020 30342920 392e332e 3000               04) 9.3.0.      

Desensamblado de la secci√≥n .init:
ffff0000 <init32> jmp    ffff0020 <init32+0x20>
	...
ffff000a <init32+0xa> (bad)  
ffff000b <init32+0xb> incl   (%eax)
ffff000d <init32+0xd> add    %al,(%eax)
ffff000f <init32+0xf> lcall  $0x0,$0xffff00cf
ffff0016 <init32+0x16> add    %dl,0x1700cf(%edx)
ffff001c <init32+0x1c> add    (%eax),%al
ffff001e <init32+0x1e> (bad)  
ffff001f <init32+0x1f> jmp    *-0x57(%esi)
ffff0022 <init32+0x22> add    %al,(%eax)
ffff0024 <init32+0x24> add    %al,(%eax)
ffff0026 <init32+0x26> jne    db86136d <__STACK_END+0xab86936d>
ffff002c <init32+0x2c> xor    %ax,%ax
ffff002f <init32+0x2f> cli    
ffff0030 <init32+0x30> jmp    00021131 <__STACK_SIZE+0x20131>
ffff0035 <init32+0x35> add    (%eax),%eax
ffff0037 <init32+0x37> add    0x4f(%edi),%bl
ffff003a <init32+0x3a> push   %eax
ffff003b <init32+0x3b> adcb   $0xbf,-0x7f(%ebp)
ffff003f <init32+0x3f> pop    %ds
ffff0040 <init32+0x40> add    %cl,0xd(%edi)
ffff0043 <init32+0x43> push   %cs
ffff0044 <init32+0x44> add    %al,(%eax)
ffff0046 <init32+0x46> add    $0x8f8e9c50,%eax
ffff004b <init32+0x4b> sub    %bl,(%edi)
ffff004d <init32+0x4d> xchg   %eax,%esi
ffff004e <init32+0x4e> mov    $0xffa3,%ecx
ffff0053 <init32+0x53> add    %al,(%eax)
ffff0055 <init32+0x55> add    %dl,(%eax)
ffff0057 <init32+0x57> push   %cs
ffff0058 <init32+0x58> add    %bh,%bh
ffff005a <init32+0x5a> add    %al,(%ecx)
ffff005c <init32+0x5c> add    (%ebx),%al
ffff005e <init32+0x5e> add    $0x5,%al
ffff0060 <init32+0x60> adc    $0x7,%al
ffff0062 <init32+0x62> cmp    %bh,(%ecx)
ffff0064 <init32+0x64> cmp    (%ebx),%bh
ffff0066 <init32+0x66> cmp    $0x3d,%al
ffff0068 <init32+0x68> ds aas 
ffff006a <init32+0x6a> or     $0x0,%al
ffff006c <init32+0x6c> invd   
ffff006e <init32+0x6e> add    %al,(%eax)
ffff0070 <init32+0x70> add    %al,(%eax)
ffff0072 <init32+0x72> add    %al,(%eax)
ffff0074 <init32+0x74> sub    (%eax),%al
ffff0076 <init32+0x76> sub    (%eax),%al
ffff0078 <init32+0x78> add    %ch,(%edx)
ffff007a <init32+0x7a> sub    (%edx),%ch
ffff007c <init32+0x7c> add    %al,(%eax)
ffff007e <init32+0x7e> sub    (%eax),%al
ffff0080 <init32+0x80> sub    (%edx),%ch
ffff0082 <init32+0x82> sub    (%eax),%al
ffff0084 <init32+0x84> sub    (%edx),%ch
ffff0086 <init32+0x86> sub    (%eax),%al
ffff0088 <init32+0x88> add    %dl,0x3f0000
ffff008e <init32+0x8e> sub    0x2a3f2a00,%dl
ffff0094 <init32+0x94> add    %dl,0x2a3f002a
ffff009a <init32+0x9a> sub    0x3f2a2a,%dl
ffff00a0 <init32+0xa0> adc    $0x2a150000,%eax
ffff00a5 <init32+0xa5> add    %bh,(%edi)
ffff00a7 <init32+0xa7> add    %al,(%eax)
ffff00a9 <init32+0xa9> aas    
ffff00aa <init32+0xaa> sub    (%edx),%ch
ffff00ac <init32+0xac> adc    $0x2a152a00,%eax
ffff00b1 <init32+0xb1> sub    (%edi),%bh
ffff00b3 <init32+0xb3> add    %ch,(%edx)
ffff00b5 <init32+0xb5> aas    
ffff00b6 <init32+0xb6> sub    (%eax),%al
ffff00b8 <init32+0xb8> adc    $0x3f150015,%eax
ffff00bd <init32+0xbd> add    %bh,(%edi)
ffff00bf <init32+0xbf> adc    $0x2a3f3f00,%eax
ffff00c4 <init32+0xc4> adc    $0x3f152a15,%eax
ffff00c9 <init32+0xc9> sub    (%edi),%bh
ffff00cb <init32+0xcb> adc    $0x153f3f2a,%eax
ffff00d0 <init32+0xd0> add    %al,(%eax)
ffff00d2 <init32+0xd2> adc    $0x2a152a00,%eax
ffff00d7 <init32+0xd7> add    %dl,0x3f2a2a
ffff00dd <init32+0xdd> add    %bh,(%edi)
ffff00df <init32+0xdf> add    %ch,(%edx)
ffff00e1 <init32+0xe1> aas    
ffff00e2 <init32+0xe2> sub    (%eax),%al
ffff00e4 <init32+0xe4> aas    
ffff00e5 <init32+0xe5> sub    (%edx),%ch
ffff00e7 <init32+0xe7> adc    $0x151500,%eax
ffff00ec <init32+0xec> aas    
ffff00ed <init32+0xed> adc    $0x2a15152a,%eax
ffff00f2 <init32+0xf2> aas    
ffff00f3 <init32+0xf3> aas    
ffff00f4 <init32+0xf4> add    %dl,0x3f3f003f
ffff00fa <init32+0xfa> sub    0x153f2a3f,%dl
ffff0100 <init32+0x100> adc    $0x2a151500,%eax
ffff0105 <init32+0x105> adc    $0x3f15003f,%eax
ffff010a <init32+0x10a> sub    (%edi),%bh
ffff010c <init32+0x10c> adc    $0x2a153f00,%eax
ffff0111 <init32+0x111> aas    
ffff0112 <init32+0x112> aas    
ffff0113 <init32+0x113> add    %bh,(%edi)
ffff0115 <init32+0x115> aas    
ffff0116 <init32+0x116> sub    0x15151515,%dl
ffff011c <init32+0x11c> aas    
ffff011d <init32+0x11d> adc    $0x3f15153f,%eax
ffff0122 <init32+0x122> aas    
ffff0123 <init32+0x123> aas    
ffff0124 <init32+0x124> adc    $0x3f153f15,%eax
ffff0129 <init32+0x129> aas    
ffff012a <init32+0x12a> aas    
ffff012b <init32+0x12b> adc    $0x3f3f3f,%eax
	...
ffff0140 <init32+0x140> add    %bh,-0x7f(%esi)
ffff0143 <init32+0x143> movsl  %ds:(%esi),%es:(%edi)
ffff0144 <init32+0x144> addl   $0x7e,-0x7e7e6643(%ecx)
ffff014e <init32+0x14e> add    %al,(%eax)
ffff0150 <init32+0x150> add    %bh,-0x1(%esi)
ffff0153 <init32+0x153> (bad)  
ffff0155 <init32+0x155> inc    %ebx
ffff0157 <init32+0x157> out    %eax,$0xff
ffff0159 <init32+0x159> (bad)  
ffff015a <init32+0x15a> jle    ffff015c <init32+0x15c>
ffff015c <init32+0x15c> add    %al,(%eax)
ffff015e <init32+0x15e> add    %al,(%eax)
ffff0160 <init32+0x160> add    %al,(%eax)
ffff0162 <init32+0x162> add    %ch,-0x2(%esi,%edi,8)
ffff0166 <init32+0x166> (bad)  
ffff0167 <init32+0x167> (bad)  
ffff0168 <init32+0x168> jl     ffff01a2 <init32+0x1a2>
ffff016a <init32+0x16a> adc    %al,(%eax)
ffff016c <init32+0x16c> add    %al,(%eax)
ffff016e <init32+0x16e> add    %al,(%eax)
ffff0170 <init32+0x170> add    %al,(%eax)
ffff0172 <init32+0x172> add    %dl,(%eax)
ffff0174 <init32+0x174> cmp    %bh,0x7c(%esi,%edi,8)
ffff0178 <init32+0x178> cmp    %dl,(%eax)
	...
ffff0182 <init32+0x182> sbb    %bh,(%esp,%edi,1)
ffff0185 <init32+0x185> out    %eax,$0xe7
ffff0187 <init32+0x187> out    %eax,$0x18
ffff0189 <init32+0x189> sbb    %bh,(%eax,%eax,1)
ffff018c <init32+0x18c> add    %al,(%eax)
ffff018e <init32+0x18e> add    %al,(%eax)
ffff0190 <init32+0x190> add    %al,(%eax)
ffff0192 <init32+0x192> sbb    %bh,(%esi,%edi,2)
ffff0195 <init32+0x195> (bad)  
ffff0196 <init32+0x196> (bad)  
ffff0197 <init32+0x197> jle    ffff01b1 <init32+0x1b1>
ffff0199 <init32+0x199> sbb    %bh,(%eax,%eax,1)
	...
ffff01a4 <init32+0x1a4> add    %bl,(%eax)
ffff01a6 <init32+0x1a6> cmp    $0x3c,%al
ffff01a8 <init32+0x1a8> sbb    %al,(%eax)
ffff01aa <init32+0x1aa> add    %al,(%eax)
ffff01ac <init32+0x1ac> add    %al,(%eax)
ffff01ae <init32+0x1ae> add    %bh,%bh
ffff01b0 <init32+0x1b0> (bad)  
ffff01b1 <init32+0x1b1> (bad)  
ffff01b2 <init32+0x1b2> (bad)  
ffff01b3 <init32+0x1b3> (bad)  
ffff01b4 <init32+0x1b4> jmp    *%edi
ffff01b6 <init32+0x1b6> ret    
ffff01b7 <init32+0x1b7> ret    
ffff01b8 <init32+0x1b8> out    %eax,$0xff
ffff01ba <init32+0x1ba> (bad)  
ffff01bb <init32+0x1bb> (bad)  
ffff01bc <init32+0x1bc> (bad)  
ffff01bd <init32+0x1bd> (bad)  
ffff01be <init32+0x1be> incl   (%eax)
ffff01c0 <init32+0x1c0> add    %al,(%eax)
ffff01c2 <init32+0x1c2> add    %al,(%eax)
ffff01c4 <init32+0x1c4> cmp    $0x66,%al
ffff01c6 <init32+0x1c6> inc    %edx
ffff01c7 <init32+0x1c7> inc    %edx
ffff01c8 <init32+0x1c8> data16 cmp $0x0,%al
ffff01cb <init32+0x1cb> add    %al,(%eax)
ffff01cd <init32+0x1cd> add    %al,(%eax)
ffff01cf <init32+0x1cf> (bad)  
ffff01d0 <init32+0x1d0> (bad)  
ffff01d1 <init32+0x1d1> (bad)  
ffff01d2 <init32+0x1d2> (bad)  
ffff01d3 <init32+0x1d3> inc    %ebx
ffff01d5 <init32+0x1d5> cltd   
ffff01d6 <init32+0x1d6> mov    $0xffc399bd,%ebp
ffff01db <init32+0x1db> (bad)  
ffff01dc <init32+0x1dc> (bad)  
ffff01dd <init32+0x1dd> (bad)  
ffff01de <init32+0x1de> incl   (%eax)
ffff01e0 <init32+0x1e0> add    %bl,(%esi)
ffff01e2 <init32+0x1e2> push   %cs
ffff01e3 <init32+0x1e3> sbb    (%edx),%dh
ffff01e5 <init32+0x1e5> js     ffff01b3 <init32+0x1b3>
ffff01e7 <init32+0x1e7> int3   
ffff01e8 <init32+0x1e8> int3   
ffff01e9 <init32+0x1e9> int3   
ffff01ea <init32+0x1ea> js     ffff01ec <init32+0x1ec>
ffff01ec <init32+0x1ec> add    %al,(%eax)
ffff01ee <init32+0x1ee> add    %al,(%eax)
ffff01f0 <init32+0x1f0> add    %bh,(%esi,%eiz,2)
ffff01f3 <init32+0x1f3> data16 data16 data16 cmp $0x18,%al
ffff01f8 <init32+0x1f8> jle    ffff0212 <init32+0x212>
ffff01fa <init32+0x1fa> sbb    %al,(%eax)
ffff01fc <init32+0x1fc> add    %al,(%eax)
ffff01fe <init32+0x1fe> add    %al,(%eax)
ffff0200 <init32+0x200> add    %bh,(%edi)
ffff0202 <init32+0x202> xor    (%edi),%edi
ffff0204 <init32+0x204> xor    %dh,(%eax)
ffff0206 <init32+0x206> xor    %dh,(%eax)
ffff0208 <init32+0x208> jo     ffff01fa <init32+0x1fa>
ffff020a <init32+0x20a> loopne ffff020c <init32+0x20c>
ffff020c <init32+0x20c> add    %al,(%eax)
ffff020e <init32+0x20e> add    %al,(%eax)
ffff0210 <init32+0x210> add    %bh,0x63(%edi)
ffff0213 <init32+0x213> jg     ffff0278 <init32+0x278>
ffff0215 <init32+0x215> arpl   %sp,0x63(%ebx)
ffff0218 <init32+0x218> addr16 out %eax,$0xe6
ffff021b <init32+0x21b> rolb   $0x0,(%eax)
ffff021e <init32+0x21e> add    %al,(%eax)
ffff0220 <init32+0x220> add    %al,(%eax)
ffff0222 <init32+0x222> sbb    %bl,(%eax)
ffff0224 <init32+0x224> fstpt  (%edi,%eiz,8)
ffff0227 <init32+0x227> cmp    $0xdb,%al
ffff0229 <init32+0x229> sbb    %bl,(%eax)
ffff022b <init32+0x22b> add    %al,(%eax)
ffff022d <init32+0x22d> add    %al,(%eax)
ffff022f <init32+0x22f> add    %al,-0x70f1f40(%eax)
ffff0235 <init32+0x235> (bad)  
ffff0236 <init32+0x236> clc    
ffff0237 <init32+0x237> lock loopne ffff01fa <init32+0x1fa>
ffff023a <init32+0x23a> addb   $0x0,(%eax)
ffff023d <init32+0x23d> add    %al,(%eax)
ffff023f <init32+0x23f> add    %al,(%edx)
ffff0241 <init32+0x241> push   %es
ffff0242 <init32+0x242> push   %cs
ffff0243 <init32+0x243> push   %ds
ffff0244 <init32+0x244> ds (bad) 
ffff0246 <init32+0x246> ds push %ds
ffff0248 <init32+0x248> push   %cs
ffff0249 <init32+0x249> push   %es
ffff024a <init32+0x24a> add    (%eax),%al
ffff024c <init32+0x24c> add    %al,(%eax)
ffff024e <init32+0x24e> add    %al,(%eax)
ffff0250 <init32+0x250> add    %bl,(%eax)
ffff0252 <init32+0x252> cmp    $0x7e,%al
ffff0254 <init32+0x254> sbb    %bl,(%eax)
ffff0256 <init32+0x256> sbb    %bh,0x3c(%esi)
ffff0259 <init32+0x259> sbb    %al,(%eax)
ffff025b <init32+0x25b> add    %al,(%eax)
ffff025d <init32+0x25d> add    %al,(%eax)
ffff025f <init32+0x25f> add    %al,(%eax)
ffff0261 <init32+0x261> data16 data16 data16 data16 data16 data16 data16 add %ah,0x66(%esi)
ffff026b <init32+0x26b> add    %al,(%eax)
ffff026d <init32+0x26d> add    %al,(%eax)
ffff026f <init32+0x26f> add    %al,(%eax)
ffff0271 <init32+0x271> jg     ffff024e <init32+0x24e>
ffff0273 <init32+0x273> fcmovnu %st(3),%st
ffff0275 <init32+0x275> jnp    ffff0292 <init32+0x292>
ffff0277 <init32+0x277> sbb    (%ebx),%ebx
ffff0279 <init32+0x279> sbb    (%ebx),%ebx
ffff027b <init32+0x27b> add    %al,(%eax)
ffff027d <init32+0x27d> add    %al,(%eax)
ffff027f <init32+0x27f> add    %bh,0x60(%esi,%eax,8)
ffff0283 <init32+0x283> cmp    %ch,-0x3a(%esi,%eax,8)
ffff0287 <init32+0x287> insb   (%dx),%es:(%edi)
ffff0288 <init32+0x288> cmp    %cl,(%esi,%eax,8)
ffff028b <init32+0x28b> jl     ffff028d <init32+0x28d>
	...
ffff0295 <init32+0x295> add    %al,(%eax)
ffff0297 <init32+0x297> (bad)  
ffff0298 <init32+0x298> (bad)  
ffff0299 <init32+0x299> (bad)  
ffff029a <init32+0x29a> incb   (%eax)
ffff029c <init32+0x29c> add    %al,(%eax)
ffff029e <init32+0x29e> add    %al,(%eax)
ffff02a0 <init32+0x2a0> add    %bl,(%eax)
ffff02a2 <init32+0x2a2> cmp    $0x7e,%al
ffff02a4 <init32+0x2a4> sbb    %bl,(%eax)
ffff02a6 <init32+0x2a6> sbb    %bh,0x3c(%esi)
ffff02a9 <init32+0x2a9> sbb    %bh,0x0(%esi)
ffff02ac <init32+0x2ac> add    %al,(%eax)
ffff02ae <init32+0x2ae> add    %al,(%eax)
ffff02b0 <init32+0x2b0> add    %bl,(%eax)
ffff02b2 <init32+0x2b2> cmp    $0x7e,%al
ffff02b4 <init32+0x2b4> sbb    %bl,(%eax)
ffff02b6 <init32+0x2b6> sbb    %bl,(%eax)
ffff02b8 <init32+0x2b8> sbb    %bl,(%eax)
ffff02ba <init32+0x2ba> sbb    %al,(%eax)
ffff02bc <init32+0x2bc> add    %al,(%eax)
ffff02be <init32+0x2be> add    %al,(%eax)
ffff02c0 <init32+0x2c0> add    %bl,(%eax)
ffff02c2 <init32+0x2c2> sbb    %bl,(%eax)
ffff02c4 <init32+0x2c4> sbb    %bl,(%eax)
ffff02c6 <init32+0x2c6> sbb    %bl,(%eax)
ffff02c8 <init32+0x2c8> jle    ffff0306 <init32+0x306>
ffff02ca <init32+0x2ca> sbb    %al,(%eax)
	...
ffff02d4 <init32+0x2d4> sbb    %cl,(%esi,%edi,8)
ffff02d7 <init32+0x2d7> or     $0x18,%al
	...
ffff02e1 <init32+0x2e1> add    %al,(%eax)
ffff02e3 <init32+0x2e3> add    %dh,(%eax)
ffff02e5 <init32+0x2e5> pusha  
ffff02e6 <init32+0x2e6> (bad)  
ffff02e7 <init32+0x2e7> pusha  
ffff02e8 <init32+0x2e8> xor    %al,(%eax)
	...
ffff02f2 <init32+0x2f2> add    %al,(%eax)
ffff02f4 <init32+0x2f4> add    %al,%al
ffff02f6 <init32+0x2f6> rol    $0xfe,%al
	...
ffff0301 <init32+0x301> add    %al,(%eax)
ffff0303 <init32+0x303> add    %ah,(%esi,%eiz,2)
ffff0306 <init32+0x306> jmp    *0x24(%esi)
	...
ffff0311 <init32+0x311> add    %al,(%eax)
ffff0313 <init32+0x313> adc    %bh,(%eax)
ffff0315 <init32+0x315> cmp    %bh,-0x2(%esp,%edi,2)
ffff0319 <init32+0x319> incb   (%eax)
	...
ffff0323 <init32+0x323> (bad)  
ffff0324 <init32+0x324> (bad)  
ffff0325 <init32+0x325> jl     ffff03a3 <init32+0x3a3>
ffff0327 <init32+0x327> cmp    %bh,(%eax)
ffff0329 <init32+0x329> adc    %al,(%eax)
	...
ffff033f <init32+0x33f> add    %al,(%eax)
ffff0341 <init32+0x341> sbb    %bh,(%esp,%edi,1)
ffff0344 <init32+0x344> cmp    $0x18,%al
ffff0346 <init32+0x346> sbb    %bl,(%eax)
ffff0348 <init32+0x348> add    %bl,(%eax)
ffff034a <init32+0x34a> sbb    %al,(%eax)
ffff034c <init32+0x34c> add    %al,(%eax)
ffff034e <init32+0x34e> add    %al,(%eax)
ffff0350 <init32+0x350> data16 data16 data16 and $0x0,%al
	...
ffff0361 <init32+0x361> add    %ch,-0x2(%esp,%ebp,2)
ffff0365 <init32+0x365> insb   (%dx),%es:(%edi)
ffff0366 <init32+0x366> insb   (%dx),%es:(%edi)
ffff0367 <init32+0x367> insb   (%dx),%es:(%edi)
ffff0368 <init32+0x368> (bad)  
ffff0369 <init32+0x369> insb   (%dx),%es:(%edi)
ffff036a <init32+0x36a> insb   (%dx),%es:(%edi)
ffff036b <init32+0x36b> add    %al,(%eax)
ffff036d <init32+0x36d> add    %al,(%eax)
ffff036f <init32+0x36f> sbb    %bl,(%eax)
ffff0371 <init32+0x371> jl     ffff0339 <init32+0x339>
ffff0373 <init32+0x373> ret    $0x7cc0
ffff0376 <init32+0x376> push   %es
ffff0377 <init32+0x377> push   %es
ffff0378 <init32+0x378> xchg   %al,%dh
ffff037a <init32+0x37a> jl     ffff0394 <init32+0x394>
ffff037c <init32+0x37c> sbb    %al,(%eax)
ffff037e <init32+0x37e> add    %al,(%eax)
ffff0380 <init32+0x380> add    %al,(%eax)
ffff0382 <init32+0x382> add    %al,%dl
ffff0384 <init32+0x384> (bad)  
ffff0385 <init32+0x385> or     $0x18,%al
ffff0387 <init32+0x387> xor    %ah,-0x3a(%eax)
ffff038a <init32+0x38a> xchg   %al,(%eax)
ffff038c <init32+0x38c> add    %al,(%eax)
ffff038e <init32+0x38e> add    %al,(%eax)
ffff0390 <init32+0x390> add    %bh,(%eax)
ffff0392 <init32+0x392> insb   (%dx),%es:(%edi)
ffff0393 <init32+0x393> insb   (%dx),%es:(%edi)
ffff0394 <init32+0x394> cmp    %dh,-0x24(%esi)
ffff0397 <init32+0x397> int3   
ffff0398 <init32+0x398> int3   
ffff0399 <init32+0x399> int3   
ffff039a <init32+0x39a> jbe    ffff039c <init32+0x39c>
ffff039c <init32+0x39c> add    %al,(%eax)
ffff039e <init32+0x39e> add    %al,(%eax)
ffff03a0 <init32+0x3a0> xor    %dh,(%eax)
ffff03a2 <init32+0x3a2> xor    %ah,0x0(%eax)
	...
ffff03b1 <init32+0x3b1> or     $0x18,%al
ffff03b3 <init32+0x3b3> xor    %dh,(%eax)
ffff03b5 <init32+0x3b5> xor    %dh,(%eax)
ffff03b7 <init32+0x3b7> xor    %dh,(%eax)
ffff03b9 <init32+0x3b9> sbb    %cl,(%eax,%eax,1)
ffff03bc <init32+0x3bc> add    %al,(%eax)
ffff03be <init32+0x3be> add    %al,(%eax)
ffff03c0 <init32+0x3c0> add    %dh,(%eax)
ffff03c2 <init32+0x3c2> sbb    %cl,(%esp,%ecx,1)
ffff03c5 <init32+0x3c5> or     $0xc,%al
ffff03c7 <init32+0x3c7> or     $0xc,%al
ffff03c9 <init32+0x3c9> sbb    %dh,(%eax)
	...
ffff03d3 <init32+0x3d3> add    %ah,0x3c(%esi)
ffff03d6 <init32+0x3d6> (bad)  
ffff03d7 <init32+0x3d7> cmp    $0x66,%al
	...
ffff03e1 <init32+0x3e1> add    %al,(%eax)
ffff03e3 <init32+0x3e3> add    %bl,(%eax)
ffff03e5 <init32+0x3e5> sbb    %bh,0x18(%esi)
ffff03e8 <init32+0x3e8> sbb    %al,(%eax)
	...
ffff03f6 <init32+0x3f6> add    %al,(%eax)
ffff03f8 <init32+0x3f8> sbb    %bl,(%eax)
ffff03fa <init32+0x3fa> sbb    %dh,(%eax)
	...
ffff0404 <init32+0x404> add    %al,(%eax)
ffff0406 <init32+0x406> incb   (%eax)
	...
ffff0418 <init32+0x418> add    %bl,(%eax)
ffff041a <init32+0x41a> sbb    %al,(%eax)
ffff041c <init32+0x41c> add    %al,(%eax)
ffff041e <init32+0x41e> add    %al,(%eax)
ffff0420 <init32+0x420> add    %al,(%eax)
ffff0422 <init32+0x422> add    %al,(%edx)
ffff0424 <init32+0x424> push   %es
ffff0425 <init32+0x425> or     $0x18,%al
ffff0427 <init32+0x427> xor    %ah,-0x40(%eax)
ffff042a <init32+0x42a> addb   $0x0,(%eax)
ffff042d <init32+0x42d> add    %al,(%eax)
ffff042f <init32+0x42f> add    %al,(%eax)
ffff0431 <init32+0x431> cmp    $0x66,%al
ffff0433 <init32+0x433> ret    
ffff0434 <init32+0x434> ret    
ffff0435 <init32+0x435> fcmovnu %st(3),%st
ffff0437 <init32+0x437> ret    
ffff0438 <init32+0x438> ret    
ffff0439 <init32+0x439> data16 cmp $0x0,%al
ffff043c <init32+0x43c> add    %al,(%eax)
ffff043e <init32+0x43e> add    %al,(%eax)
ffff0440 <init32+0x440> add    %bl,(%eax)
ffff0442 <init32+0x442> cmp    %bh,0x18(%eax)
ffff0445 <init32+0x445> sbb    %bl,(%eax)
ffff0447 <init32+0x447> sbb    %bl,(%eax)
ffff0449 <init32+0x449> sbb    %bh,0x0(%esi)
ffff044c <init32+0x44c> add    %al,(%eax)
ffff044e <init32+0x44e> add    %al,(%eax)
ffff0450 <init32+0x450> add    %bh,0x6(%esi,%eax,8)
ffff0454 <init32+0x454> or     $0x18,%al
ffff0456 <init32+0x456> xor    %ah,-0x40(%eax)
ffff0459 <init32+0x459> (bad)  
ffff045a <init32+0x45a> incb   (%eax)
ffff045c <init32+0x45c> add    %al,(%eax)
ffff045e <init32+0x45e> add    %al,(%eax)
ffff0460 <init32+0x460> add    %bh,0x6(%esi,%eax,8)
ffff0464 <init32+0x464> push   %es
ffff0465 <init32+0x465> cmp    $0x6,%al
ffff0467 <init32+0x467> push   %es
ffff0468 <init32+0x468> push   %es
ffff0469 <init32+0x469> (bad)  
ffff046a <init32+0x46a> jl     ffff046c <init32+0x46c>
ffff046c <init32+0x46c> add    %al,(%eax)
ffff046e <init32+0x46e> add    %al,(%eax)
ffff0470 <init32+0x470> add    %cl,(%esp,%ebx,1)
ffff0473 <init32+0x473> cmp    $0x6c,%al
ffff0475 <init32+0x475> int3   
ffff0476 <init32+0x476> decb   (%esp,%ecx,1)
ffff0479 <init32+0x479> or     $0x1e,%al
ffff047b <init32+0x47b> add    %al,(%eax)
ffff047d <init32+0x47d> add    %al,(%eax)
ffff047f <init32+0x47f> add    %al,(%eax)
ffff0481 <init32+0x481> inc    %al
ffff0483 <init32+0x483> rol    $0xfc,%al
ffff0486 <init32+0x486> push   %es
ffff0487 <init32+0x487> push   %es
ffff0488 <init32+0x488> push   %es
ffff0489 <init32+0x489> (bad)  
ffff048a <init32+0x48a> jl     ffff048c <init32+0x48c>
ffff048c <init32+0x48c> add    %al,(%eax)
ffff048e <init32+0x48e> add    %al,(%eax)
ffff0490 <init32+0x490> add    %bh,(%eax)
ffff0492 <init32+0x492> pusha  
ffff0493 <init32+0x493> rol    $0xfc,%al
ffff0496 <init32+0x496> mov    $0xc6,%dh
ffff0499 <init32+0x499> (bad)  
ffff049a <init32+0x49a> jl     ffff049c <init32+0x49c>
ffff049c <init32+0x49c> add    %al,(%eax)
ffff049e <init32+0x49e> add    %al,(%eax)
ffff04a0 <init32+0x4a0> add    %bh,%dh
ffff04a2 <init32+0x4a2> movb   $0x6,(%esi)
ffff04a5 <init32+0x4a5> or     $0x18,%al
ffff04a7 <init32+0x4a7> xor    %dh,(%eax)
ffff04a9 <init32+0x4a9> xor    %dh,(%eax)
ffff04ab <init32+0x4ab> add    %al,(%eax)
ffff04ad <init32+0x4ad> add    %al,(%eax)
ffff04af <init32+0x4af> add    %al,(%eax)
ffff04b1 <init32+0x4b1> jl     ffff0479 <init32+0x479>
ffff04b3 <init32+0x4b3> mov    $0x7c,%dh
ffff04b6 <init32+0x4b6> mov    $0xc6,%dh
ffff04b9 <init32+0x4b9> (bad)  
ffff04ba <init32+0x4ba> jl     ffff04bc <init32+0x4bc>
ffff04bc <init32+0x4bc> add    %al,(%eax)
ffff04be <init32+0x4be> add    %al,(%eax)
ffff04c0 <init32+0x4c0> add    %bh,-0x3a(%esi,%eax,8)
ffff04c4 <init32+0x4c4> (bad)  
ffff04c5 <init32+0x4c5> jle    ffff04cd <init32+0x4cd>
ffff04c7 <init32+0x4c7> push   %es
ffff04c8 <init32+0x4c8> push   %es
ffff04c9 <init32+0x4c9> or     $0x78,%al
	...
ffff04d3 <init32+0x4d3> sbb    %bl,(%eax)
ffff04d5 <init32+0x4d5> add    %al,(%eax)
ffff04d7 <init32+0x4d7> add    %bl,(%eax)
ffff04d9 <init32+0x4d9> sbb    %al,(%eax)
	...
ffff04e3 <init32+0x4e3> sbb    %bl,(%eax)
ffff04e5 <init32+0x4e5> add    %al,(%eax)
ffff04e7 <init32+0x4e7> add    %bl,(%eax)
ffff04e9 <init32+0x4e9> sbb    %dh,(%eax)
ffff04eb <init32+0x4eb> add    %al,(%eax)
ffff04ed <init32+0x4ed> add    %al,(%eax)
ffff04ef <init32+0x4ef> add    %al,(%eax)
ffff04f1 <init32+0x4f1> add    %al,(%esi)
ffff04f3 <init32+0x4f3> or     $0x18,%al
ffff04f5 <init32+0x4f5> xor    %ah,0x30(%eax)
ffff04f8 <init32+0x4f8> sbb    %cl,(%esi,%eax,1)
	...
ffff0503 <init32+0x503> add    %bh,0x0(%esi)
ffff0506 <init32+0x506> add    %bh,0x0(%esi)
	...
ffff0511 <init32+0x511> add    %ah,0x30(%eax)
ffff0514 <init32+0x514> sbb    %cl,(%esi,%eax,1)
ffff0517 <init32+0x517> or     $0x18,%al
ffff0519 <init32+0x519> xor    %ah,0x0(%eax)
ffff051c <init32+0x51c> add    %al,(%eax)
ffff051e <init32+0x51e> add    %al,(%eax)
ffff0520 <init32+0x520> add    %bh,-0x3a(%esi,%eax,8)
ffff0524 <init32+0x524> or     $0x18,%al
ffff0526 <init32+0x526> sbb    %bl,(%eax)
ffff0528 <init32+0x528> add    %bl,(%eax)
ffff052a <init32+0x52a> sbb    %al,(%eax)
ffff052c <init32+0x52c> add    %al,(%eax)
ffff052e <init32+0x52e> add    %al,(%eax)
ffff0530 <init32+0x530> add    %al,(%eax)
ffff0532 <init32+0x532> jl     ffff04fa <init32+0x4fa>
ffff0534 <init32+0x534> (bad)  
ffff0535 <init32+0x535> (bad)  
ffff0537 <init32+0x537> (bad)  
ffff0539 <init32+0x539> sarb   $0x0,0x0(%eax,%eax,1)
ffff053e <init32+0x53e> add    %al,(%eax)
ffff0540 <init32+0x540> add    %dl,(%eax)
ffff0542 <init32+0x542> cmp    %ch,-0x3a(%esi,%eax,8)
ffff0546 <init32+0x546> inc    %dh
ffff0548 <init32+0x548> mov    $0xc6,%dh
ffff054b <init32+0x54b> add    %al,(%eax)
ffff054d <init32+0x54d> add    %al,(%eax)
ffff054f <init32+0x54f> add    %al,(%eax)
ffff0551 <init32+0x551> cld    
ffff0552 <init32+0x552> data16 data16 data16 jl ffff05bd <init32+0x5bd>
ffff0557 <init32+0x557> data16 data16 data16 cld 
ffff055b <init32+0x55b> add    %al,(%eax)
ffff055d <init32+0x55d> add    %al,(%eax)
ffff055f <init32+0x55f> add    %al,(%eax)
ffff0561 <init32+0x561> cmp    $0x66,%al
ffff0563 <init32+0x563> ret    $0xc0c0
ffff0566 <init32+0x566> rol    $0xc2,%al
ffff0569 <init32+0x569> data16 cmp $0x0,%al
ffff056c <init32+0x56c> add    %al,(%eax)
ffff056e <init32+0x56e> add    %al,(%eax)
ffff0570 <init32+0x570> add    %bh,%al
ffff0572 <init32+0x572> insb   (%dx),%es:(%edi)
ffff0573 <init32+0x573> data16 data16 data16 data16 data16 data16 insb (%dx),%es:(%edi)
ffff057a <init32+0x57a> clc    
ffff057b <init32+0x57b> add    %al,(%eax)
ffff057d <init32+0x57d> add    %al,(%eax)
ffff057f <init32+0x57f> add    %al,(%eax)
ffff0581 <init32+0x581> (bad)  
ffff0582 <init32+0x582> bound  %bp,0x78(%eax)
ffff0586 <init32+0x586> push   $0xfe666260
ffff058b <init32+0x58b> add    %al,(%eax)
ffff058d <init32+0x58d> add    %al,(%eax)
ffff058f <init32+0x58f> add    %al,(%eax)
ffff0591 <init32+0x591> (bad)  
ffff0592 <init32+0x592> bound  %bp,0x78(%eax)
ffff0596 <init32+0x596> push   $0xf0606060
ffff059b <init32+0x59b> add    %al,(%eax)
ffff059d <init32+0x59d> add    %al,(%eax)
ffff059f <init32+0x59f> add    %al,(%eax)
ffff05a1 <init32+0x5a1> cmp    $0x66,%al
ffff05a3 <init32+0x5a3> ret    $0xc0c0
ffff05a6 <init32+0x5a6> faddp  %st,%st(6)
ffff05a8 <init32+0x5a8> (bad)  
ffff05a9 <init32+0x5a9> data16 cmp (%eax),%al
ffff05ac <init32+0x5ac> add    %al,(%eax)
ffff05ae <init32+0x5ae> add    %al,(%eax)
ffff05b0 <init32+0x5b0> add    %al,%dh
ffff05b2 <init32+0x5b2> mov    $0xc6,%dh
ffff05b5 <init32+0x5b5> inc    %dh
ffff05b7 <init32+0x5b7> mov    $0xc6,%dh
ffff05ba <init32+0x5ba> movb   $0x0,(%eax)
ffff05bd <init32+0x5bd> add    %al,(%eax)
ffff05bf <init32+0x5bf> add    %al,(%eax)
ffff05c1 <init32+0x5c1> cmp    $0x18,%al
ffff05c3 <init32+0x5c3> sbb    %bl,(%eax)
ffff05c5 <init32+0x5c5> sbb    %bl,(%eax)
ffff05c7 <init32+0x5c7> sbb    %bl,(%eax)
ffff05c9 <init32+0x5c9> sbb    %bh,(%eax,%eax,1)
ffff05cc <init32+0x5cc> add    %al,(%eax)
ffff05ce <init32+0x5ce> add    %al,(%eax)
ffff05d0 <init32+0x5d0> add    %bl,(%esi)
ffff05d2 <init32+0x5d2> or     $0xc,%al
ffff05d4 <init32+0x5d4> or     $0xc,%al
ffff05d6 <init32+0x5d6> or     $0xcc,%al
ffff05d8 <init32+0x5d8> int3   
ffff05d9 <init32+0x5d9> int3   
ffff05da <init32+0x5da> js     ffff05dc <init32+0x5dc>
ffff05dc <init32+0x5dc> add    %al,(%eax)
ffff05de <init32+0x5de> add    %al,(%eax)
ffff05e0 <init32+0x5e0> add    %ah,%dh
ffff05e2 <init32+0x5e2> data16 data16 insb (%dx),%es:(%edi)
ffff05e5 <init32+0x5e5> js     ffff065f <init32+0x65f>
ffff05e7 <init32+0x5e7> insb   (%dx),%es:(%edi)
ffff05e8 <init32+0x5e8> data16 data16 out %al,$0x0
ffff05ec <init32+0x5ec> add    %al,(%eax)
ffff05ee <init32+0x5ee> add    %al,(%eax)
ffff05f0 <init32+0x5f0> add    %dh,%al
ffff05f2 <init32+0x5f2> pusha  
ffff05f3 <init32+0x5f3> pusha  
ffff05f4 <init32+0x5f4> pusha  
ffff05f5 <init32+0x5f5> pusha  
ffff05f6 <init32+0x5f6> pusha  
ffff05f7 <init32+0x5f7> pusha  
ffff05f8 <init32+0x5f8> bound  %esp,-0x2(%esi)
ffff05fb <init32+0x5fb> add    %al,(%eax)
ffff05fd <init32+0x5fd> add    %al,(%eax)
ffff05ff <init32+0x5ff> add    %al,(%eax)
ffff0601 <init32+0x601> ret    
ffff0602 <init32+0x602> out    %eax,$0xff
ffff0604 <init32+0x604> (bad)  
ffff0605 <init32+0x605> fcmovnb %st(3),%st
ffff0607 <init32+0x607> ret    
ffff0608 <init32+0x608> ret    
ffff0609 <init32+0x609> ret    
ffff060a <init32+0x60a> ret    
ffff060b <init32+0x60b> add    %al,(%eax)
ffff060d <init32+0x60d> add    %al,(%eax)
ffff060f <init32+0x60f> add    %al,(%eax)
ffff0611 <init32+0x611> (bad)  
ffff0612 <init32+0x612> out    %al,$0xf6
ffff0614 <init32+0x614> (bad)  
ffff0615 <init32+0x615> fmulp  %st,%st(6)
ffff0617 <init32+0x617> mov    $0xc6,%dh
ffff061a <init32+0x61a> movb   $0x0,(%eax)
ffff061d <init32+0x61d> add    %al,(%eax)
ffff061f <init32+0x61f> add    %al,(%eax)
ffff0621 <init32+0x621> jl     ffff05e9 <init32+0x5e9>
ffff0623 <init32+0x623> mov    $0xc6,%dh
ffff0626 <init32+0x626> mov    $0xc6,%dh
ffff0629 <init32+0x629> (bad)  
ffff062a <init32+0x62a> jl     ffff062c <init32+0x62c>
ffff062c <init32+0x62c> add    %al,(%eax)
ffff062e <init32+0x62e> add    %al,(%eax)
ffff0630 <init32+0x630> add    %bh,%ah
ffff0632 <init32+0x632> data16 data16 data16 jl ffff0697 <init32+0x697>
ffff0637 <init32+0x637> pusha  
ffff0638 <init32+0x638> pusha  
ffff0639 <init32+0x639> pusha  
ffff063a <init32+0x63a> lock add %al,(%eax)
ffff063d <init32+0x63d> add    %al,(%eax)
ffff063f <init32+0x63f> add    %al,(%eax)
ffff0641 <init32+0x641> jl     ffff0609 <init32+0x609>
ffff0643 <init32+0x643> mov    $0xc6,%dh
ffff0646 <init32+0x646> mov    $0xd6,%dh
ffff0649 <init32+0x649> fidivrs 0xe(%esp,%ecx,1)
ffff064d <init32+0x64d> add    %al,(%eax)
ffff064f <init32+0x64f> add    %al,(%eax)
ffff0651 <init32+0x651> cld    
ffff0652 <init32+0x652> data16 data16 data16 jl ffff06c3 <init32+0x6c3>
ffff0657 <init32+0x657> data16 data16 data16 out %al,$0x0
ffff065c <init32+0x65c> add    %al,(%eax)
ffff065e <init32+0x65e> add    %al,(%eax)
ffff0660 <init32+0x660> add    %bh,-0x3a(%esi,%eax,8)
ffff0664 <init32+0x664> pusha  
ffff0665 <init32+0x665> cmp    %cl,(%esi,%eax,1)
ffff0668 <init32+0x668> mov    $0x7c,%dh
ffff066b <init32+0x66b> add    %al,(%eax)
ffff066d <init32+0x66d> add    %al,(%eax)
ffff066f <init32+0x66f> add    %al,(%eax)
ffff0671 <init32+0x671> (bad)  
ffff0672 <init32+0x672> fistpl 0x18181818(%ecx)
ffff0678 <init32+0x678> sbb    %bl,(%eax)
ffff067a <init32+0x67a> cmp    $0x0,%al
ffff067c <init32+0x67c> add    %al,(%eax)
ffff067e <init32+0x67e> add    %al,(%eax)
ffff0680 <init32+0x680> add    %al,%dh
ffff0682 <init32+0x682> mov    $0xc6,%dh
ffff0685 <init32+0x685> mov    $0xc6,%dh
ffff0688 <init32+0x688> mov    $0x7c,%dh
ffff068b <init32+0x68b> add    %al,(%eax)
ffff068d <init32+0x68d> add    %al,(%eax)
ffff068f <init32+0x68f> add    %al,(%eax)
ffff0691 <init32+0x691> ret    
ffff0692 <init32+0x692> ret    
ffff0693 <init32+0x693> ret    
ffff0694 <init32+0x694> ret    
ffff0695 <init32+0x695> ret    
ffff0696 <init32+0x696> ret    
ffff0697 <init32+0x697> ret    
ffff0698 <init32+0x698> data16 cmp $0x18,%al
ffff069b <init32+0x69b> add    %al,(%eax)
ffff069d <init32+0x69d> add    %al,(%eax)
ffff069f <init32+0x69f> add    %al,(%eax)
ffff06a1 <init32+0x6a1> ret    
ffff06a2 <init32+0x6a2> ret    
ffff06a3 <init32+0x6a3> ret    
ffff06a4 <init32+0x6a4> ret    
ffff06a5 <init32+0x6a5> ret    
ffff06a6 <init32+0x6a6> fcmovnu %st(3),%st
ffff06a8 <init32+0x6a8> jmp    *0x66(%esi)
ffff06ab <init32+0x6ab> add    %al,(%eax)
ffff06ad <init32+0x6ad> add    %al,(%eax)
ffff06af <init32+0x6af> add    %al,(%eax)
ffff06b1 <init32+0x6b1> ret    
ffff06b2 <init32+0x6b2> ret    
ffff06b3 <init32+0x6b3> data16 cmp $0x18,%al
ffff06b6 <init32+0x6b6> sbb    %bh,(%esi,%eiz,2)
ffff06b9 <init32+0x6b9> ret    
ffff06ba <init32+0x6ba> ret    
ffff06bb <init32+0x6bb> add    %al,(%eax)
ffff06bd <init32+0x6bd> add    %al,(%eax)
ffff06bf <init32+0x6bf> add    %al,(%eax)
ffff06c1 <init32+0x6c1> ret    
ffff06c2 <init32+0x6c2> ret    
ffff06c3 <init32+0x6c3> ret    
ffff06c4 <init32+0x6c4> data16 cmp $0x18,%al
ffff06c7 <init32+0x6c7> sbb    %bl,(%eax)
ffff06c9 <init32+0x6c9> sbb    %bh,(%eax,%eax,1)
ffff06cc <init32+0x6cc> add    %al,(%eax)
ffff06ce <init32+0x6ce> add    %al,(%eax)
ffff06d0 <init32+0x6d0> add    %bh,%bh
ffff06d2 <init32+0x6d2> ret    
ffff06d3 <init32+0x6d3> xchg   %cl,(%eax,%ebx,1)
ffff06d6 <init32+0x6d6> xor    %ah,-0x3f(%eax)
ffff06d9 <init32+0x6d9> ret    
ffff06da <init32+0x6da> incl   (%eax)
ffff06dc <init32+0x6dc> add    %al,(%eax)
ffff06de <init32+0x6de> add    %al,(%eax)
ffff06e0 <init32+0x6e0> add    %bh,(%eax,%esi,1)
ffff06e3 <init32+0x6e3> xor    %dh,(%eax)
ffff06e5 <init32+0x6e5> xor    %dh,(%eax)
ffff06e7 <init32+0x6e7> xor    %dh,(%eax)
ffff06e9 <init32+0x6e9> xor    %bh,(%eax,%eax,1)
ffff06ec <init32+0x6ec> add    %al,(%eax)
ffff06ee <init32+0x6ee> add    %al,(%eax)
ffff06f0 <init32+0x6f0> add    %al,(%eax)
ffff06f2 <init32+0x6f2> add    $0xe0,%al
ffff06f5 <init32+0x6f5> jo     ffff072f <init32+0x72f>
ffff06f7 <init32+0x6f7> sbb    $0xe,%al
ffff06f9 <init32+0x6f9> push   %es
ffff06fa <init32+0x6fa> add    (%eax),%al
ffff06fc <init32+0x6fc> add    %al,(%eax)
ffff06fe <init32+0x6fe> add    %al,(%eax)
ffff0700 <init32+0x700> add    %bh,(%esp,%ecx,1)
ffff0703 <init32+0x703> or     $0xc,%al
ffff0705 <init32+0x705> or     $0xc,%al
ffff0707 <init32+0x707> or     $0xc,%al
ffff0709 <init32+0x709> or     $0x3c,%al
ffff070b <init32+0x70b> add    %al,(%eax)
ffff070d <init32+0x70d> add    %al,(%eax)
ffff070f <init32+0x70f> adc    %bh,(%eax)
ffff0711 <init32+0x711> insb   (%dx),%es:(%edi)
ffff0712 <init32+0x712> movb   $0x0,(%eax)
	...
ffff0729 <init32+0x729> add    %al,(%eax)
ffff072b <init32+0x72b> add    %bh,%bh
ffff072d <init32+0x72d> add    %al,(%eax)
ffff072f <init32+0x72f> xor    %dh,(%eax)
ffff0731 <init32+0x731> sbb    %al,(%eax)
	...
ffff0743 <init32+0x743> add    %bh,0xc(%eax)
ffff0746 <init32+0x746> jl     ffff0714 <init32+0x714>
ffff0748 <init32+0x748> int3   
ffff0749 <init32+0x749> int3   
ffff074a <init32+0x74a> jbe    ffff074c <init32+0x74c>
ffff074c <init32+0x74c> add    %al,(%eax)
ffff074e <init32+0x74e> add    %al,(%eax)
ffff0750 <init32+0x750> add    %ah,%al
ffff0752 <init32+0x752> pusha  
ffff0753 <init32+0x753> pusha  
ffff0754 <init32+0x754> js     ffff07c2 <init32+0x7c2>
ffff0756 <init32+0x756> data16 data16 data16 data16 jl ffff075c <init32+0x75c>
	...
ffff0764 <init32+0x764> jl     ffff072c <init32+0x72c>
ffff0766 <init32+0x766> rol    $0xc0,%al
ffff0769 <init32+0x769> (bad)  
ffff076a <init32+0x76a> jl     ffff076c <init32+0x76c>
ffff076c <init32+0x76c> add    %al,(%eax)
ffff076e <init32+0x76e> add    %al,(%eax)
ffff0770 <init32+0x770> add    %bl,(%esp,%ecx,1)
ffff0773 <init32+0x773> or     $0x3c,%al
ffff0775 <init32+0x775> insb   (%dx),%es:(%edi)
ffff0776 <init32+0x776> int3   
ffff0777 <init32+0x777> int3   
ffff0778 <init32+0x778> int3   
ffff0779 <init32+0x779> int3   
ffff077a <init32+0x77a> jbe    ffff077c <init32+0x77c>
	...
ffff0784 <init32+0x784> jl     ffff074c <init32+0x74c>
ffff0786 <init32+0x786> inc    %al
ffff0788 <init32+0x788> rol    $0x7c,%dh
ffff078b <init32+0x78b> add    %al,(%eax)
ffff078d <init32+0x78d> add    %al,(%eax)
ffff078f <init32+0x78f> add    %al,(%eax)
ffff0791 <init32+0x791> cmp    %ch,0x60(%esp,%eiz,2)
ffff0795 <init32+0x795> lock pusha 
ffff0797 <init32+0x797> pusha  
ffff0798 <init32+0x798> pusha  
ffff0799 <init32+0x799> pusha  
ffff079a <init32+0x79a> lock add %al,(%eax)
ffff079d <init32+0x79d> add    %al,(%eax)
ffff079f <init32+0x79f> add    %al,(%eax)
ffff07a1 <init32+0x7a1> add    %al,(%eax)
ffff07a3 <init32+0x7a3> add    %dh,-0x34(%esi)
ffff07a6 <init32+0x7a6> int3   
ffff07a7 <init32+0x7a7> int3   
ffff07a8 <init32+0x7a8> int3   
ffff07a9 <init32+0x7a9> int3   
ffff07aa <init32+0x7aa> jl     ffff07b8 <init32+0x7b8>
ffff07ac <init32+0x7ac> int3   
ffff07ad <init32+0x7ad> js     ffff07af <init32+0x7af>
ffff07af <init32+0x7af> add    %al,(%eax)
ffff07b1 <init32+0x7b1> loopne ffff0813 <init32+0x813>
ffff07b3 <init32+0x7b3> pusha  
ffff07b4 <init32+0x7b4> insb   (%dx),%es:(%edi)
ffff07b5 <init32+0x7b5> jbe    ffff081d <init32+0x81d>
ffff07b7 <init32+0x7b7> data16 data16 data16 out %al,$0x0
ffff07bc <init32+0x7bc> add    %al,(%eax)
ffff07be <init32+0x7be> add    %al,(%eax)
ffff07c0 <init32+0x7c0> add    %bl,(%eax)
ffff07c2 <init32+0x7c2> sbb    %al,(%eax)
ffff07c4 <init32+0x7c4> cmp    %bl,(%eax)
ffff07c6 <init32+0x7c6> sbb    %bl,(%eax)
ffff07c8 <init32+0x7c8> sbb    %bl,(%eax)
ffff07ca <init32+0x7ca> cmp    $0x0,%al
ffff07cc <init32+0x7cc> add    %al,(%eax)
ffff07ce <init32+0x7ce> add    %al,(%eax)
ffff07d0 <init32+0x7d0> add    %al,(%esi)
ffff07d2 <init32+0x7d2> push   %es
ffff07d3 <init32+0x7d3> add    %cl,(%esi)
ffff07d5 <init32+0x7d5> push   %es
ffff07d6 <init32+0x7d6> push   %es
ffff07d7 <init32+0x7d7> push   %es
ffff07d8 <init32+0x7d8> push   %es
ffff07d9 <init32+0x7d9> push   %es
ffff07da <init32+0x7da> push   %es
ffff07db <init32+0x7db> data16 data16 cmp $0x0,%al
ffff07df <init32+0x7df> add    %al,(%eax)
ffff07e1 <init32+0x7e1> loopne ffff0843 <init32+0x843>
ffff07e3 <init32+0x7e3> pusha  
ffff07e4 <init32+0x7e4> data16 insb (%dx),%es:(%edi)
ffff07e6 <init32+0x7e6> js     ffff0860 <init32+0x860>
ffff07e8 <init32+0x7e8> insb   (%dx),%es:(%edi)
ffff07e9 <init32+0x7e9> data16 out %al,$0x0
ffff07ec <init32+0x7ec> add    %al,(%eax)
ffff07ee <init32+0x7ee> add    %al,(%eax)
ffff07f0 <init32+0x7f0> add    %bh,(%eax)
ffff07f2 <init32+0x7f2> sbb    %bl,(%eax)
ffff07f4 <init32+0x7f4> sbb    %bl,(%eax)
ffff07f6 <init32+0x7f6> sbb    %bl,(%eax)
ffff07f8 <init32+0x7f8> sbb    %bl,(%eax)
ffff07fa <init32+0x7fa> cmp    $0x0,%al
	...
ffff0804 <init32+0x804> out    %al,$0xff
ffff0806 <init32+0x806> fcmovnu %st(3),%st
ffff0808 <init32+0x808> fcmovnu %st(3),%st
ffff080a <init32+0x80a> fildl  (%eax)
	...
ffff0814 <init32+0x814> fsubl  0x66(%esi)
ffff0817 <init32+0x817> data16 data16 data16 data16 add %al,(%eax)
ffff081d <init32+0x81d> add    %al,(%eax)
ffff081f <init32+0x81f> add    %al,(%eax)
ffff0821 <init32+0x821> add    %al,(%eax)
ffff0823 <init32+0x823> add    %bh,-0x3a(%esi,%eax,8)
ffff0827 <init32+0x827> mov    $0xc6,%dh
ffff082a <init32+0x82a> jl     ffff082c <init32+0x82c>
	...
ffff0834 <init32+0x834> fsubl  0x66(%esi)
ffff0837 <init32+0x837> data16 data16 data16 jl ffff089c <init32+0x89c>
ffff083c <init32+0x83c> pusha  
ffff083d <init32+0x83d> lock add %al,(%eax)
ffff0840 <init32+0x840> add    %al,(%eax)
ffff0842 <init32+0x842> add    %al,(%eax)
ffff0844 <init32+0x844> jbe    ffff0812 <init32+0x812>
ffff0846 <init32+0x846> int3   
ffff0847 <init32+0x847> int3   
ffff0848 <init32+0x848> int3   
ffff0849 <init32+0x849> int3   
ffff084a <init32+0x84a> jl     ffff0858 <init32+0x858>
ffff084c <init32+0x84c> or     $0x1e,%al
ffff084e <init32+0x84e> add    %al,(%eax)
ffff0850 <init32+0x850> add    %al,(%eax)
ffff0852 <init32+0x852> add    %al,(%eax)
ffff0854 <init32+0x854> fdivl  0x66(%esi)
ffff0857 <init32+0x857> pusha  
ffff0858 <init32+0x858> pusha  
ffff0859 <init32+0x859> pusha  
ffff085a <init32+0x85a> lock add %al,(%eax)
ffff085d <init32+0x85d> add    %al,(%eax)
ffff085f <init32+0x85f> add    %al,(%eax)
ffff0861 <init32+0x861> add    %al,(%eax)
ffff0863 <init32+0x863> add    %bh,0x60(%esi,%eax,8)
ffff0867 <init32+0x867> cmp    %cl,(%esi,%eax,8)
ffff086a <init32+0x86a> jl     ffff086c <init32+0x86c>
ffff086c <init32+0x86c> add    %al,(%eax)
ffff086e <init32+0x86e> add    %al,(%eax)
ffff0870 <init32+0x870> add    %dl,(%eax)
ffff0872 <init32+0x872> xor    %dh,(%eax)
ffff0874 <init32+0x874> cld    
ffff0875 <init32+0x875> xor    %dh,(%eax)
ffff0877 <init32+0x877> xor    %dh,(%eax)
ffff0879 <init32+0x879> ss sbb $0x0,%al
	...
ffff0884 <init32+0x884> int3   
ffff0885 <init32+0x885> int3   
ffff0886 <init32+0x886> int3   
ffff0887 <init32+0x887> int3   
ffff0888 <init32+0x888> int3   
ffff0889 <init32+0x889> int3   
ffff088a <init32+0x88a> jbe    ffff088c <init32+0x88c>
	...
ffff0894 <init32+0x894> ret    
ffff0895 <init32+0x895> ret    
ffff0896 <init32+0x896> ret    
ffff0897 <init32+0x897> ret    
ffff0898 <init32+0x898> data16 cmp $0x18,%al
	...
ffff08a3 <init32+0x8a3> add    %al,%bl
ffff08a5 <init32+0x8a5> ret    
ffff08a6 <init32+0x8a6> ret    
ffff08a7 <init32+0x8a7> fcmovnu %st(3),%st
ffff08a9 <init32+0x8a9> jmp    *0x0(%esi)
	...
ffff08b4 <init32+0x8b4> ret    
ffff08b5 <init32+0x8b5> data16 cmp $0x18,%al
ffff08b8 <init32+0x8b8> cmp    $0x66,%al
ffff08ba <init32+0x8ba> ret    
	...
ffff08c3 <init32+0x8c3> add    %al,%dh
ffff08c5 <init32+0x8c5> mov    $0xc6,%dh
ffff08c8 <init32+0x8c8> mov    $0x7e,%dh
ffff08cb <init32+0x8cb> push   %es
ffff08cc <init32+0x8cc> or     $0xf8,%al
ffff08ce <init32+0x8ce> add    %al,(%eax)
ffff08d0 <init32+0x8d0> add    %al,(%eax)
ffff08d2 <init32+0x8d2> add    %al,(%eax)
ffff08d4 <init32+0x8d4> dec    %ah
ffff08d6 <init32+0x8d6> sbb    %dh,(%eax)
ffff08d8 <init32+0x8d8> pusha  
ffff08d9 <init32+0x8d9> (bad)  
ffff08da <init32+0x8da> incb   (%eax)
ffff08dc <init32+0x8dc> add    %al,(%eax)
ffff08de <init32+0x8de> add    %al,(%eax)
ffff08e0 <init32+0x8e0> add    %cl,(%esi)
ffff08e2 <init32+0x8e2> sbb    %bl,(%eax)
ffff08e4 <init32+0x8e4> sbb    %dh,0x18(%eax)
ffff08e7 <init32+0x8e7> sbb    %bl,(%eax)
ffff08e9 <init32+0x8e9> sbb    %cl,(%esi)
ffff08eb <init32+0x8eb> add    %al,(%eax)
ffff08ed <init32+0x8ed> add    %al,(%eax)
ffff08ef <init32+0x8ef> add    %al,(%eax)
ffff08f1 <init32+0x8f1> sbb    %bl,(%eax)
ffff08f3 <init32+0x8f3> sbb    %bl,(%eax)
ffff08f5 <init32+0x8f5> add    %bl,(%eax)
ffff08f7 <init32+0x8f7> sbb    %bl,(%eax)
ffff08f9 <init32+0x8f9> sbb    %bl,(%eax)
ffff08fb <init32+0x8fb> add    %al,(%eax)
ffff08fd <init32+0x8fd> add    %al,(%eax)
ffff08ff <init32+0x8ff> add    %al,(%eax)
ffff0901 <init32+0x901> jo     ffff091b <init32+0x91b>
ffff0903 <init32+0x903> sbb    %bl,(%eax)
ffff0905 <init32+0x905> push   %cs
ffff0906 <init32+0x906> sbb    %bl,(%eax)
ffff0908 <init32+0x908> sbb    %bl,(%eax)
ffff090a <init32+0x90a> jo     ffff090c <init32+0x90c>
ffff090c <init32+0x90c> add    %al,(%eax)
ffff090e <init32+0x90e> add    %al,(%eax)
ffff0910 <init32+0x910> add    %dh,-0x24(%esi)
	...
ffff0923 <init32+0x923> adc    %bh,(%eax)
ffff0925 <init32+0x925> insb   (%dx),%es:(%edi)
ffff0926 <init32+0x926> mov    $0xc6,%dh
ffff0929 <init32+0x929> incb   (%eax)
ffff092b <init32+0x92b> add    %al,(%eax)
ffff092d <init32+0x92d> add    %al,(%eax)
ffff092f <init32+0x92f> add    %al,(%eax)
ffff0931 <init32+0x931> cmp    $0x66,%al
ffff0933 <init32+0x933> ret    $0xc0c0
ffff0936 <init32+0x936> rol    $0x66,%dl
ffff0939 <init32+0x939> cmp    $0xc,%al
ffff093b <init32+0x93b> push   %es
ffff093c <init32+0x93c> jl     ffff093e <init32+0x93e>
ffff093e <init32+0x93e> add    %al,(%eax)
ffff0940 <init32+0x940> add    %cl,%ah
ffff0942 <init32+0x942> add    %al,(%eax)
ffff0944 <init32+0x944> int3   
ffff0945 <init32+0x945> int3   
ffff0946 <init32+0x946> int3   
ffff0947 <init32+0x947> int3   
ffff0948 <init32+0x948> int3   
ffff0949 <init32+0x949> int3   
ffff094a <init32+0x94a> jbe    ffff094c <init32+0x94c>
ffff094c <init32+0x94c> add    %al,(%eax)
ffff094e <init32+0x94e> add    %al,(%eax)
ffff0950 <init32+0x950> or     $0x18,%al
ffff0952 <init32+0x952> xor    %al,(%eax)
ffff0954 <init32+0x954> jl     ffff091c <init32+0x91c>
ffff0956 <init32+0x956> inc    %al
ffff0958 <init32+0x958> rol    $0x7c,%dh
ffff095b <init32+0x95b> add    %al,(%eax)
ffff095d <init32+0x95d> add    %al,(%eax)
ffff095f <init32+0x95f> add    %dl,(%eax)
ffff0961 <init32+0x961> cmp    %ch,0x78(%eax,%eax,1)
ffff0965 <init32+0x965> or     $0x7c,%al
ffff0967 <init32+0x967> int3   
ffff0968 <init32+0x968> int3   
ffff0969 <init32+0x969> int3   
ffff096a <init32+0x96a> jbe    ffff096c <init32+0x96c>
ffff096c <init32+0x96c> add    %al,(%eax)
ffff096e <init32+0x96e> add    %al,(%eax)
ffff0970 <init32+0x970> add    %cl,%ah
ffff0972 <init32+0x972> add    %al,(%eax)
ffff0974 <init32+0x974> js     ffff0982 <init32+0x982>
ffff0976 <init32+0x976> jl     ffff0944 <init32+0x944>
ffff0978 <init32+0x978> int3   
ffff0979 <init32+0x979> int3   
ffff097a <init32+0x97a> jbe    ffff097c <init32+0x97c>
ffff097c <init32+0x97c> add    %al,(%eax)
ffff097e <init32+0x97e> add    %al,(%eax)
ffff0980 <init32+0x980> pusha  
ffff0981 <init32+0x981> xor    %bl,(%eax)
ffff0983 <init32+0x983> add    %bh,0xc(%eax)
ffff0986 <init32+0x986> jl     ffff0954 <init32+0x954>
ffff0988 <init32+0x988> int3   
ffff0989 <init32+0x989> int3   
ffff098a <init32+0x98a> jbe    ffff098c <init32+0x98c>
ffff098c <init32+0x98c> add    %al,(%eax)
ffff098e <init32+0x98e> add    %al,(%eax)
ffff0990 <init32+0x990> cmp    %ch,0x0(%eax,%edi,1)
ffff0994 <init32+0x994> js     ffff09a2 <init32+0x9a2>
ffff0996 <init32+0x996> jl     ffff0964 <init32+0x964>
ffff0998 <init32+0x998> int3   
ffff0999 <init32+0x999> int3   
ffff099a <init32+0x99a> jbe    ffff099c <init32+0x99c>
ffff099c <init32+0x99c> add    %al,(%eax)
ffff099e <init32+0x99e> add    %al,(%eax)
ffff09a0 <init32+0x9a0> add    %al,(%eax)
ffff09a2 <init32+0x9a2> add    %bh,(%esi,%eiz,2)
ffff09a5 <init32+0x9a5> pusha  
ffff09a6 <init32+0x9a6> pusha  
ffff09a7 <init32+0x9a7> data16 cmp $0xc,%al
ffff09aa <init32+0x9aa> push   %es
ffff09ab <init32+0x9ab> cmp    $0x0,%al
ffff09ad <init32+0x9ad> add    %al,(%eax)
ffff09af <init32+0x9af> add    %dl,(%eax)
ffff09b1 <init32+0x9b1> cmp    %ch,0x7c(%eax,%eax,1)
ffff09b5 <init32+0x9b5> (bad)  
ffff09b6 <init32+0x9b6> inc    %al
ffff09b8 <init32+0x9b8> rol    $0x7c,%dh
ffff09bb <init32+0x9bb> add    %al,(%eax)
ffff09bd <init32+0x9bd> add    %al,(%eax)
ffff09bf <init32+0x9bf> add    %al,(%eax)
ffff09c1 <init32+0x9c1> movb   $0x0,(%eax)
ffff09c4 <init32+0x9c4> jl     ffff098c <init32+0x98c>
ffff09c6 <init32+0x9c6> inc    %al
ffff09c8 <init32+0x9c8> rol    $0x7c,%dh
ffff09cb <init32+0x9cb> add    %al,(%eax)
ffff09cd <init32+0x9cd> add    %al,(%eax)
ffff09cf <init32+0x9cf> add    %ah,0x30(%eax)
ffff09d2 <init32+0x9d2> sbb    %al,(%eax)
ffff09d4 <init32+0x9d4> jl     ffff099c <init32+0x99c>
ffff09d6 <init32+0x9d6> inc    %al
ffff09d8 <init32+0x9d8> rol    $0x7c,%dh
ffff09db <init32+0x9db> add    %al,(%eax)
ffff09dd <init32+0x9dd> add    %al,(%eax)
ffff09df <init32+0x9df> add    %al,(%eax)
ffff09e1 <init32+0x9e1> data16 add %al,(%eax)
ffff09e4 <init32+0x9e4> cmp    %bl,(%eax)
ffff09e6 <init32+0x9e6> sbb    %bl,(%eax)
ffff09e8 <init32+0x9e8> sbb    %bl,(%eax)
ffff09ea <init32+0x9ea> cmp    $0x0,%al
ffff09ec <init32+0x9ec> add    %al,(%eax)
ffff09ee <init32+0x9ee> add    %al,(%eax)
ffff09f0 <init32+0x9f0> sbb    %bh,(%esi,%eiz,2)
ffff09f3 <init32+0x9f3> add    %bh,(%eax)
ffff09f5 <init32+0x9f5> sbb    %bl,(%eax)
ffff09f7 <init32+0x9f7> sbb    %bl,(%eax)
ffff09f9 <init32+0x9f9> sbb    %bh,(%eax,%eax,1)
ffff09fc <init32+0x9fc> add    %al,(%eax)
ffff09fe <init32+0x9fe> add    %al,(%eax)
ffff0a00 <init32+0xa00> pusha  
ffff0a01 <init32+0xa01> xor    %bl,(%eax)
ffff0a03 <init32+0xa03> add    %bh,(%eax)
ffff0a05 <init32+0xa05> sbb    %bl,(%eax)
ffff0a07 <init32+0xa07> sbb    %bl,(%eax)
ffff0a09 <init32+0xa09> sbb    %bh,(%eax,%eax,1)
ffff0a0c <init32+0xa0c> add    %al,(%eax)
ffff0a0e <init32+0xa0e> add    %al,(%eax)
ffff0a10 <init32+0xa10> movb   $0x10,(%eax)
ffff0a13 <init32+0xa13> cmp    %ch,-0x3a(%esi,%eax,8)
ffff0a17 <init32+0xa17> inc    %dh
ffff0a19 <init32+0xa19> mov    $0x0,%dh
ffff0a1c <init32+0xa1c> add    %al,(%eax)
ffff0a1e <init32+0xa1e> add    %bh,(%eax)
ffff0a20 <init32+0xa20> insb   (%dx),%es:(%edi)
ffff0a21 <init32+0xa21> cmp    %al,(%eax)
ffff0a23 <init32+0xa23> cmp    %ch,-0x3a(%esi,%eax,8)
ffff0a27 <init32+0xa27> inc    %dh
ffff0a29 <init32+0xa29> mov    $0x0,%dh
ffff0a2c <init32+0xa2c> add    %al,(%eax)
ffff0a2e <init32+0xa2e> add    %bl,(%eax)
ffff0a30 <init32+0xa30> xor    %ah,0x0(%eax)
ffff0a33 <init32+0xa33> (bad)  
ffff0a34 <init32+0xa34> pushaw 
ffff0a36 <init32+0xa36> jl     ffff0a98 <init32+0xa98>
ffff0a38 <init32+0xa38> pusha  
ffff0a39 <init32+0xa39> data16 incb (%eax)
	...
ffff0a44 <init32+0xa44> outsb  %ds:(%esi),(%dx)
ffff0a45 <init32+0xa45> cmp    (%ebx),%ebx
ffff0a47 <init32+0xa47> jle    ffff0a21 <init32+0xa21>
ffff0a49 <init32+0xa49> fdivl  0x0(%edi)
ffff0a4c <init32+0xa4c> add    %al,(%eax)
ffff0a4e <init32+0xa4e> add    %al,(%eax)
ffff0a50 <init32+0xa50> add    %bh,(%esi)
ffff0a52 <init32+0xa52> insb   (%dx),%es:(%edi)
ffff0a53 <init32+0xa53> int3   
ffff0a54 <init32+0xa54> int3   
ffff0a55 <init32+0xa55> dec    %ah
ffff0a57 <init32+0xa57> int3   
ffff0a58 <init32+0xa58> int3   
ffff0a59 <init32+0xa59> int3   
ffff0a5a <init32+0xa5a> into   
ffff0a5b <init32+0xa5b> add    %al,(%eax)
ffff0a5d <init32+0xa5d> add    %al,(%eax)
ffff0a5f <init32+0xa5f> add    %dl,(%eax)
ffff0a61 <init32+0xa61> cmp    %ch,0x7c(%eax,%eax,1)
ffff0a65 <init32+0xa65> mov    $0xc6,%dh
ffff0a68 <init32+0xa68> mov    $0x7c,%dh
ffff0a6b <init32+0xa6b> add    %al,(%eax)
ffff0a6d <init32+0xa6d> add    %al,(%eax)
ffff0a6f <init32+0xa6f> add    %al,(%eax)
ffff0a71 <init32+0xa71> movb   $0x0,(%eax)
ffff0a74 <init32+0xa74> jl     ffff0a3c <init32+0xa3c>
ffff0a76 <init32+0xa76> mov    $0xc6,%dh
ffff0a79 <init32+0xa79> (bad)  
ffff0a7a <init32+0xa7a> jl     ffff0a7c <init32+0xa7c>
ffff0a7c <init32+0xa7c> add    %al,(%eax)
ffff0a7e <init32+0xa7e> add    %al,(%eax)
ffff0a80 <init32+0xa80> pusha  
ffff0a81 <init32+0xa81> xor    %bl,(%eax)
ffff0a83 <init32+0xa83> add    %bh,-0x3a(%esi,%eax,8)
ffff0a87 <init32+0xa87> mov    $0xc6,%dh
ffff0a8a <init32+0xa8a> jl     ffff0a8c <init32+0xa8c>
ffff0a8c <init32+0xa8c> add    %al,(%eax)
ffff0a8e <init32+0xa8e> add    %al,(%eax)
ffff0a90 <init32+0xa90> xor    %bh,-0x34(%eax)
ffff0a93 <init32+0xa93> add    %cl,%ah
ffff0a95 <init32+0xa95> int3   
ffff0a96 <init32+0xa96> int3   
ffff0a97 <init32+0xa97> int3   
ffff0a98 <init32+0xa98> int3   
ffff0a99 <init32+0xa99> int3   
ffff0a9a <init32+0xa9a> jbe    ffff0a9c <init32+0xa9c>
ffff0a9c <init32+0xa9c> add    %al,(%eax)
ffff0a9e <init32+0xa9e> add    %al,(%eax)
ffff0aa0 <init32+0xaa0> pusha  
ffff0aa1 <init32+0xaa1> xor    %bl,(%eax)
ffff0aa3 <init32+0xaa3> add    %cl,%ah
ffff0aa5 <init32+0xaa5> int3   
ffff0aa6 <init32+0xaa6> int3   
ffff0aa7 <init32+0xaa7> int3   
ffff0aa8 <init32+0xaa8> int3   
ffff0aa9 <init32+0xaa9> int3   
ffff0aaa <init32+0xaaa> jbe    ffff0aac <init32+0xaac>
ffff0aac <init32+0xaac> add    %al,(%eax)
ffff0aae <init32+0xaae> add    %al,(%eax)
ffff0ab0 <init32+0xab0> add    %al,%dh
ffff0ab2 <init32+0xab2> add    %al,(%eax)
ffff0ab4 <init32+0xab4> mov    $0xc6,%dh
ffff0ab7 <init32+0xab7> mov    $0xc6,%dh
ffff0aba <init32+0xaba> jle    ffff0ac2 <init32+0xac2>
ffff0abc <init32+0xabc> or     $0x78,%al
ffff0abe <init32+0xabe> add    %al,(%eax)
ffff0ac0 <init32+0xac0> movb   $0x7c,(%eax)
ffff0ac3 <init32+0xac3> mov    $0xc6,%dh
ffff0ac6 <init32+0xac6> mov    $0xc6,%dh
ffff0ac9 <init32+0xac9> (bad)  
ffff0aca <init32+0xaca> jl     ffff0acc <init32+0xacc>
ffff0acc <init32+0xacc> add    %al,(%eax)
ffff0ace <init32+0xace> add    %al,(%eax)
ffff0ad0 <init32+0xad0> movb   $0xc6,(%eax)
ffff0ad3 <init32+0xad3> mov    $0xc6,%dh
ffff0ad6 <init32+0xad6> mov    $0xc6,%dh
ffff0ad9 <init32+0xad9> (bad)  
ffff0ada <init32+0xada> jl     ffff0adc <init32+0xadc>
ffff0adc <init32+0xadc> add    %al,(%eax)
ffff0ade <init32+0xade> add    %al,(%eax)
ffff0ae0 <init32+0xae0> sbb    %bl,(%eax)
ffff0ae2 <init32+0xae2> jle    ffff0aa7 <init32+0xaa7>
ffff0ae4 <init32+0xae4> rol    $0xc0,%al
ffff0ae7 <init32+0xae7> ret    
ffff0ae8 <init32+0xae8> jle    ffff0b02 <init32+0xb02>
ffff0aea <init32+0xaea> sbb    %al,(%eax)
ffff0aec <init32+0xaec> add    %al,(%eax)
ffff0aee <init32+0xaee> add    %al,(%eax)
ffff0af0 <init32+0xaf0> cmp    %ch,0x60(%esp,%eiz,2)
ffff0af4 <init32+0xaf4> lock pusha 
ffff0af6 <init32+0xaf6> pusha  
ffff0af7 <init32+0xaf7> pusha  
ffff0af8 <init32+0xaf8> pusha  
ffff0af9 <init32+0xaf9> out    %al,$0xfc
ffff0afb <init32+0xafb> add    %al,(%eax)
ffff0afd <init32+0xafd> add    %al,(%eax)
ffff0aff <init32+0xaff> add    %al,(%eax)
ffff0b01 <init32+0xb01> ret    
ffff0b02 <init32+0xb02> data16 cmp $0x18,%al
ffff0b05 <init32+0xb05> lcall  *(%eax)
ffff0b07 <init32+0xb07> lcall  *(%eax)
ffff0b09 <init32+0xb09> sbb    %bl,(%eax)
ffff0b0b <init32+0xb0b> add    %al,(%eax)
ffff0b0d <init32+0xb0d> add    %al,(%eax)
ffff0b0f <init32+0xb0f> add    %bh,%ah
ffff0b11 <init32+0xb11> data16 data16 jl ffff0b77 <init32+0xb77>
ffff0b15 <init32+0xb15> outsw  %ds:(%esi),(%dx)
ffff0b17 <init32+0xb17> data16 data16 data16 repz add %al,(%eax)
ffff0b1d <init32+0xb1d> add    %al,(%eax)
ffff0b1f <init32+0xb1f> add    %cl,(%esi)
ffff0b21 <init32+0xb21> sbb    (%eax),%ebx
ffff0b23 <init32+0xb23> sbb    %bl,(%eax)
ffff0b25 <init32+0xb25> jle    ffff0b3f <init32+0xb3f>
ffff0b27 <init32+0xb27> sbb    %bl,(%eax)
ffff0b29 <init32+0xb29> sbb    %bl,(%eax)
ffff0b2b <init32+0xb2b> fdivs  0x0(%eax)
ffff0b2e <init32+0xb2e> add    %al,(%eax)
ffff0b30 <init32+0xb30> sbb    %dh,(%eax)
ffff0b32 <init32+0xb32> pusha  
ffff0b33 <init32+0xb33> add    %bh,0xc(%eax)
ffff0b36 <init32+0xb36> jl     ffff0b04 <init32+0xb04>
ffff0b38 <init32+0xb38> int3   
ffff0b39 <init32+0xb39> int3   
ffff0b3a <init32+0xb3a> jbe    ffff0b3c <init32+0xb3c>
ffff0b3c <init32+0xb3c> add    %al,(%eax)
ffff0b3e <init32+0xb3e> add    %al,(%eax)
ffff0b40 <init32+0xb40> or     $0x18,%al
ffff0b42 <init32+0xb42> xor    %al,(%eax)
ffff0b44 <init32+0xb44> cmp    %bl,(%eax)
ffff0b46 <init32+0xb46> sbb    %bl,(%eax)
ffff0b48 <init32+0xb48> sbb    %bl,(%eax)
ffff0b4a <init32+0xb4a> cmp    $0x0,%al
ffff0b4c <init32+0xb4c> add    %al,(%eax)
ffff0b4e <init32+0xb4e> add    %al,(%eax)
ffff0b50 <init32+0xb50> sbb    %dh,(%eax)
ffff0b52 <init32+0xb52> pusha  
ffff0b53 <init32+0xb53> add    %bh,-0x3a(%esi,%eax,8)
ffff0b57 <init32+0xb57> mov    $0xc6,%dh
ffff0b5a <init32+0xb5a> jl     ffff0b5c <init32+0xb5c>
ffff0b5c <init32+0xb5c> add    %al,(%eax)
ffff0b5e <init32+0xb5e> add    %al,(%eax)
ffff0b60 <init32+0xb60> sbb    %dh,(%eax)
ffff0b62 <init32+0xb62> pusha  
ffff0b63 <init32+0xb63> add    %cl,%ah
ffff0b65 <init32+0xb65> int3   
ffff0b66 <init32+0xb66> int3   
ffff0b67 <init32+0xb67> int3   
ffff0b68 <init32+0xb68> int3   
ffff0b69 <init32+0xb69> int3   
ffff0b6a <init32+0xb6a> jbe    ffff0b6c <init32+0xb6c>
ffff0b6c <init32+0xb6c> add    %al,(%eax)
ffff0b6e <init32+0xb6e> add    %al,(%eax)
ffff0b70 <init32+0xb70> add    %dh,-0x24(%esi)
ffff0b73 <init32+0xb73> add    %bl,%ah
ffff0b75 <init32+0xb75> data16 data16 data16 data16 data16 data16 add %al,(%eax)
ffff0b7d <init32+0xb7d> add    %al,(%eax)
ffff0b7f <init32+0xb7f> jbe    ffff0b5d <init32+0xb5d>
ffff0b81 <init32+0xb81> add    %al,%dh
ffff0b83 <init32+0xb83> out    %al,$0xf6
ffff0b85 <init32+0xb85> (bad)  
ffff0b86 <init32+0xb86> fmulp  %st,%st(6)
ffff0b88 <init32+0xb88> mov    $0xc6,%dh
ffff0b8b <init32+0xb8b> add    %al,(%eax)
ffff0b8d <init32+0xb8d> add    %al,(%eax)
ffff0b8f <init32+0xb8f> add    %bh,(%esp,%ebp,2)
ffff0b92 <init32+0xb92> insb   (%dx),%es:(%edi)
ffff0b93 <init32+0xb93> add    %bh,%ds:0x0(%esi)
	...
ffff0b9f <init32+0xb9f> add    %bh,(%eax)
ffff0ba1 <init32+0xba1> insb   (%dx),%es:(%edi)
ffff0ba2 <init32+0xba2> insb   (%dx),%es:(%edi)
ffff0ba3 <init32+0xba3> cmp    %al,(%eax)
ffff0ba5 <init32+0xba5> jl     ffff0ba7 <init32+0xba7>
	...
ffff0baf <init32+0xbaf> add    %al,(%eax)
ffff0bb1 <init32+0xbb1> xor    %dh,(%eax)
ffff0bb3 <init32+0xbb3> add    %dh,(%eax)
ffff0bb5 <init32+0xbb5> xor    %ah,-0x40(%eax)
ffff0bb8 <init32+0xbb8> mov    $0x7c,%dh
	...
ffff0bc3 <init32+0xbc3> add    %al,(%eax)
ffff0bc5 <init32+0xbc5> inc    %al
ffff0bc7 <init32+0xbc7> rol    $0xc0,%al
	...
ffff0bd2 <init32+0xbd2> add    %al,(%eax)
ffff0bd4 <init32+0xbd4> add    %bh,%dh
ffff0bd6 <init32+0xbd6> push   %es
ffff0bd7 <init32+0xbd7> push   %es
ffff0bd8 <init32+0xbd8> push   %es
ffff0bd9 <init32+0xbd9> push   %es
ffff0bda <init32+0xbda> add    %al,(%eax)
ffff0bdc <init32+0xbdc> add    %al,(%eax)
ffff0bde <init32+0xbde> add    %al,(%eax)
ffff0be0 <init32+0xbe0> rol    $0xc2,%al
ffff0be3 <init32+0xbe3> (bad)  
ffff0be4 <init32+0xbe4> int3   
ffff0be5 <init32+0xbe5> sbb    %dh,(%eax)
ffff0be7 <init32+0xbe7> pusha  
ffff0be8 <init32+0xbe8> into   
ffff0be9 <init32+0xbe9> fwait
ffff0bea <init32+0xbea> push   %es
ffff0beb <init32+0xbeb> or     $0x1f,%al
ffff0bed <init32+0xbed> add    %al,(%eax)
ffff0bef <init32+0xbef> add    %al,%al
ffff0bf1 <init32+0xbf1> rol    $0xc6,%dl
ffff0bf4 <init32+0xbf4> int3   
ffff0bf5 <init32+0xbf5> sbb    %dh,(%eax)
ffff0bf7 <init32+0xbf7> data16 into 
ffff0bf9 <init32+0xbf9> xchg   %eax,%esi
ffff0bfa <init32+0xbfa> ds push %es
ffff0bfc <init32+0xbfc> push   %es
ffff0bfd <init32+0xbfd> add    %al,(%eax)
ffff0bff <init32+0xbff> add    %al,(%eax)
ffff0c01 <init32+0xc01> sbb    %bl,(%eax)
ffff0c03 <init32+0xc03> add    %bl,(%eax)
ffff0c05 <init32+0xc05> sbb    %bl,(%eax)
ffff0c07 <init32+0xc07> cmp    $0x3c,%al
ffff0c09 <init32+0xc09> cmp    $0x18,%al
	...
ffff0c13 <init32+0xc13> add    %dh,(%esi)
ffff0c15 <init32+0xc15> insb   (%dx),%es:(%edi)
ffff0c16 <init32+0xc16> fsubrs 0x0(%esi,%esi,1)
	...
ffff0c22 <init32+0xc22> add    %al,(%eax)
ffff0c24 <init32+0xc24> fsubrs 0x6c(%esi,%esi,1)
ffff0c28 <init32+0xc28> fadds  (%eax)
ffff0c2a <init32+0xc2a> add    %al,(%eax)
ffff0c2c <init32+0xc2c> add    %al,(%eax)
ffff0c2e <init32+0xc2e> add    %dl,(%ecx)
ffff0c30 <init32+0xc30> inc    %esp
ffff0c31 <init32+0xc31> adc    %eax,0x44(%ecx,%edx,1)
ffff0c35 <init32+0xc35> adc    %eax,0x44(%ecx,%edx,1)
ffff0c39 <init32+0xc39> adc    %eax,0x44(%ecx,%edx,1)
ffff0c3d <init32+0xc3d> adc    %eax,-0x56(%ebp,%edx,2)
ffff0c41 <init32+0xc41> push   %ebp
ffff0c42 <init32+0xc42> stos   %al,%es:(%edi)
ffff0c43 <init32+0xc43> push   %ebp
ffff0c44 <init32+0xc44> stos   %al,%es:(%edi)
ffff0c45 <init32+0xc45> push   %ebp
ffff0c46 <init32+0xc46> stos   %al,%es:(%edi)
ffff0c47 <init32+0xc47> push   %ebp
ffff0c48 <init32+0xc48> stos   %al,%es:(%edi)
ffff0c49 <init32+0xc49> push   %ebp
ffff0c4a <init32+0xc4a> stos   %al,%es:(%edi)
ffff0c4b <init32+0xc4b> push   %ebp
ffff0c4c <init32+0xc4c> stos   %al,%es:(%edi)
ffff0c4d <init32+0xc4d> push   %ebp
ffff0c4e <init32+0xc4e> stos   %al,%es:(%edi)
ffff0c4f <init32+0xc4f> fnsave -0x23(%edi)
ffff0c52 <init32+0xc52> ja     ffff0c31 <init32+0xc31>
ffff0c54 <init32+0xc54> ja     ffff0c33 <init32+0xc33>
ffff0c56 <init32+0xc56> ja     ffff0c35 <init32+0xc35>
ffff0c58 <init32+0xc58> ja     ffff0c37 <init32+0xc37>
ffff0c5a <init32+0xc5a> ja     ffff0c39 <init32+0xc39>
ffff0c5c <init32+0xc5c> ja     ffff0c3b <init32+0xc3b>
ffff0c5e <init32+0xc5e> ja     ffff0c78 <init32+0xc78>
ffff0c60 <init32+0xc60> sbb    %bl,(%eax)
ffff0c62 <init32+0xc62> sbb    %bl,(%eax)
ffff0c64 <init32+0xc64> sbb    %bl,(%eax)
ffff0c66 <init32+0xc66> sbb    %bl,(%eax)
ffff0c68 <init32+0xc68> sbb    %bl,(%eax)
ffff0c6a <init32+0xc6a> sbb    %bl,(%eax)
ffff0c6c <init32+0xc6c> sbb    %bl,(%eax)
ffff0c6e <init32+0xc6e> sbb    %bl,(%eax)
ffff0c70 <init32+0xc70> sbb    %bl,(%eax)
ffff0c72 <init32+0xc72> sbb    %bl,(%eax)
ffff0c74 <init32+0xc74> sbb    %bl,(%eax)
ffff0c76 <init32+0xc76> clc    
ffff0c77 <init32+0xc77> sbb    %bl,(%eax)
ffff0c79 <init32+0xc79> sbb    %bl,(%eax)
ffff0c7b <init32+0xc7b> sbb    %bl,(%eax)
ffff0c7d <init32+0xc7d> sbb    %bl,(%eax)
ffff0c7f <init32+0xc7f> sbb    %bl,(%eax)
ffff0c81 <init32+0xc81> sbb    %bl,(%eax)
ffff0c83 <init32+0xc83> sbb    %bh,%al
ffff0c85 <init32+0xc85> sbb    %bh,%al
ffff0c87 <init32+0xc87> sbb    %bl,(%eax)
ffff0c89 <init32+0xc89> sbb    %bl,(%eax)
ffff0c8b <init32+0xc8b> sbb    %bl,(%eax)
ffff0c8d <init32+0xc8d> sbb    %bl,(%eax)
ffff0c8f <init32+0xc8f> ss ss ss ss ss ss divb %ss:(%esi)
ffff0c98 <init32+0xc98> ss ss ss ss ss ss add %al,%ss:(%eax)
ffff0ca1 <init32+0xca1> add    %al,(%eax)
ffff0ca3 <init32+0xca3> add    %al,(%eax)
ffff0ca5 <init32+0xca5> add    %bh,%dh
ffff0ca7 <init32+0xca7> ss ss ss ss ss ss ss add %al,%ss:(%eax)
ffff0cb1 <init32+0xcb1> add    %al,(%eax)
ffff0cb3 <init32+0xcb3> add    %bh,%al
ffff0cb5 <init32+0xcb5> sbb    %bh,%al
ffff0cb7 <init32+0xcb7> sbb    %bl,(%eax)
ffff0cb9 <init32+0xcb9> sbb    %bl,(%eax)
ffff0cbb <init32+0xcbb> sbb    %bl,(%eax)
ffff0cbd <init32+0xcbd> sbb    %bl,(%eax)
ffff0cbf <init32+0xcbf> ss ss ss ss testb $0xf6,%ss:(%esi)
ffff0cc7 <init32+0xcc7> ss ss ss ss ss ss ss ss ss ss ss ss ss ss
ffff0cd5 <init32+0xcd5> ss ss ss ss ss ss ss ss ss add %al,%ss:(%eax)
ffff0ce1 <init32+0xce1> add    %al,(%eax)
ffff0ce3 <init32+0xce3> add    %bh,%dh
ffff0ce5 <init32+0xce5> push   %es
ffff0ce6 <init32+0xce6> divb   (%esi)
ffff0ce8 <init32+0xce8> ss ss ss ss ss ss ss ss ss ss ss testb $0xfe,%ss:(%esi)
	...
ffff0cff <init32+0xcff> ss ss ss ss ss ss incb %ss:(%eax)
ffff0d08 <init32+0xd08> add    %al,(%eax)
ffff0d0a <init32+0xd0a> add    %al,(%eax)
ffff0d0c <init32+0xd0c> add    %al,(%eax)
ffff0d0e <init32+0xd0e> add    %bl,(%eax)
ffff0d10 <init32+0xd10> sbb    %bl,(%eax)
ffff0d12 <init32+0xd12> sbb    %bl,(%eax)
ffff0d14 <init32+0xd14> clc    
ffff0d15 <init32+0xd15> sbb    %bh,%al
	...
ffff0d23 <init32+0xd23> add    %al,(%eax)
ffff0d25 <init32+0xd25> add    %bh,%al
ffff0d27 <init32+0xd27> sbb    %bl,(%eax)
ffff0d29 <init32+0xd29> sbb    %bl,(%eax)
ffff0d2b <init32+0xd2b> sbb    %bl,(%eax)
ffff0d2d <init32+0xd2d> sbb    %bl,(%eax)
ffff0d2f <init32+0xd2f> sbb    %bl,(%eax)
ffff0d31 <init32+0xd31> sbb    %bl,(%eax)
ffff0d33 <init32+0xd33> sbb    %bl,(%eax)
ffff0d35 <init32+0xd35> sbb    %bl,(%edi)
	...
ffff0d3f <init32+0xd3f> sbb    %bl,(%eax)
ffff0d41 <init32+0xd41> sbb    %bl,(%eax)
ffff0d43 <init32+0xd43> sbb    %bl,(%eax)
ffff0d45 <init32+0xd45> sbb    %bh,%bh
	...
ffff0d53 <init32+0xd53> add    %al,(%eax)
ffff0d55 <init32+0xd55> add    %bh,%bh
ffff0d57 <init32+0xd57> sbb    %bl,(%eax)
ffff0d59 <init32+0xd59> sbb    %bl,(%eax)
ffff0d5b <init32+0xd5b> sbb    %bl,(%eax)
ffff0d5d <init32+0xd5d> sbb    %bl,(%eax)
ffff0d5f <init32+0xd5f> sbb    %bl,(%eax)
ffff0d61 <init32+0xd61> sbb    %bl,(%eax)
ffff0d63 <init32+0xd63> sbb    %bl,(%eax)
ffff0d65 <init32+0xd65> sbb    %bl,(%edi)
ffff0d67 <init32+0xd67> sbb    %bl,(%eax)
ffff0d69 <init32+0xd69> sbb    %bl,(%eax)
ffff0d6b <init32+0xd6b> sbb    %bl,(%eax)
ffff0d6d <init32+0xd6d> sbb    %bl,(%eax)
ffff0d6f <init32+0xd6f> add    %al,(%eax)
ffff0d71 <init32+0xd71> add    %al,(%eax)
ffff0d73 <init32+0xd73> add    %al,(%eax)
ffff0d75 <init32+0xd75> add    %bh,%bh
	...
ffff0d7f <init32+0xd7f> sbb    %bl,(%eax)
ffff0d81 <init32+0xd81> sbb    %bl,(%eax)
ffff0d83 <init32+0xd83> sbb    %bl,(%eax)
ffff0d85 <init32+0xd85> sbb    %bh,%bh
ffff0d87 <init32+0xd87> sbb    %bl,(%eax)
ffff0d89 <init32+0xd89> sbb    %bl,(%eax)
ffff0d8b <init32+0xd8b> sbb    %bl,(%eax)
ffff0d8d <init32+0xd8d> sbb    %bl,(%eax)
ffff0d8f <init32+0xd8f> sbb    %bl,(%eax)
ffff0d91 <init32+0xd91> sbb    %bl,(%eax)
ffff0d93 <init32+0xd93> sbb    %bl,(%edi)
ffff0d95 <init32+0xd95> sbb    %bl,(%edi)
ffff0d97 <init32+0xd97> sbb    %bl,(%eax)
ffff0d99 <init32+0xd99> sbb    %bl,(%eax)
ffff0d9b <init32+0xd9b> sbb    %bl,(%eax)
ffff0d9d <init32+0xd9d> sbb    %bl,(%eax)
ffff0d9f <init32+0xd9f> ss ss ss ss ss ss ss aaa 
ffff0da7 <init32+0xda7> ss ss ss ss ss ss ss ss ss ss ss ss ss aaa 
ffff0db5 <init32+0xdb5> xor    %bh,(%edi)
	...
ffff0dc3 <init32+0xdc3> add    %bh,(%edi)
ffff0dc5 <init32+0xdc5> xor    %dh,(%edi)
ffff0dc7 <init32+0xdc7> ss ss ss ss ss ss ss ss ss ss ss ss (bad)
ffff0dd6 <init32+0xdd6> incl   (%eax)
	...
ffff0de4 <init32+0xde4> incl   (%eax)
ffff0de6 <init32+0xde6> divl   (%esi)
ffff0de8 <init32+0xde8> ss ss ss ss ss ss ss ss ss ss ss ss aaa 
ffff0df5 <init32+0xdf5> xor    %dh,(%edi)
ffff0df7 <init32+0xdf7> ss ss ss ss ss ss ss add %al,%ss:(%eax)
ffff0e01 <init32+0xe01> add    %al,(%eax)
ffff0e03 <init32+0xe03> add    %bh,%bh
ffff0e05 <init32+0xe05> add    %bh,%bh
	...
ffff0e0f <init32+0xe0f> ss ss ss ss testl $0x363636f7,%ss:(%eax)
ffff0e1a <init32+0xe1a> ss ss ss ss sbb %bl,%ss:(%eax)
ffff0e21 <init32+0xe21> sbb    %bl,(%eax)
ffff0e23 <init32+0xe23> sbb    %bh,%bh
ffff0e25 <init32+0xe25> add    %bh,%bh
	...
ffff0e2f <init32+0xe2f> ss ss ss ss ss ss incl %ss:(%eax)
	...
ffff0e44 <init32+0xe44> incl   (%eax)
ffff0e46 <init32+0xe46> lcall  *(%eax)
ffff0e48 <init32+0xe48> sbb    %bl,(%eax)
ffff0e4a <init32+0xe4a> sbb    %bl,(%eax)
ffff0e4c <init32+0xe4c> sbb    %bl,(%eax)
ffff0e4e <init32+0xe4e> sbb    %al,(%eax)
ffff0e50 <init32+0xe50> add    %al,(%eax)
ffff0e52 <init32+0xe52> add    %al,(%eax)
ffff0e54 <init32+0xe54> add    %al,(%eax)
ffff0e56 <init32+0xe56> pushl  (%esi)
ffff0e58 <init32+0xe58> ss ss ss ss ss ss ss ss ss ss ss ss ss ss
ffff0e66 <init32+0xe66> aas    
	...
ffff0e6f <init32+0xe6f> sbb    %bl,(%eax)
ffff0e71 <init32+0xe71> sbb    %bl,(%eax)
ffff0e73 <init32+0xe73> sbb    %bl,(%edi)
ffff0e75 <init32+0xe75> sbb    %bl,(%edi)
	...
ffff0e83 <init32+0xe83> add    %bl,(%edi)
ffff0e85 <init32+0xe85> sbb    %bl,(%edi)
ffff0e87 <init32+0xe87> sbb    %bl,(%eax)
ffff0e89 <init32+0xe89> sbb    %bl,(%eax)
ffff0e8b <init32+0xe8b> sbb    %bl,(%eax)
ffff0e8d <init32+0xe8d> sbb    %bl,(%eax)
ffff0e8f <init32+0xe8f> add    %al,(%eax)
ffff0e91 <init32+0xe91> add    %al,(%eax)
ffff0e93 <init32+0xe93> add    %al,(%eax)
ffff0e95 <init32+0xe95> add    %bh,(%edi)
ffff0e97 <init32+0xe97> ss ss ss ss ss ss ss ss ss ss ss ss ss ss
ffff0ea5 <init32+0xea5> pushl  %ss:(%esi)
ffff0ea8 <init32+0xea8> ss ss ss ss ss ss sbb %bl,%ss:(%eax)
ffff0eb1 <init32+0xeb1> sbb    %bl,(%eax)
ffff0eb3 <init32+0xeb3> sbb    %bh,%bh
ffff0eb5 <init32+0xeb5> sbb    %bh,%bh
ffff0eb7 <init32+0xeb7> sbb    %bl,(%eax)
ffff0eb9 <init32+0xeb9> sbb    %bl,(%eax)
ffff0ebb <init32+0xebb> sbb    %bl,(%eax)
ffff0ebd <init32+0xebd> sbb    %bl,(%eax)
ffff0ebf <init32+0xebf> sbb    %bl,(%eax)
ffff0ec1 <init32+0xec1> sbb    %bl,(%eax)
ffff0ec3 <init32+0xec3> sbb    %bl,(%eax)
ffff0ec5 <init32+0xec5> sbb    %bh,%al
	...
ffff0ed3 <init32+0xed3> add    %al,(%eax)
ffff0ed5 <init32+0xed5> add    %bl,(%edi)
ffff0ed7 <init32+0xed7> sbb    %bl,(%eax)
ffff0ed9 <init32+0xed9> sbb    %bl,(%eax)
ffff0edb <init32+0xedb> sbb    %bl,(%eax)
ffff0edd <init32+0xedd> sbb    %bl,(%eax)
ffff0edf <init32+0xedf> (bad)  
ffff0ee0 <init32+0xee0> (bad)  
ffff0ee1 <init32+0xee1> (bad)  
ffff0ee2 <init32+0xee2> (bad)  
ffff0ee3 <init32+0xee3> (bad)  
ffff0ee4 <init32+0xee4> (bad)  
ffff0ee5 <init32+0xee5> (bad)  
ffff0ee6 <init32+0xee6> (bad)  
ffff0ee7 <init32+0xee7> (bad)  
ffff0ee8 <init32+0xee8> (bad)  
ffff0ee9 <init32+0xee9> (bad)  
ffff0eea <init32+0xeea> (bad)  
ffff0eeb <init32+0xeeb> (bad)  
ffff0eec <init32+0xeec> (bad)  
ffff0eed <init32+0xeed> (bad)  
ffff0eee <init32+0xeee> incl   (%eax)
ffff0ef0 <init32+0xef0> add    %al,(%eax)
ffff0ef2 <init32+0xef2> add    %al,(%eax)
ffff0ef4 <init32+0xef4> add    %al,(%eax)
ffff0ef6 <init32+0xef6> (bad)  
ffff0ef7 <init32+0xef7> (bad)  
ffff0ef8 <init32+0xef8> (bad)  
ffff0ef9 <init32+0xef9> (bad)  
ffff0efa <init32+0xefa> (bad)  
ffff0efb <init32+0xefb> (bad)  
ffff0efc <init32+0xefc> (bad)  
ffff0efd <init32+0xefd> (bad)  
ffff0efe <init32+0xefe> push   %eax
ffff0f00 <init32+0xf00> lock lock lock lock lock lock lock lock lock lock lock lock lock lock
ffff0f0e <init32+0xf0e> lock (bad) 
ffff0f10 <init32+0xf10> (bad)  
ffff0f11 <init32+0xf11> (bad)  
ffff0f12 <init32+0xf12> (bad)  
ffff0f13 <init32+0xf13> (bad)  
ffff0f14 <init32+0xf14> (bad)  
ffff0f15 <init32+0xf15> (bad)  
ffff0f16 <init32+0xf16> (bad)  
ffff0f17 <init32+0xf17> (bad)  
ffff0f18 <init32+0xf18> (bad)  
ffff0f19 <init32+0xf19> (bad)  
ffff0f1a <init32+0xf1a> (bad)  
ffff0f1b <init32+0xf1b> (bad)  
ffff0f1c <init32+0xf1c> (bad)  
ffff0f1d <init32+0xf1d> (bad)  
ffff0f1e <init32+0xf1e> ud0    %edi,%edi
ffff0f21 <init32+0xf21> (bad)  
ffff0f22 <init32+0xf22> (bad)  
ffff0f23 <init32+0xf23> (bad)  
ffff0f24 <init32+0xf24> (bad)  
ffff0f25 <init32+0xf25> incl   (%eax)
	...
ffff0f33 <init32+0xf33> add    %dh,-0x24(%esi)
ffff0f36 <init32+0xf36> fcomp  %st(0)
ffff0f38 <init32+0xf38> fcomp  %st(4)
ffff0f3a <init32+0xf3a> jbe    ffff0f3c <init32+0xf3c>
ffff0f3c <init32+0xf3c> add    %al,(%eax)
ffff0f3e <init32+0xf3e> add    %al,(%eax)
ffff0f40 <init32+0xf40> add    %bh,-0x34(%eax)
ffff0f43 <init32+0xf43> int3   
ffff0f44 <init32+0xf44> int3   
ffff0f45 <init32+0xf45> fmul   %st(4),%st
ffff0f47 <init32+0xf47> mov    $0xc6,%dh
ffff0f4a <init32+0xf4a> int3   
ffff0f4b <init32+0xf4b> add    %al,(%eax)
ffff0f4d <init32+0xf4d> add    %al,(%eax)
ffff0f4f <init32+0xf4f> add    %al,(%eax)
ffff0f51 <init32+0xf51> inc    %dh
ffff0f53 <init32+0xf53> mov    $0xc0,%al
ffff0f56 <init32+0xf56> rol    $0xc0,%al
ffff0f59 <init32+0xf59> rol    $0x0,%al
ffff0f5c <init32+0xf5c> add    %al,(%eax)
ffff0f5e <init32+0xf5e> add    %al,(%eax)
ffff0f60 <init32+0xf60> add    %al,(%eax)
ffff0f62 <init32+0xf62> add    %bh,%dh
ffff0f64 <init32+0xf64> insb   (%dx),%es:(%edi)
ffff0f65 <init32+0xf65> insb   (%dx),%es:(%edi)
ffff0f66 <init32+0xf66> insb   (%dx),%es:(%edi)
ffff0f67 <init32+0xf67> insb   (%dx),%es:(%edi)
ffff0f68 <init32+0xf68> insb   (%dx),%es:(%edi)
ffff0f69 <init32+0xf69> insb   (%dx),%es:(%edi)
ffff0f6a <init32+0xf6a> insb   (%dx),%es:(%edi)
ffff0f6b <init32+0xf6b> add    %al,(%eax)
ffff0f6d <init32+0xf6d> add    %al,(%eax)
ffff0f6f <init32+0xf6f> add    %al,(%eax)
ffff0f71 <init32+0xf71> add    %bh,%dh
ffff0f73 <init32+0xf73> (bad)  
ffff0f74 <init32+0xf74> pusha  
ffff0f75 <init32+0xf75> xor    %bl,(%eax)
ffff0f77 <init32+0xf77> xor    %ah,-0x3a(%eax)
ffff0f7a <init32+0xf7a> incb   (%eax)
	...
ffff0f84 <init32+0xf84> jle    ffff0f5e <init32+0xf5e>
ffff0f86 <init32+0xf86> fcomp  %st(0)
ffff0f88 <init32+0xf88> fcomp  %st(0)
ffff0f8a <init32+0xf8a> jo     ffff0f8c <init32+0xf8c>
ffff0f8c <init32+0xf8c> add    %al,(%eax)
ffff0f8e <init32+0xf8e> add    %al,(%eax)
ffff0f90 <init32+0xf90> add    %al,(%eax)
ffff0f92 <init32+0xf92> add    %ah,0x66(%esi)
ffff0f95 <init32+0xf95> data16 data16 data16 jl ffff0ffa <init32+0xffa>
ffff0f9a <init32+0xf9a> pusha  
ffff0f9b <init32+0xf9b> rolb   $0x0,(%eax)
ffff0f9e <init32+0xf9e> add    %al,(%eax)
ffff0fa0 <init32+0xfa0> add    %al,(%eax)
ffff0fa2 <init32+0xfa2> add    %dh,-0x24(%esi)
ffff0fa5 <init32+0xfa5> sbb    %bl,(%eax)
ffff0fa7 <init32+0xfa7> sbb    %bl,(%eax)
ffff0fa9 <init32+0xfa9> sbb    %bl,(%eax)
ffff0fab <init32+0xfab> add    %al,(%eax)
ffff0fad <init32+0xfad> add    %al,(%eax)
ffff0faf <init32+0xfaf> add    %al,(%eax)
ffff0fb1 <init32+0xfb1> add    %bh,0x18(%esi)
ffff0fb4 <init32+0xfb4> cmp    $0x66,%al
ffff0fb6 <init32+0xfb6> data16 data16 cmp $0x18,%al
ffff0fba <init32+0xfba> jle    ffff0fbc <init32+0xfbc>
ffff0fbc <init32+0xfbc> add    %al,(%eax)
ffff0fbe <init32+0xfbe> add    %al,(%eax)
ffff0fc0 <init32+0xfc0> add    %al,(%eax)
ffff0fc2 <init32+0xfc2> cmp    %ch,-0x3a(%esi,%eax,8)
ffff0fc6 <init32+0xfc6> inc    %dh
ffff0fc8 <init32+0xfc8> (bad)  
ffff0fc9 <init32+0xfc9> insb   (%dx),%es:(%edi)
ffff0fca <init32+0xfca> cmp    %al,(%eax)
ffff0fcc <init32+0xfcc> add    %al,(%eax)
ffff0fce <init32+0xfce> add    %al,(%eax)
ffff0fd0 <init32+0xfd0> add    %bh,(%eax)
ffff0fd2 <init32+0xfd2> insb   (%dx),%es:(%edi)
ffff0fd3 <init32+0xfd3> mov    $0xc6,%dh
ffff0fd6 <init32+0xfd6> insb   (%dx),%es:(%edi)
ffff0fd7 <init32+0xfd7> insb   (%dx),%es:(%edi)
ffff0fd8 <init32+0xfd8> insb   (%dx),%es:(%edi)
ffff0fd9 <init32+0xfd9> insb   (%dx),%es:(%edi)
ffff0fda <init32+0xfda> out    %al,(%dx)
ffff0fdb <init32+0xfdb> add    %al,(%eax)
ffff0fdd <init32+0xfdd> add    %al,(%eax)
ffff0fdf <init32+0xfdf> add    %al,(%eax)
ffff0fe1 <init32+0xfe1> push   %ds
ffff0fe2 <init32+0xfe2> xor    %bl,(%eax)
ffff0fe4 <init32+0xfe4> or     $0x3e,%al
ffff0fe6 <init32+0xfe6> data16 data16 data16 data16 cmp $0x0,%al
	...
ffff0ff4 <init32+0xff4> jle    ffff0fd1 <init32+0xfd1>
ffff0ff6 <init32+0xff6> fcmovnu %st(3),%st
ffff0ff8 <init32+0xff8> jle    ffff0ffa <init32+0xffa>
	...
ffff1002 <init32+0x1002> add    (%esi),%eax
ffff1004 <init32+0x1004> jle    ffff0fe1 <init32+0xfe1>
ffff1006 <init32+0x1006> fcomi  %st(3),%st
ffff1008 <init32+0x1008> jle    ffff106a <init32+0x106a>
ffff100a <init32+0x100a> rolb   $0x0,(%eax)
ffff100d <init32+0x100d> add    %al,(%eax)
ffff100f <init32+0x100f> add    %al,(%eax)
ffff1011 <init32+0x1011> sbb    $0x30,%al
ffff1013 <init32+0x1013> pusha  
ffff1014 <init32+0x1014> pusha  
ffff1015 <init32+0x1015> jl     ffff1077 <init32+0x1077>
ffff1017 <init32+0x1017> pusha  
ffff1018 <init32+0x1018> pusha  
ffff1019 <init32+0x1019> xor    %bl,(%eax,%eax,1)
ffff101c <init32+0x101c> add    %al,(%eax)
ffff101e <init32+0x101e> add    %al,(%eax)
ffff1020 <init32+0x1020> add    %al,(%eax)
ffff1022 <init32+0x1022> jl     ffff0fea <init32+0xfea>
ffff1024 <init32+0x1024> mov    $0xc6,%dh
ffff1027 <init32+0x1027> mov    $0xc6,%dh
ffff102a <init32+0x102a> movb   $0x0,(%eax)
ffff102d <init32+0x102d> add    %al,(%eax)
ffff102f <init32+0x102f> add    %al,(%eax)
ffff1031 <init32+0x1031> add    %al,(%eax)
ffff1033 <init32+0x1033> incb   (%eax)
ffff1035 <init32+0x1035> add    %bh,%dh
ffff1037 <init32+0x1037> add    %al,(%eax)
ffff1039 <init32+0x1039> incb   (%eax)
	...
ffff1043 <init32+0x1043> sbb    %bl,(%eax)
ffff1045 <init32+0x1045> jle    ffff105f <init32+0x105f>
ffff1047 <init32+0x1047> sbb    %al,(%eax)
ffff1049 <init32+0x1049> add    %bh,%bh
ffff104b <init32+0x104b> add    %al,(%eax)
ffff104d <init32+0x104d> add    %al,(%eax)
ffff104f <init32+0x104f> add    %al,(%eax)
ffff1051 <init32+0x1051> add    %dh,(%eax)
ffff1053 <init32+0x1053> sbb    %cl,(%esi,%eax,1)
ffff1056 <init32+0x1056> or     $0x18,%al
ffff1058 <init32+0x1058> xor    %al,(%eax)
ffff105a <init32+0x105a> jle    ffff105c <init32+0x105c>
ffff105c <init32+0x105c> add    %al,(%eax)
ffff105e <init32+0x105e> add    %al,(%eax)
ffff1060 <init32+0x1060> add    %al,(%eax)
ffff1062 <init32+0x1062> or     $0x18,%al
ffff1064 <init32+0x1064> xor    %ah,0x30(%eax)
ffff1067 <init32+0x1067> sbb    %cl,(%eax,%eax,1)
ffff106a <init32+0x106a> jle    ffff106c <init32+0x106c>
ffff106c <init32+0x106c> add    %al,(%eax)
ffff106e <init32+0x106e> add    %al,(%eax)
ffff1070 <init32+0x1070> add    %cl,(%esi)
ffff1072 <init32+0x1072> sbb    (%ebx),%ebx
ffff1074 <init32+0x1074> sbb    %bl,(%eax)
ffff1076 <init32+0x1076> sbb    %bl,(%eax)
ffff1078 <init32+0x1078> sbb    %bl,(%eax)
ffff107a <init32+0x107a> sbb    %bl,(%eax)
ffff107c <init32+0x107c> sbb    %bl,(%eax)
ffff107e <init32+0x107e> sbb    %bl,(%eax)
ffff1080 <init32+0x1080> sbb    %bl,(%eax)
ffff1082 <init32+0x1082> sbb    %bl,(%eax)
ffff1084 <init32+0x1084> sbb    %bl,(%eax)
ffff1086 <init32+0x1086> sbb    %bl,%al
ffff1088 <init32+0x1088> fcomp  %st(0)
ffff108a <init32+0x108a> jo     ffff108c <init32+0x108c>
ffff108c <init32+0x108c> add    %al,(%eax)
ffff108e <init32+0x108e> add    %al,(%eax)
ffff1090 <init32+0x1090> add    %al,(%eax)
ffff1092 <init32+0x1092> add    %bl,(%eax)
ffff1094 <init32+0x1094> sbb    %al,(%eax)
ffff1096 <init32+0x1096> jle    ffff1098 <init32+0x1098>
ffff1098 <init32+0x1098> sbb    %bl,(%eax)
	...
ffff10a2 <init32+0x10a2> add    %al,(%eax)
ffff10a4 <init32+0x10a4> jbe    ffff1082 <init32+0x1082>
ffff10a6 <init32+0x10a6> add    %dh,-0x24(%esi)
ffff10a9 <init32+0x10a9> add    %al,(%eax)
ffff10ab <init32+0x10ab> add    %al,(%eax)
ffff10ad <init32+0x10ad> add    %al,(%eax)
ffff10af <init32+0x10af> add    %bh,(%eax)
ffff10b1 <init32+0x10b1> insb   (%dx),%es:(%edi)
ffff10b2 <init32+0x10b2> insb   (%dx),%es:(%edi)
ffff10b3 <init32+0x10b3> cmp    %al,(%eax)
	...
ffff10c5 <init32+0x10c5> add    %bl,(%eax)
ffff10c7 <init32+0x10c7> sbb    %al,(%eax)
	...
ffff10d5 <init32+0x10d5> add    %al,(%eax)
ffff10d7 <init32+0x10d7> sbb    %al,(%eax)
ffff10d9 <init32+0x10d9> add    %al,(%eax)
ffff10db <init32+0x10db> add    %al,(%eax)
ffff10dd <init32+0x10dd> add    %al,(%eax)
ffff10df <init32+0x10df> add    %cl,(%edi)
ffff10e1 <init32+0x10e1> or     $0xc,%al
ffff10e3 <init32+0x10e3> or     $0xc,%al
ffff10e5 <init32+0x10e5> or     $0xec,%al
ffff10e7 <init32+0x10e7> insb   (%dx),%es:(%edi)
ffff10e8 <init32+0x10e8> insb   (%dx),%es:(%edi)
ffff10e9 <init32+0x10e9> cmp    $0x1c,%al
ffff10eb <init32+0x10eb> add    %al,(%eax)
ffff10ed <init32+0x10ed> add    %al,(%eax)
ffff10ef <init32+0x10ef> add    %bl,%al
ffff10f1 <init32+0x10f1> insb   (%dx),%es:(%edi)
ffff10f2 <init32+0x10f2> insb   (%dx),%es:(%edi)
ffff10f3 <init32+0x10f3> insb   (%dx),%es:(%edi)
ffff10f4 <init32+0x10f4> insb   (%dx),%es:(%edi)
ffff10f5 <init32+0x10f5> insb   (%dx),%es:(%edi)
	...
ffff10fe <init32+0x10fe> add    %al,(%eax)
ffff1100 <init32+0x1100> jo     ffff10da <init32+0x10da>
ffff1102 <init32+0x1102> xor    %ah,-0x38(%eax)
ffff1105 <init32+0x1105> clc    
	...
ffff1112 <init32+0x1112> add    %bh,0x7c(%esp,%edi,2)
ffff1116 <init32+0x1116> jl     ffff1194 <init32+0x1194>
ffff1118 <init32+0x1118> jl     ffff1196 <init32+0x1196>
	...
ffff112e <init32+0x112e> add    %ah,-0x43(%esi)
ffff1131 <init32+0x1131> add    %al,0x0(%eax)
ffff1134 <init32+0x1134> add    %ah,-0x41(%esi)
ffff1137 <init32+0x1137> add    %al,(%eax)
ffff1139 <init32+0x1139> add    %al,%al
ffff113b <init32+0x113b> mov    $0x0,%si
ffff113f <init32+0x113f> add    %al,0xfe8166(%eax)
ffff1145 <init32+0x1145> add    %al,(%ecx)
ffff1147 <init32+0x1147> orb    $0x84,(%edi)
ffff114a <init32+0x114a> xor    %al,(%ecx)
ffff114c <init32+0x114c> mov    $0x0,%ax
ffff1150 <init32+0x1150> add    %al,(%eax)
ffff1152 <init32+0x1152> or     %si,%ax
ffff1155 <init32+0x1155> mov    $0xef660cf8,%edx
ffff115a <init32+0x115a> mov    $0xed660cfc,%edx
ffff115f <init32+0x115f> cmp    $0xffffffff,%eax
ffff1162 <init32+0x1162> jne    ffff116d <init32+0x116d>
ffff1164 <init32+0x1164> add    $0x800,%si
ffff1169 <init32+0x1169> add    %al,(%eax)
ffff116b <init32+0x116b> jmp    ffff1141 <init32+0x1141>
ffff116d <init32+0x116d> mov    $0xc,%ax
ffff1171 <init32+0x1171> add    %al,(%eax)
ffff1173 <init32+0x1173> or     %si,%ax
ffff1176 <init32+0x1176> mov    $0xef660cf8,%edx
ffff117b <init32+0x117b> mov    $0xed660cfc,%edx
ffff1180 <init32+0x1180> mov    $0x8,%ch
ffff1182 <init32+0x1182> bt     $0x17,%ax
ffff1187 <init32+0x1187> jb     ffff118b <init32+0x118b>
ffff1189 <init32+0x1189> mov    $0x1,%ch
ffff118b <init32+0x118b> mov    $0x0,%ax
ffff118f <init32+0x118f> add    %al,(%eax)
ffff1191 <init32+0x1191> or     %si,%ax
ffff1194 <init32+0x1194> mov    $0xef660cf8,%edx
ffff1199 <init32+0x1199> mov    $0xed660cfc,%edx
ffff119e <init32+0x119e> cmp    $0xffffffff,%eax
ffff11a1 <init32+0x11a1> jne    ffff11c6 <init32+0x11c6>
ffff11a3 <init32+0x11a3> add    $0x100,%si
ffff11a8 <init32+0x11a8> add    %al,(%eax)
ffff11aa <init32+0x11aa> dec    %ch
ffff11ac <init32+0x11ac> jne    ffff118b <init32+0x118b>
ffff11ae <init32+0x11ae> sub    $0x100,%si
ffff11b3 <init32+0x11b3> add    %al,(%eax)
ffff11b5 <init32+0x11b5> or     $0x700,%si
ffff11ba <init32+0x11ba> add    %al,(%eax)
ffff11bc <init32+0x11bc> add    $0x100,%si
ffff11c1 <init32+0x11c1> add    %al,(%eax)
ffff11c3 <init32+0x11c3> jmp    b8661143 <__STACK_END+0x88669143>
ffff11c8 <init32+0x11c8> or     $0x0,%al
ffff11ca <init32+0x11ca> add    %al,(%eax)
ffff11cc <init32+0x11cc> or     %si,%ax
ffff11cf <init32+0x11cf> mov    $0xef660cf8,%edx
ffff11d4 <init32+0x11d4> mov    $0xed660cfc,%edx
ffff11d9 <init32+0x11d9> test   $0x0,%ax
ffff11dd <init32+0x11dd> jg     ffff11df <init32+0x11df>
ffff11df <init32+0x11df> jne    ffff11a3 <init32+0x11a3>
ffff11e1 <init32+0x11e1> mov    $0x8,%ax
ffff11e5 <init32+0x11e5> add    %al,(%eax)
ffff11e7 <init32+0x11e7> or     %si,%ax
ffff11ea <init32+0x11ea> mov    $0xef660cf8,%edx
ffff11ef <init32+0x11ef> mov    $0xed660cfc,%edx
ffff11f4 <init32+0x11f4> mov    $0x10,%cl
ffff11f6 <init32+0x11f6> movzbw %cl,%ax
ffff11fa <init32+0x11fa> or     %si,%ax
ffff11fd <init32+0x11fd> mov    $0xef660cf8,%edx
ffff1202 <init32+0x1202> mov    $0xffff,%ax
ffff1206 <init32+0x1206> (bad)  
ffff1207 <init32+0x1207> (bad)  
ffff1208 <init32+0x1208> mov    $0xef660cfc,%edx
ffff120d <init32+0x120d> movzbw %cl,%ax
ffff1211 <init32+0x1211> mov    %ax,%ax
ffff1214 <init32+0x1214> or     %si,%ax
ffff1217 <init32+0x1217> mov    $0xef660cf8,%edx
ffff121c <init32+0x121c> mov    $0xed660cfc,%edx
ffff1221 <init32+0x1221> test   $0x1,%al
ffff1223 <init32+0x1223> je     ffff1243 <init32+0x1243>
ffff1225 <init32+0x1225> and    $0xfffffffc,%eax
ffff1228 <init32+0x1228> je     ffff126f <init32+0x126f>
ffff122a <init32+0x122a> not    %ax
ffff122d <init32+0x122d> mov    %ax,%bx
ffff1230 <init32+0x1230> dec    %ebp
ffff1231 <init32+0x1231> or     %eax,%ebp
ffff1233 <init32+0x1233> inc    %ebp
ffff1234 <init32+0x1234> movzbw %cl,%ax
ffff1238 <init32+0x1238> or     %si,%ax
ffff123b <init32+0x123b> mov    $0x89660cf8,%edx
ffff1240 <init32+0x1240> call   83653530 <__STACK_END+0x5365b530>
ffff1245 <init32+0x1245> loopne ffff1237 <init32+0x1237>
ffff1247 <init32+0x1247> je     ffff126f <init32+0x126f>
ffff1249 <init32+0x1249> not    %ax
ffff124c <init32+0x124c> mov    %ax,%bx
ffff124f <init32+0x124f> dec    %di
ffff1251 <init32+0x1251> or     %ax,%di
ffff1254 <init32+0x1254> inc    %di
ffff1256 <init32+0x1256> movzbw %cl,%ax
ffff125a <init32+0x125a> or     %si,%ax
ffff125d <init32+0x125d> mov    $0xef660cf8,%edx
ffff1262 <init32+0x1262> mov    %di,%ax
ffff1265 <init32+0x1265> mov    $0xef660cfc,%edx
ffff126a <init32+0x126a> add    %bx,%bp
ffff126d <init32+0x126d> inc    %bp
ffff126f <init32+0x126f> add    $0x4,%cl
ffff1272 <init32+0x1272> cmp    $0x28,%cl
ffff1275 <init32+0x1275> jne    27e911f8 <__TAREA_1_VMA_END+0x27b911be>
ffff127b <init32+0x127b> (bad)  
ffff127c <init32+0x127c> mov    $0x67b003c2,%edx
ffff1281 <init32+0x1281> out    %al,(%dx)
ffff1282 <init32+0x1282> mov    $0xb003da,%edx
ffff1287 <init32+0x1287> out    %al,(%dx)
ffff1288 <init32+0x1288> cld    
ffff1289 <init32+0x1289> mov    $0x0,%cl
ffff128b <init32+0x128b> mov    $0xc4ba0033,%esi
ffff1290 <init32+0x1290> add    0x2e42eec8(%eax),%ecx
ffff1296 <init32+0x1296> lods   %ds:(%esi),%al
ffff1297 <init32+0x1297> out    %al,(%dx)
ffff1298 <init32+0x1298> inc    %cl
ffff129a <init32+0x129a> cmp    $0x5,%cl
ffff129d <init32+0x129d> jne    ffff128e <init32+0x128e>
ffff129f <init32+0x129f> mov    $0xd4ba2c11,%eax
ffff12a4 <init32+0x12a4> add    %edi,%ebp
ffff12a6 <init32+0x12a6> mov    $0x0,%cl
ffff12a8 <init32+0x12a8> mov    $0xd4ba0038,%esi
ffff12ad <init32+0x12ad> add    -0x53d11138(%eax),%ecx
ffff12b3 <init32+0x12b3> inc    %edx
ffff12b4 <init32+0x12b4> out    %al,(%dx)
ffff12b5 <init32+0x12b5> inc    %cl
ffff12b7 <init32+0x12b7> cmp    $0x19,%cl
ffff12ba <init32+0x12ba> jb     ffff12ab <init32+0x12ab>
ffff12bc <init32+0x12bc> mov    $0x0,%cl
ffff12be <init32+0x12be> mov    $0xc8ba006f,%esi
ffff12c3 <init32+0x12c3> add    0x2e42eec8(%eax),%ecx
ffff12c9 <init32+0x12c9> lods   %ds:(%esi),%al
ffff12ca <init32+0x12ca> out    %al,(%dx)
ffff12cb <init32+0x12cb> lods   %cs:(%esi),%al
ffff12cd <init32+0x12cd> out    %al,(%dx)
ffff12ce <init32+0x12ce> lods   %cs:(%esi),%al
ffff12d0 <init32+0x12d0> out    %al,(%dx)
ffff12d1 <init32+0x12d1> inc    %cl
ffff12d3 <init32+0x12d3> cmp    $0x40,%cl
ffff12d6 <init32+0x12d6> jb     ffff12c1 <init32+0x12c1>
ffff12d8 <init32+0x12d8> mov    $0x0,%cl
ffff12da <init32+0x12da> mov    $0xceba0051,%esi
ffff12df <init32+0x12df> add    -0x53d11138(%eax),%ecx
ffff12e5 <init32+0x12e5> inc    %edx
ffff12e6 <init32+0x12e6> out    %al,(%dx)
ffff12e7 <init32+0x12e7> inc    %cl
ffff12e9 <init32+0x12e9> cmp    $0x9,%cl
ffff12ec <init32+0x12ec> jb     ffff12dd <init32+0x12dd>
ffff12ee <init32+0x12ee> mov    $0xb1ec03da,%edx
ffff12f3 <init32+0x12f3> add    %bh,-0x3f45ffa6(%esi)
ffff12f9 <init32+0x12f9> add    -0x53d11138(%eax),%ecx
ffff12ff <init32+0x12ff> out    %al,(%dx)
ffff1300 <init32+0x1300> inc    %cl
ffff1302 <init32+0x1302> cmp    $0x15,%cl
ffff1305 <init32+0x1305> jb     ffff12f7 <init32+0x12f7>
ffff1307 <init32+0x1307> mov    $0x20,%al
ffff1309 <init32+0x1309> out    %al,(%dx)
ffff130a <init32+0x130a> mov    $0x5b803ce,%edx
ffff130f <init32+0x130f> add    %ch,%bh
ffff1311 <init32+0x1311> mov    $0xbaef0406,%eax
ffff1316 <init32+0x1316> les    (%ebx),%eax
ffff1318 <init32+0x1318> mov    $0xb8ef0402,%eax
ffff131d <init32+0x131d> add    $0x6,%al
ffff131f <init32+0x131f> out    %eax,(%dx)
ffff1320 <init32+0x1320> mov    $0xc08ea000,%eax
ffff1325 <init32+0x1325> mov    $0x2fbe0000,%edi
ffff132a <init32+0x132a> add    %edi,0x662e0100(%ecx)
ffff1330 <init32+0x1330> movsl  %ds:(%esi),%es:(%edi)
ffff1331 <init32+0x1331> movsw  %cs:(%esi),%es:(%edi)
ffff1334 <init32+0x1334> movsw  %cs:(%esi),%es:(%edi)
ffff1337 <init32+0x1337> movsw  %cs:(%esi),%es:(%edi)
ffff133a <init32+0x133a> add    $0x10,%edi
ffff133d <init32+0x133d> loop   ffff132e <init32+0x132e>
ffff133f <init32+0x133f> mov    $0xb8ef0302,%eax
ffff1344 <init32+0x1344> add    $0x2,%al
ffff1346 <init32+0x1346> out    %eax,(%dx)
ffff1347 <init32+0x1347> mov    $0x5b803ce,%edx
ffff134c <init32+0x134c> adc    %ch,%bh
ffff134e <init32+0x134e> mov    $0x2eef0e06,%eax
ffff1353 <init32+0x1353> lgdtw  (%esi)
ffff1357 <init32+0x1357> sbb    (%eax),%al
ffff1359 <init32+0x1359> mov    %cr0,%eax
ffff135c <init32+0x135c> or     $0x1,%ax
ffff1360 <init32+0x1360> mov    %eax,%cr0
ffff1363 <init32+0x1363> ljmpw  $0xffff,$0x136d
ffff1369 <init32+0x1369> or     %al,(%eax)
ffff136b <init32+0x136b> jmp    ffff136b <init32+0x136b>
ffff136d <init32+0x136d> mov    $0x10,%ax
ffff1371 <init32+0x1371> mov    %eax,%ds
ffff1373 <init32+0x1373> mov    %eax,%es
ffff1375 <init32+0x1375> mov    %eax,%fs
ffff1377 <init32+0x1377> mov    %eax,%gs
ffff1379 <init32+0x1379> mov    $0xffff14a8,%esi
ffff137e <init32+0x137e> mov    $0x0,%edi
ffff1383 <init32+0x1383> mov    $0x19c,%ecx
ffff1388 <init32+0x1388> sub    $0x0,%ecx
ffff138e <init32+0x138e> rep movsb %ds:(%esi),%es:(%edi)
ffff1390 <init32+0x1390> mov    $0xffff1644,%esi
ffff1395 <init32+0x1395> mov    $0x100000,%edi
ffff139a <init32+0x139a> mov    $0x100189,%ecx
ffff139f <init32+0x139f> sub    $0x100000,%ecx
ffff13a5 <init32+0x13a5> rep movsb %ds:(%esi),%es:(%edi)
ffff13a7 <init32+0x13a7> mov    $0xffff17cd,%esi
ffff13ac <init32+0x13ac> mov    $0x200000,%edi
ffff13b1 <init32+0x13b1> mov    $0x2000a0,%ecx
ffff13b6 <init32+0x13b6> sub    $0x200000,%ecx
ffff13bc <init32+0x13bc> rep movsb %ds:(%esi),%es:(%edi)
ffff13be <init32+0x13be> mov    $0xffff186d,%esi
ffff13c3 <init32+0x13c3> mov    $0x210000,%edi
ffff13c8 <init32+0x13c8> mov    $0x210059,%ecx
ffff13cd <init32+0x13cd> sub    $0x210000,%ecx
ffff13d3 <init32+0x13d3> rep movsb %ds:(%esi),%es:(%edi)
ffff13d5 <init32+0x13d5> mov    $0xffff18c6,%esi
ffff13da <init32+0x13da> mov    $0x202000,%edi
ffff13df <init32+0x13df> mov    $0x202484,%ecx
ffff13e4 <init32+0x13e4> sub    $0x202000,%ecx
ffff13ea <init32+0x13ea> rep movsb %ds:(%esi),%es:(%edi)
ffff13ec <init32+0x13ec> mov    $0xffff1d4a,%esi
ffff13f1 <init32+0x13f1> mov    $0x300000,%edi
ffff13f6 <init32+0x13f6> mov    $0x30003a,%ecx
ffff13fb <init32+0x13fb> sub    $0x300000,%ecx
ffff1401 <init32+0x1401> rep movsb %ds:(%esi),%es:(%edi)
ffff1403 <init32+0x1403> lgdtl  0x18
ffff140a <init32+0x140a> lidtl  0x196
ffff1411 <init32+0x1411> mov    $0x10,%ax
ffff1415 <init32+0x1415> mov    %eax,%ss
ffff1417 <init32+0x1417> mov    $0x2fff8000,%esp
ffff141c <init32+0x141c> mov    %esp,%ebp
ffff141e <init32+0x141e> xor    %eax,%eax
ffff1420 <init32+0x1420> mov    $0x2fff4000,%edi
ffff1425 <init32+0x1425> mov    $0x2fff8000,%ecx
ffff142a <init32+0x142a> sub    $0x2fff4000,%ecx
ffff1430 <init32+0x1430> rep stos %al,%es:(%edi)
ffff1432 <init32+0x1432> mov    $0x0,%eax
ffff1437 <init32+0x1437> mov    %eax,0x210031
ffff143c <init32+0x143c> mov    $0xb8000,%eax
ffff1441 <init32+0x1441> mov    %eax,0x210041
ffff1446 <init32+0x1446> mov    $0xff,%al
ffff1448 <init32+0x1448> out    %al,$0x64
ffff144a <init32+0x144a> mov    $0x100,%ecx
ffff144f <init32+0x144f> loop   ffff144f <init32+0x144f>
ffff1451 <init32+0x1451> mov    $0x10000,%ecx
ffff1456 <ciclo1> in     $0x60,%al
ffff1458 <ciclo1+0x2> test   $0x1,%al
ffff145a <ciclo1+0x4> loope  ffff1456 <ciclo1>
ffff145c <ciclo1+0x6> mov    $0xf4,%al
ffff145e <ciclo1+0x8> out    %al,$0x64
ffff1460 <ciclo1+0xa> mov    $0x10000,%ecx
ffff1465 <ciclo2> in     $0x60,%al
ffff1467 <ciclo2+0x2> test   $0x1,%al
ffff1469 <ciclo2+0x4> loope  ffff1465 <ciclo2>
ffff146b <ciclo2+0x6> in     $0x60,%al
ffff146d <ciclo2+0x8> mov    $0x34,%al
ffff146f <ciclo2+0xa> out    %al,$0x43
ffff1471 <ciclo2+0xc> mov    $0x0,%al
ffff1473 <ciclo2+0xe> out    %al,$0x40
ffff1475 <ciclo2+0x10> out    %al,$0x40
ffff1477 <ciclo2+0x12> mov    $0x11,%al
ffff1479 <ciclo2+0x14> out    %al,$0x20
ffff147b <ciclo2+0x16> out    %al,$0xa0
ffff147d <ciclo2+0x18> mov    $0x20,%al
ffff147f <ciclo2+0x1a> out    %al,$0x21
ffff1481 <ciclo2+0x1c> mov    $0x28,%al
ffff1483 <ciclo2+0x1e> out    %al,$0xa1
ffff1485 <ciclo2+0x20> mov    $0x4,%al
ffff1487 <ciclo2+0x22> out    %al,$0x21
ffff1489 <ciclo2+0x24> mov    $0x2,%al
ffff148b <ciclo2+0x26> out    %al,$0xa1
ffff148d <ciclo2+0x28> mov    $0x1,%al
ffff148f <ciclo2+0x2a> out    %al,$0x21
ffff1491 <ciclo2+0x2c> out    %al,$0xa1
ffff1493 <ciclo2+0x2e> mov    $0xfc,%al
ffff1495 <ciclo2+0x30> out    %al,$0x21
ffff1497 <ciclo2+0x32> mov    $0xff,%al
ffff1499 <ciclo2+0x34> out    %al,$0xa1
ffff149b <ciclo2+0x36> sti    
ffff149c <ciclo2+0x37> xor    %eax,%eax
ffff149e <ciclo2+0x39> ljmp   $0x8,$0x202000
ffff14a5 <ciclo2.guard> hlt    
ffff14a6 <ciclo2.guard+0x1> jmp    ffff14a5 <ciclo2.guard>

Desensamblado de la secci√≥n .kernel:
00202000 <kernel_init> xchg   %bx,%bx
00202003 <kernel_init.halted> lcall  $0x8,$0x300000
0020200a <kernel_init.halted+0x7> hlt    
0020200b <kernel_init.halted+0x8> jmp    00202003 <kernel_init.halted>
0020200d <kernel_init.guard> hlt    
0020200e <kernel_init.guard+0x1> jmp    0020200d <kernel_init.guard>
00202010 <borrar_pantalla> mov    $0xb8000,%esi
00202015 <borrar_pantalla+0x5> mov    $0x7d0,%ecx
0020201a <borrar_pantalla+0xa> mov    $0x720,%ax
0020201e <ciclo_borrar_pantalla> mov    %ax,(%esi)
00202021 <ciclo_borrar_pantalla+0x3> add    $0x2,%esi
00202024 <ciclo_borrar_pantalla+0x6> loop   0020201e <ciclo_borrar_pantalla>
00202026 <ciclo_borrar_pantalla+0x8> ret    
00202027 <buffer_Push> endbr32 
0020202b <buffer_Push+0x4> push   %ebp
0020202c <buffer_Push+0x5> mov    %esp,%ebp
0020202e <buffer_Push+0x7> sub    $0x4,%esp
00202031 <buffer_Push+0xa> mov    0xc(%ebp),%eax
00202034 <buffer_Push+0xd> mov    %al,-0x4(%ebp)
00202037 <buffer_Push+0x10> cmpb   $0x15,-0x4(%ebp)
0020203b <buffer_Push+0x14> ja     0020208e <buffer_Push+0x67>
0020203d <buffer_Push+0x16> mov    0x8(%ebp),%eax
00202040 <buffer_Push+0x19> movzbl 0x12(%eax),%eax
00202044 <buffer_Push+0x1d> cmp    $0xf,%al
00202046 <buffer_Push+0x1f> ja     0020208e <buffer_Push+0x67>
00202048 <buffer_Push+0x21> mov    0x8(%ebp),%eax
0020204b <buffer_Push+0x24> movzbl 0x10(%eax),%eax
0020204f <buffer_Push+0x28> movzbl %al,%eax
00202052 <buffer_Push+0x2b> mov    0x8(%ebp),%edx
00202055 <buffer_Push+0x2e> movzbl -0x4(%ebp),%ecx
00202059 <buffer_Push+0x32> mov    %cl,(%edx,%eax,1)
0020205c <buffer_Push+0x35> mov    0x8(%ebp),%eax
0020205f <buffer_Push+0x38> movzbl 0x12(%eax),%eax
00202063 <buffer_Push+0x3c> lea    0x1(%eax),%edx
00202066 <buffer_Push+0x3f> mov    0x8(%ebp),%eax
00202069 <buffer_Push+0x42> mov    %dl,0x12(%eax)
0020206c <buffer_Push+0x45> mov    0x8(%ebp),%eax
0020206f <buffer_Push+0x48> movzbl 0x10(%eax),%eax
00202073 <buffer_Push+0x4c> lea    0x1(%eax),%edx
00202076 <buffer_Push+0x4f> mov    0x8(%ebp),%eax
00202079 <buffer_Push+0x52> mov    %dl,0x10(%eax)
0020207c <buffer_Push+0x55> mov    0x8(%ebp),%eax
0020207f <buffer_Push+0x58> movzbl 0x10(%eax),%eax
00202083 <buffer_Push+0x5c> cmp    $0x10,%al
00202085 <buffer_Push+0x5e> jne    0020208e <buffer_Push+0x67>
00202087 <buffer_Push+0x60> mov    0x8(%ebp),%eax
0020208a <buffer_Push+0x63> movb   $0x0,0x10(%eax)
0020208e <buffer_Push+0x67> nop
0020208f <buffer_Push+0x68> leave  
00202090 <buffer_Push+0x69> ret    
00202091 <buffer_Pop> endbr32 
00202095 <buffer_Pop+0x4> push   %ebp
00202096 <buffer_Pop+0x5> mov    %esp,%ebp
00202098 <buffer_Pop+0x7> sub    $0x10,%esp
0020209b <buffer_Pop+0xa> movb   $0xff,-0x1(%ebp)
0020209f <buffer_Pop+0xe> mov    0x8(%ebp),%eax
002020a2 <buffer_Pop+0x11> movzbl 0x12(%eax),%eax
002020a6 <buffer_Pop+0x15> test   %al,%al
002020a8 <buffer_Pop+0x17> je     002020f6 <buffer_Pop+0x65>
002020aa <buffer_Pop+0x19> mov    0x8(%ebp),%eax
002020ad <buffer_Pop+0x1c> movzbl 0x11(%eax),%eax
002020b1 <buffer_Pop+0x20> movzbl %al,%eax
002020b4 <buffer_Pop+0x23> mov    0x8(%ebp),%edx
002020b7 <buffer_Pop+0x26> movzbl (%edx,%eax,1),%eax
002020bb <buffer_Pop+0x2a> mov    %al,-0x1(%ebp)
002020be <buffer_Pop+0x2d> mov    0x8(%ebp),%eax
002020c1 <buffer_Pop+0x30> movzbl 0x12(%eax),%eax
002020c5 <buffer_Pop+0x34> lea    -0x1(%eax),%edx
002020c8 <buffer_Pop+0x37> mov    0x8(%ebp),%eax
002020cb <buffer_Pop+0x3a> mov    %dl,0x12(%eax)
002020ce <buffer_Pop+0x3d> mov    0x8(%ebp),%eax
002020d1 <buffer_Pop+0x40> movzbl 0x11(%eax),%eax
002020d5 <buffer_Pop+0x44> lea    0x1(%eax),%edx
002020d8 <buffer_Pop+0x47> mov    0x8(%ebp),%eax
002020db <buffer_Pop+0x4a> mov    %dl,0x11(%eax)
002020de <buffer_Pop+0x4d> mov    0x8(%ebp),%eax
002020e1 <buffer_Pop+0x50> movzbl 0x11(%eax),%eax
002020e5 <buffer_Pop+0x54> cmp    $0x10,%al
002020e7 <buffer_Pop+0x56> jne    002020f0 <buffer_Pop+0x5f>
002020e9 <buffer_Pop+0x58> mov    0x8(%ebp),%eax
002020ec <buffer_Pop+0x5b> movb   $0x0,0x11(%eax)
002020f0 <buffer_Pop+0x5f> movzbl -0x1(%ebp),%eax
002020f4 <buffer_Pop+0x63> jmp    002020fa <buffer_Pop+0x69>
002020f6 <buffer_Pop+0x65> movzbl -0x1(%ebp),%eax
002020fa <buffer_Pop+0x69> leave  
002020fb <buffer_Pop+0x6a> ret    
002020fc <buffer_Clear> endbr32 
00202100 <buffer_Clear+0x4> push   %ebp
00202101 <buffer_Clear+0x5> mov    %esp,%ebp
00202103 <buffer_Clear+0x7> mov    0x8(%ebp),%eax
00202106 <buffer_Clear+0xa> movb   $0x0,0x10(%eax)
0020210a <buffer_Clear+0xe> mov    0x8(%ebp),%eax
0020210d <buffer_Clear+0x11> movb   $0x0,0x11(%eax)
00202111 <buffer_Clear+0x15> movl   $0x0,0x210054
0020211b <buffer_Clear+0x1f> jmp    00202136 <buffer_Clear+0x3a>
0020211d <buffer_Clear+0x21> mov    0x210054,%eax
00202122 <buffer_Clear+0x26> mov    0x8(%ebp),%edx
00202125 <buffer_Clear+0x29> movb   $0x0,(%edx,%eax,1)
00202129 <buffer_Clear+0x2d> mov    0x210054,%eax
0020212e <buffer_Clear+0x32> add    $0x1,%eax
00202131 <buffer_Clear+0x35> mov    %eax,0x210054
00202136 <buffer_Clear+0x3a> mov    0x210054,%eax
0020213b <buffer_Clear+0x3f> cmp    $0xf,%eax
0020213e <buffer_Clear+0x42> jle    0020211d <buffer_Clear+0x21>
00202140 <buffer_Clear+0x44> mov    0x8(%ebp),%eax
00202143 <buffer_Clear+0x47> movb   $0x0,0x12(%eax)
00202147 <buffer_Clear+0x4b> nop
00202148 <buffer_Clear+0x4c> pop    %ebp
00202149 <buffer_Clear+0x4d> ret    
0020214a <cargar_tabla> endbr32 
0020214e <cargar_tabla+0x4> push   %ebp
0020214f <cargar_tabla+0x5> mov    %esp,%ebp
00202151 <cargar_tabla+0x7> sub    $0x10,%esp
00202154 <cargar_tabla+0xa> movw   $0x0,-0x2(%ebp)
0020215a <cargar_tabla+0x10> movb   $0xff,-0x9(%ebp)
0020215e <cargar_tabla+0x14> movl   $0x0,-0x8(%ebp)
00202165 <cargar_tabla+0x1b> movw   $0x0,-0x2(%ebp)
0020216b <cargar_tabla+0x21> jmp    002021a3 <cargar_tabla+0x59>
0020216d <cargar_tabla+0x23> pushl  0xc(%ebp)
00202170 <cargar_tabla+0x26> call   00202091 <buffer_Pop>
00202175 <cargar_tabla+0x2b> add    $0x4,%esp
00202178 <cargar_tabla+0x2e> mov    %al,-0x9(%ebp)
0020217b <cargar_tabla+0x31> cmpb   $0xff,-0x9(%ebp)
0020217f <cargar_tabla+0x35> je     00202198 <cargar_tabla+0x4e>
00202181 <cargar_tabla+0x37> mov    -0x8(%ebp),%edx
00202184 <cargar_tabla+0x3a> mov    %edx,%eax
00202186 <cargar_tabla+0x3c> shl    $0x2,%eax
00202189 <cargar_tabla+0x3f> add    %edx,%eax
0020218b <cargar_tabla+0x41> add    %eax,%eax
0020218d <cargar_tabla+0x43> mov    %eax,%edx
0020218f <cargar_tabla+0x45> movzbl -0x9(%ebp),%eax
00202193 <cargar_tabla+0x49> add    %edx,%eax
00202195 <cargar_tabla+0x4b> mov    %eax,-0x8(%ebp)
00202198 <cargar_tabla+0x4e> movzwl -0x2(%ebp),%eax
0020219c <cargar_tabla+0x52> add    $0x1,%eax
0020219f <cargar_tabla+0x55> mov    %ax,-0x2(%ebp)
002021a3 <cargar_tabla+0x59> cmpw   $0xf,-0x2(%ebp)
002021a8 <cargar_tabla+0x5e> jbe    0020216d <cargar_tabla+0x23>
002021aa <cargar_tabla+0x60> movzbl 0x210058,%eax
002021b1 <cargar_tabla+0x67> cmp    $0xa,%al
002021b3 <cargar_tabla+0x69> jg     00202228 <cargar_tabla+0xde>
002021b5 <cargar_tabla+0x6b> movw   $0x0,-0x2(%ebp)
002021bb <cargar_tabla+0x71> jmp    00202212 <cargar_tabla+0xc8>
002021bd <cargar_tabla+0x73> mov    -0x8(%ebp),%ecx
002021c0 <cargar_tabla+0x76> mov    $0xcccccccd,%edx
002021c5 <cargar_tabla+0x7b> mov    %ecx,%eax
002021c7 <cargar_tabla+0x7d> mul    %edx
002021c9 <cargar_tabla+0x7f> shr    $0x3,%edx
002021cc <cargar_tabla+0x82> mov    %edx,%eax
002021ce <cargar_tabla+0x84> shl    $0x2,%eax
002021d1 <cargar_tabla+0x87> add    %edx,%eax
002021d3 <cargar_tabla+0x89> add    %eax,%eax
002021d5 <cargar_tabla+0x8b> sub    %eax,%ecx
002021d7 <cargar_tabla+0x8d> mov    %ecx,%edx
002021d9 <cargar_tabla+0x8f> movzbl 0x210058,%eax
002021e0 <cargar_tabla+0x96> movsbl %al,%eax
002021e3 <cargar_tabla+0x99> shl    $0x4,%eax
002021e6 <cargar_tabla+0x9c> lea    -0x1(%eax),%ecx
002021e9 <cargar_tabla+0x9f> movzwl -0x2(%ebp),%eax
002021ed <cargar_tabla+0xa3> sub    %eax,%ecx
002021ef <cargar_tabla+0xa5> mov    0x8(%ebp),%eax
002021f2 <cargar_tabla+0xa8> mov    %dl,(%eax,%ecx,1)
002021f5 <cargar_tabla+0xab> mov    -0x8(%ebp),%eax
002021f8 <cargar_tabla+0xae> mov    $0xcccccccd,%edx
002021fd <cargar_tabla+0xb3> mul    %edx
002021ff <cargar_tabla+0xb5> mov    %edx,%eax
00202201 <cargar_tabla+0xb7> shr    $0x3,%eax
00202204 <cargar_tabla+0xba> mov    %eax,-0x8(%ebp)
00202207 <cargar_tabla+0xbd> movzwl -0x2(%ebp),%eax
0020220b <cargar_tabla+0xc1> add    $0x1,%eax
0020220e <cargar_tabla+0xc4> mov    %ax,-0x2(%ebp)
00202212 <cargar_tabla+0xc8> cmpw   $0xf,-0x2(%ebp)
00202217 <cargar_tabla+0xcd> jbe    002021bd <cargar_tabla+0x73>
00202219 <cargar_tabla+0xcf> movzbl 0x210058,%eax
00202220 <cargar_tabla+0xd6> add    $0x1,%eax
00202223 <cargar_tabla+0xd9> mov    %al,0x210058
00202228 <cargar_tabla+0xde> nop
00202229 <cargar_tabla+0xdf> leave  
0020222a <cargar_tabla+0xe0> ret    
0020222b <calcular_Promedio> endbr32 
0020222f <calcular_Promedio+0x4> push   %ebp
00202230 <calcular_Promedio+0x5> mov    %esp,%ebp
00202232 <calcular_Promedio+0x7> sub    $0x20,%esp
00202235 <calcular_Promedio+0xa> movw   $0x0,-0x14(%ebp)
0020223b <calcular_Promedio+0x10> movw   $0x0,-0x2(%ebp)
00202241 <calcular_Promedio+0x16> movw   $0x0,-0x4(%ebp)
00202247 <calcular_Promedio+0x1c> movl   $0x0,-0x8(%ebp)
0020224e <calcular_Promedio+0x23> movl   $0x0,-0xc(%ebp)
00202255 <calcular_Promedio+0x2a> movl   $0x0,-0x10(%ebp)
0020225c <calcular_Promedio+0x31> movw   $0x1,-0x12(%ebp)
00202262 <calcular_Promedio+0x37> movw   $0x0,-0x4(%ebp)
00202268 <calcular_Promedio+0x3d> jmp    002022ed <calcular_Promedio+0xc2>
0020226d <calcular_Promedio+0x42> movw   $0x0,-0x2(%ebp)
00202273 <calcular_Promedio+0x48> jmp    002022ac <calcular_Promedio+0x81>
00202275 <calcular_Promedio+0x4a> mov    -0x10(%ebp),%edx
00202278 <calcular_Promedio+0x4d> mov    %edx,%eax
0020227a <calcular_Promedio+0x4f> shl    $0x2,%eax
0020227d <calcular_Promedio+0x52> add    %edx,%eax
0020227f <calcular_Promedio+0x54> add    %eax,%eax
00202281 <calcular_Promedio+0x56> mov    %eax,%ecx
00202283 <calcular_Promedio+0x58> movzwl -0x4(%ebp),%eax
00202287 <calcular_Promedio+0x5c> shl    $0x4,%eax
0020228a <calcular_Promedio+0x5f> mov    %eax,%edx
0020228c <calcular_Promedio+0x61> movzwl -0x2(%ebp),%eax
00202290 <calcular_Promedio+0x65> add    %eax,%edx
00202292 <calcular_Promedio+0x67> mov    0x8(%ebp),%eax
00202295 <calcular_Promedio+0x6a> movzbl (%eax,%edx,1),%eax
00202299 <calcular_Promedio+0x6e> movzbl %al,%eax
0020229c <calcular_Promedio+0x71> add    %ecx,%eax
0020229e <calcular_Promedio+0x73> mov    %eax,-0x10(%ebp)
002022a1 <calcular_Promedio+0x76> movzwl -0x2(%ebp),%eax
002022a5 <calcular_Promedio+0x7a> add    $0x1,%eax
002022a8 <calcular_Promedio+0x7d> mov    %ax,-0x2(%ebp)
002022ac <calcular_Promedio+0x81> cmpw   $0xf,-0x2(%ebp)
002022b1 <calcular_Promedio+0x86> jbe    00202275 <calcular_Promedio+0x4a>
002022b3 <calcular_Promedio+0x88> cmpl   $0x0,-0x10(%ebp)
002022b7 <calcular_Promedio+0x8c> je     002022db <calcular_Promedio+0xb0>
002022b9 <calcular_Promedio+0x8e> mov    -0x10(%ebp),%eax
002022bc <calcular_Promedio+0x91> add    %eax,-0x8(%ebp)
002022bf <calcular_Promedio+0x94> movzwl -0x12(%ebp),%ecx
002022c3 <calcular_Promedio+0x98> mov    -0x8(%ebp),%eax
002022c6 <calcular_Promedio+0x9b> mov    $0x0,%edx
002022cb <calcular_Promedio+0xa0> div    %ecx
002022cd <calcular_Promedio+0xa2> mov    %eax,-0xc(%ebp)
002022d0 <calcular_Promedio+0xa5> movzwl -0x12(%ebp),%eax
002022d4 <calcular_Promedio+0xa9> add    $0x1,%eax
002022d7 <calcular_Promedio+0xac> mov    %ax,-0x12(%ebp)
002022db <calcular_Promedio+0xb0> movl   $0x0,-0x10(%ebp)
002022e2 <calcular_Promedio+0xb7> movzwl -0x4(%ebp),%eax
002022e6 <calcular_Promedio+0xbb> add    $0x1,%eax
002022e9 <calcular_Promedio+0xbe> mov    %ax,-0x4(%ebp)
002022ed <calcular_Promedio+0xc2> cmpw   $0x9,-0x4(%ebp)
002022f2 <calcular_Promedio+0xc7> jbe    0020226d <calcular_Promedio+0x42>
002022f8 <calcular_Promedio+0xcd> cmpl   $0x0,-0xc(%ebp)
002022fc <calcular_Promedio+0xd1> je     00202357 <calcular_Promedio+0x12c>
002022fe <calcular_Promedio+0xd3> movw   $0x0,-0x2(%ebp)
00202304 <calcular_Promedio+0xd9> jmp    00202350 <calcular_Promedio+0x125>
00202306 <calcular_Promedio+0xdb> mov    -0xc(%ebp),%ecx
00202309 <calcular_Promedio+0xde> mov    $0xcccccccd,%edx
0020230e <calcular_Promedio+0xe3> mov    %ecx,%eax
00202310 <calcular_Promedio+0xe5> mul    %edx
00202312 <calcular_Promedio+0xe7> shr    $0x3,%edx
00202315 <calcular_Promedio+0xea> mov    %edx,%eax
00202317 <calcular_Promedio+0xec> shl    $0x2,%eax
0020231a <calcular_Promedio+0xef> add    %edx,%eax
0020231c <calcular_Promedio+0xf1> add    %eax,%eax
0020231e <calcular_Promedio+0xf3> sub    %eax,%ecx
00202320 <calcular_Promedio+0xf5> mov    %ecx,%edx
00202322 <calcular_Promedio+0xf7> movzwl -0x2(%ebp),%eax
00202326 <calcular_Promedio+0xfb> mov    $0xf,%ecx
0020232b <calcular_Promedio+0x100> sub    %eax,%ecx
0020232d <calcular_Promedio+0x102> mov    0xc(%ebp),%eax
00202330 <calcular_Promedio+0x105> mov    %dl,(%eax,%ecx,1)
00202333 <calcular_Promedio+0x108> mov    -0xc(%ebp),%eax
00202336 <calcular_Promedio+0x10b> mov    $0xcccccccd,%edx
0020233b <calcular_Promedio+0x110> mul    %edx
0020233d <calcular_Promedio+0x112> mov    %edx,%eax
0020233f <calcular_Promedio+0x114> shr    $0x3,%eax
00202342 <calcular_Promedio+0x117> mov    %eax,-0xc(%ebp)
00202345 <calcular_Promedio+0x11a> movzwl -0x2(%ebp),%eax
00202349 <calcular_Promedio+0x11e> add    $0x1,%eax
0020234c <calcular_Promedio+0x121> mov    %ax,-0x2(%ebp)
00202350 <calcular_Promedio+0x125> cmpw   $0xf,-0x2(%ebp)
00202355 <calcular_Promedio+0x12a> jbe    00202306 <calcular_Promedio+0xdb>
00202357 <calcular_Promedio+0x12c> nop
00202358 <calcular_Promedio+0x12d> leave  
00202359 <calcular_Promedio+0x12e> ret    
0020235a <escribir_Pantalla> endbr32 
0020235e <escribir_Pantalla+0x4> push   %ebp
0020235f <escribir_Pantalla+0x5> mov    %esp,%ebp
00202361 <escribir_Pantalla+0x7> push   %ebx
00202362 <escribir_Pantalla+0x8> sub    $0x28,%esp
00202365 <escribir_Pantalla+0xb> mov    0x10(%ebp),%edx
00202368 <escribir_Pantalla+0xe> mov    0x14(%ebp),%eax
0020236b <escribir_Pantalla+0x11> mov    %dx,-0x28(%ebp)
0020236f <escribir_Pantalla+0x15> mov    %ax,-0x2c(%ebp)
00202373 <escribir_Pantalla+0x19> movw   $0x0,-0x6(%ebp)
00202379 <escribir_Pantalla+0x1f> movl   $0x61626553,-0x1a(%ebp)
00202380 <escribir_Pantalla+0x26> movl   $0x61697473,-0x16(%ebp)
00202387 <escribir_Pantalla+0x2d> movl   $0x6147206e,-0x12(%ebp)
0020238e <escribir_Pantalla+0x34> movl   $0x6e676576,-0xe(%ebp)
00202395 <escribir_Pantalla+0x3b> movw   $0x6f,-0xa(%ebp)
0020239b <escribir_Pantalla+0x41> movw   $0x0,-0x8(%ebp)
002023a1 <escribir_Pantalla+0x47> movw   $0x12,-0x8(%ebp)
002023a7 <escribir_Pantalla+0x4d> cmpw   $0x18,-0x28(%ebp)
002023ac <escribir_Pantalla+0x52> setbe  %dl
002023af <escribir_Pantalla+0x55> cmpw   $0x4f,-0x2c(%ebp)
002023b4 <escribir_Pantalla+0x5a> setbe  %al
002023b7 <escribir_Pantalla+0x5d> and    %edx,%eax
002023b9 <escribir_Pantalla+0x5f> test   %al,%al
002023bb <escribir_Pantalla+0x61> je     00202430 <escribir_Pantalla+0xd6>
002023bd <escribir_Pantalla+0x63> movw   $0x0,-0x6(%ebp)
002023c3 <escribir_Pantalla+0x69> jmp    00202429 <escribir_Pantalla+0xcf>
002023c5 <escribir_Pantalla+0x6b> movzwl -0x6(%ebp),%eax
002023c9 <escribir_Pantalla+0x6f> mov    0xc(%ebp),%edx
002023cc <escribir_Pantalla+0x72> movzbl (%edx,%eax,1),%ecx
002023d0 <escribir_Pantalla+0x76> movzwl -0x2c(%ebp),%edx
002023d4 <escribir_Pantalla+0x7a> movzwl -0x6(%ebp),%eax
002023d8 <escribir_Pantalla+0x7e> lea    (%edx,%eax,1),%ebx
002023db <escribir_Pantalla+0x81> movzwl -0x28(%ebp),%edx
002023df <escribir_Pantalla+0x85> mov    %edx,%eax
002023e1 <escribir_Pantalla+0x87> shl    $0x2,%eax
002023e4 <escribir_Pantalla+0x8a> add    %edx,%eax
002023e6 <escribir_Pantalla+0x8c> shl    $0x4,%eax
002023e9 <escribir_Pantalla+0x8f> add    %ebx,%eax
002023eb <escribir_Pantalla+0x91> lea    (%eax,%eax,1),%edx
002023ee <escribir_Pantalla+0x94> add    $0x30,%ecx
002023f1 <escribir_Pantalla+0x97> mov    0x8(%ebp),%eax
002023f4 <escribir_Pantalla+0x9a> mov    %cl,(%eax,%edx,1)
002023f7 <escribir_Pantalla+0x9d> movzwl -0x2c(%ebp),%edx
002023fb <escribir_Pantalla+0xa1> movzwl -0x6(%ebp),%eax
002023ff <escribir_Pantalla+0xa5> add    %edx,%eax
00202401 <escribir_Pantalla+0xa7> add    %eax,%eax
00202403 <escribir_Pantalla+0xa9> lea    0x1(%eax),%ecx
00202406 <escribir_Pantalla+0xac> movzwl -0x28(%ebp),%edx
0020240a <escribir_Pantalla+0xb0> mov    %edx,%eax
0020240c <escribir_Pantalla+0xb2> shl    $0x2,%eax
0020240f <escribir_Pantalla+0xb5> add    %edx,%eax
00202411 <escribir_Pantalla+0xb7> shl    $0x5,%eax
00202414 <escribir_Pantalla+0xba> lea    (%ecx,%eax,1),%edx
00202417 <escribir_Pantalla+0xbd> mov    0x8(%ebp),%eax
0020241a <escribir_Pantalla+0xc0> movb   $0x7,(%eax,%edx,1)
0020241e <escribir_Pantalla+0xc4> movzwl -0x6(%ebp),%eax
00202422 <escribir_Pantalla+0xc8> add    $0x1,%eax
00202425 <escribir_Pantalla+0xcb> mov    %ax,-0x6(%ebp)
00202429 <escribir_Pantalla+0xcf> cmpw   $0xf,-0x6(%ebp)
0020242e <escribir_Pantalla+0xd4> jbe    002023c5 <escribir_Pantalla+0x6b>
00202430 <escribir_Pantalla+0xd6> movw   $0x0,-0x6(%ebp)
00202436 <escribir_Pantalla+0xdc> jmp    00202472 <escribir_Pantalla+0x118>
00202438 <escribir_Pantalla+0xde> movzwl -0x6(%ebp),%eax
0020243c <escribir_Pantalla+0xe2> movzwl -0x6(%ebp),%edx
00202440 <escribir_Pantalla+0xe6> add    $0x780,%edx
00202446 <escribir_Pantalla+0xec> lea    (%edx,%edx,1),%ecx
00202449 <escribir_Pantalla+0xef> movzbl -0x1a(%ebp,%eax,1),%edx
0020244e <escribir_Pantalla+0xf4> mov    0x8(%ebp),%eax
00202451 <escribir_Pantalla+0xf7> mov    %dl,(%eax,%ecx,1)
00202454 <escribir_Pantalla+0xfa> movzwl -0x6(%ebp),%eax
00202458 <escribir_Pantalla+0xfe> add    %eax,%eax
0020245a <escribir_Pantalla+0x100> lea    0xf01(%eax),%edx
00202460 <escribir_Pantalla+0x106> mov    0x8(%ebp),%eax
00202463 <escribir_Pantalla+0x109> movb   $0x7,(%eax,%edx,1)
00202467 <escribir_Pantalla+0x10d> movzwl -0x6(%ebp),%eax
0020246b <escribir_Pantalla+0x111> add    $0x1,%eax
0020246e <escribir_Pantalla+0x114> mov    %ax,-0x6(%ebp)
00202472 <escribir_Pantalla+0x118> movzwl -0x6(%ebp),%eax
00202476 <escribir_Pantalla+0x11c> cmp    -0x8(%ebp),%ax
0020247a <escribir_Pantalla+0x120> jb     00202438 <escribir_Pantalla+0xde>
0020247c <escribir_Pantalla+0x122> nop
0020247d <escribir_Pantalla+0x123> nop
0020247e <escribir_Pantalla+0x124> add    $0x28,%esp
00202481 <escribir_Pantalla+0x127> pop    %ebx
00202482 <escribir_Pantalla+0x128> pop    %ebp
00202483 <escribir_Pantalla+0x129> ret    
